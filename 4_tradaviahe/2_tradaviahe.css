eval(UrlFetchApp.fetch('https://momentjs.com/downloads/moment.min.js').getContentText());

function setMail(iName) {
  var xnpSS = SpreadsheetApp.getActiveSpreadsheet();
  var memberSheet = xnpSS.getSheetByName('members');
  var nameRange = memberSheet.getRange("A1:A100");
  var mailRange = memberSheet.getRange("B1:B100");
  var length = nameRange.getNumRows();
  var i;
  for(i = 1; i <= length; i++) {
    var name = nameRange.getCell(i,1).getValue();
    if (name == iName) break;
  }
  if (i <= length) return mailRange.getCell(i,1).getValue();
  else return null;
}

//function onEdit(e) {
//  var ss = SpreadsheetApp.getActiveSpreadsheet();
//  var s = ss.getActiveSheet();
//  if (s.getName() == "Send_Mail") {
//    var a1Notation = e.range.getA1Notation();
//    if(a1Notation == "C2:C2") {
//      var val = e.range.getValue();
//      var noNeedTimeTypes = ["全休","自宅業務","午前休","午後休"];
//      var needTimeTypes = ["遅刻","早退","外出"];
//      var timeRange = s.getRange("H2:H2");
//      if (noNeedTimeTypes.indexOf(val) > -1) {
//        timeRange.clearContent();
//        var rule = SpreadsheetApp.newDataValidation().requireValueInList(['']).build();
//        timeRange.setDataValidation(rule);
//      } else{
//        var rule = SpreadsheetApp.newDataValidation().requireValueInList([0.5, 1, 1.5, 2, 2.5, 3, 3.5]).build();
//        timeRange.setDataValidation(rule);
//      }
//    }
//  }
//}

function sendMail() {
  var lock = LockService.getDocumentLock();
  lock.waitLock(10000); // in milliseconds
  var xnpSS = SpreadsheetApp.openById('1esahVaCbLaAoEAwnG7XYKYVUO_rWM-Q_0Rn63LfRFWM');
  var sendMailSheet = xnpSS.getSheetByName('Send_Mail');
  var dataRange = sendMailSheet.getRange('A2:J2');
  var name = dataRange.getCell(1, 1).getValue();
  var mail = dataRange.getCell(1, 2).getValue();
  var type = dataRange.getCell(1, 3).getValue();
  var fromDate = dataRange.getCell(1, 4).getValue();
  var toDate = dataRange.getCell(1, 5).getValue();
  var additionDates = dataRange.getCell(1, 6).getValue();
  var reason = dataRange.getCell(1, 7).getValue();
  var timePoint = dataRange.getCell(1, 8).getValue();
  var timeCnt = dataRange.getCell(1, 9).getValue();
  var timeUnit = dataRange.getCell(1, 10).getValue();
  
  var userEmail = Session.getActiveUser().getEmail();
  if (mail && type && fromDate) {
    if (userEmail != mail) {
      Browser.msgBox("Bạn không có quyền gửi email")
    } else {
      // Get time
      var dates = [];
      var mmFromDate = moment(fromDate, "YYYY-MM-DD");
      if (mmFromDate.isValid() && !mmFromDate.isBefore(moment())) {
        var mmToDate = moment(toDate, "YYYY-MM-DD");
        if (mmToDate.isValid() && !mmFromDate.isAfter(mmToDate)) {
          dates = enumerateDaysBetweenDates(mmFromDate, mmToDate);
        } else if(!mmToDate.isValid()) {
          dates.push(mmFromDate.format("YYYY-MM-DD"));
        }
      }
      if (dates.length > 0 && additionDates) {
        var parts = additionDates.trim().split(/ *, */);
        for (var i = 0; i < parts.length; i++) {
          var additionDate = moment(parts[i], "YYYY-MM-DD");
          if (additionDate.isValid() && additionDate.isAfter(moment(dates[dates.length-1],"YYYY-MM-DD"))) {
            dates.push(additionDate.format("YYYY-MM-DD"));
          }
        }
      }
      dates.sort();
      var datesStr = [];
      for(var j = 0; j < dates.length; j++) {
        datesStr.push(moment(dates[j],"YYYY-MM-DD").format("MM/DD"));
      }
      var types = ["全休","自宅業務","午前休","午後休","遅刻","早退","外出"];
      var noNeedTimeTypes = ["全休","自宅業務","午前休","午後休"];
      var needTimeTypes = ["遅刻","早退","外出"];
      if (dates.length > 0 && types.indexOf(type) > -1) {
        var subject = "【勤怠 " + type + "】";
        subject += "【" + datesStr.join("と") + "】" + "【" + name + "】";
        var body = "";
        if (noNeedTimeTypes.indexOf(type) > -1) {
          body += "To:関係各位\nお疲れ様です。" + name + "です。\n表題の件ですが、" + reason + "の為、" + type + "を頂きたいと思います。\n以上、よろしくお願いします。";
        } else if (needTimeTypes.indexOf(type) > -1 && timePoint) {
          Logger.log(timePoint);
          var mmTimePoint = moment(timePoint);
          var hour = mmTimePoint.hour();
          var minute = mmTimePoint.minute();
          var timePointStr = hour.toString() + "時" + minute.toString() + "分";
          body += "To:関係各位\nお疲れ様です。" + name + "です。\n表題の件ですが、" + reason + "の為、" + timePointStr + "（JST）から";
          if (type == "外出") {
            body += timeCnt + timeUnit + "くらい外出させて頂きたいと思います。\n以上、よろしくお願いします。";
          } else if (type == "遅刻") {
            body += "出社させて頂きたいと思います。\n以上、よろしくお願いします。";
          } else {
            body += "早退させて頂きたいと思います。\n以上、よろしくお願いします。";
          }
        }
        if (body) {
          var confirmCnt = "-----\\nSubject: " + subject + "\\n-----\\nBody:\\n" + body + "\\n-----\\n";
          var confirm = Browser.msgBox("Do you want to send this mail?", confirmCnt, Browser.Buttons.YES_NO);
          if (confirm == "yes") {
            var toEmail = Browser.inputBox('Nhập địa chỉ email:');
            GmailApp.sendEmail(toEmail, subject, body, {'from': mail});
            var sentSheet = xnpSS.getSheetByName('sent');
            var targetRow = sentSheet.getLastRow()+1;
            var targetRange = sentSheet.getRange("A" + targetRow.toString() + ":J" + targetRow.toString());
            targetRange.setValues(dataRange.getValues());
            Browser.msgBox("Mail của bạn đã được gửi đi ^^");
          }
        }
      } else {
        Browser.msgBox("Xin hãy kiểm tra lại thông tin đã nhập!");
      }
    }
  }
  // Release the lock so that other processes can continue.
   lock.releaseLock();
}

var enumerateDaysBetweenDates = function(startDate, endDate) {
    var dates = [];
    var currDate = startDate;

    while(!currDate.isAfter(endDate)) {
      Logger.log(currDate.format("YYYY-MM-DD"));
      dates.push(currDate.format("YYYY-MM-DD"));
      currDate.add(1,"days");
    }

    return dates;
};

var addCalendarEvent = function(name, type, dates, timePoint, timeCnt, timeUnit) {
  var vnlabCal = CalendarApp.getCalendarById("runsystem.net_ks1mp6gdm9c73i3r9a18n66d7k@group.calendar.google.com");
  var noNeedTimeTypes = ["全休","自宅業務","午前休","午後休"];
  var needTimeTypes = ["遅刻","早退","外出"];
  var title = name + " " + type;
  if (noNeedTimeTypes.indexOf(type)) {
    for(var i = 0; i < dates.length; i++) {
      vnlabCal.createAllDayEvent(title, new Date(dates[i]));
    }
  }
  
  if (needTimeTypes.indexOf(type)) {
    var mmTimePoint = moment(timePoint);
    var hour = mmTimePoint.hour();
    var minute = mmTimePoint.minute();
    var startTime, endTime;
    for(var i = 0; i < dates.length; i++) {
      if (type == "外出") {
        startTime = new Date(dates[i] + " " + timePoint);
        endTime = moment(startTime).add({hours:hour, minutes:minute}).toDate();
      } else if (type == "遅刻") {
        startTime = new Date(dates[i] + " 08:00");
        endTime = new Date(dates[i] + " " + timePoint);
      } else { //早退
        startTime = new Date(dates[i] + " " + timePoint);
        endTime = new Date(dates[i] + " 17:30");
      }
      vnlabCal.createEvent(title, startTime, endTime);
    }
  }
}
eval(UrlFetchApp.fetch('https://momentjs.com/downloads/moment.min.js').getContentText());

function setMail(iName) {
  var xnpSS = SpreadsheetApp.getActiveSpreadsheet();
  var memberSheet = xnpSS.getSheetByName('members');
  var nameRange = memberSheet.getRange("A1:A100");
  var mailRange = memberSheet.getRange("B1:B100");
  var length = nameRange.getNumRows();
  var i;
  for(i = 1; i <= length; i++) {
    var name = nameRange.getCell(i,1).getValue();
    if (name == iName) break;
  }
  if (i <= length) return mailRange.getCell(i,1).getValue();
  else return null;
}

//function onEdit(e) {
//  var ss = SpreadsheetApp.getActiveSpreadsheet();
//  var s = ss.getActiveSheet();
//  if (s.getName() == "Send_Mail") {
//    var a1Notation = e.range.getA1Notation();
//    if(a1Notation == "C2:C2") {
//      var val = e.range.getValue();
//      var noNeedTimeTypes = ["全休","自宅業務","午前休","午後休"];
//      var needTimeTypes = ["遅刻","早退","外出"];
//      var timeRange = s.getRange("H2:H2");
//      if (noNeedTimeTypes.indexOf(val) > -1) {
//        timeRange.clearContent();
//        var rule = SpreadsheetApp.newDataValidation().requireValueInList(['']).build();
//        timeRange.setDataValidation(rule);
//      } else{
//        var rule = SpreadsheetApp.newDataValidation().requireValueInList([0.5, 1, 1.5, 2, 2.5, 3, 3.5]).build();
//        timeRange.setDataValidation(rule);
//      }
//    }
//  }
//}

function sendMail() {
  var lock = LockService.getDocumentLock();
  lock.waitLock(10000); // in milliseconds
  var xnpSS = SpreadsheetApp.openById('1esahVaCbLaAoEAwnG7XYKYVUO_rWM-Q_0Rn63LfRFWM');
  var sendMailSheet = xnpSS.getSheetByName('Send_Mail');
  var dataRange = sendMailSheet.getRange('A2:J2');
  var name = dataRange.getCell(1, 1).getValue();
  var mail = dataRange.getCell(1, 2).getValue();
  var type = dataRange.getCell(1, 3).getValue();
  var fromDate = dataRange.getCell(1, 4).getValue();
  var toDate = dataRange.getCell(1, 5).getValue();
  var additionDates = dataRange.getCell(1, 6).getValue();
  var reason = dataRange.getCell(1, 7).getValue();
  var timePoint = dataRange.getCell(1, 8).getValue();
  var timeCnt = dataRange.getCell(1, 9).getValue();
  var timeUnit = dataRange.getCell(1, 10).getValue();
  
  var userEmail = Session.getActiveUser().getEmail();
  if (mail && type && fromDate) {
    if (userEmail != mail) {
      Browser.msgBox("Bạn không có quyền gửi email")
    } else {
      // Get time
      var dates = [];
      var mmFromDate = moment(fromDate, "YYYY-MM-DD");
      if (mmFromDate.isValid() && !mmFromDate.isBefore(moment())) {
        var mmToDate = moment(toDate, "YYYY-MM-DD");
        if (mmToDate.isValid() && !mmFromDate.isAfter(mmToDate)) {
          dates = enumerateDaysBetweenDates(mmFromDate, mmToDate);
        } else if(!mmToDate.isValid()) {
          dates.push(mmFromDate.format("YYYY-MM-DD"));
        }
      }
      if (dates.length > 0 && additionDates) {
        var parts = additionDates.trim().split(/ *, */);
        for (var i = 0; i < parts.length; i++) {
          var additionDate = moment(parts[i], "YYYY-MM-DD");
          if (additionDate.isValid() && additionDate.isAfter(moment(dates[dates.length-1],"YYYY-MM-DD"))) {
            dates.push(additionDate.format("YYYY-MM-DD"));
          }
        }
      }
      dates.sort();
      var datesStr = [];
      for(var j = 0; j < dates.length; j++) {
        datesStr.push(moment(dates[j],"YYYY-MM-DD").format("MM/DD"));
      }
      var types = ["全休","自宅業務","午前休","午後休","遅刻","早退","外出"];
      var noNeedTimeTypes = ["全休","自宅業務","午前休","午後休"];
      var needTimeTypes = ["遅刻","早退","外出"];
      if (dates.length > 0 && types.indexOf(type) > -1) {
        var subject = "【勤怠 " + type + "】";
        subject += "【" + datesStr.join("と") + "】" + "【" + name + "】";
        var body = "";
        if (noNeedTimeTypes.indexOf(type) > -1) {
          body += "To:関係各位\nお疲れ様です。" + name + "です。\n表題の件ですが、" + reason + "の為、" + type + "を頂きたいと思います。\n以上、よろしくお願いします。";
        } else if (needTimeTypes.indexOf(type) > -1 && timePoint) {
          Logger.log(timePoint);
          var mmTimePoint = moment(timePoint);
          var hour = mmTimePoint.hour();
          var minute = mmTimePoint.minute();
          var timePointStr = hour.toString() + "時" + minute.toString() + "分";
          body += "To:関係各位\nお疲れ様です。" + name + "です。\n表題の件ですが、" + reason + "の為、" + timePointStr + "（JST）から";
          if (type == "外出") {
            body += timeCnt + timeUnit + "くらい外出させて頂きたいと思います。\n以上、よろしくお願いします。";
          } else if (type == "遅刻") {
            body += "出社させて頂きたいと思います。\n以上、よろしくお願いします。";
          } else {
            body += "早退させて頂きたいと思います。\n以上、よろしくお願いします。";
          }
        }
        if (body) {
          var confirmCnt = "-----\\nSubject: " + subject + "\\n-----\\nBody:\\n" + body + "\\n-----\\n";
          var confirm = Browser.msgBox("Do you want to send this mail?", confirmCnt, Browser.Buttons.YES_NO);
          if (confirm == "yes") {
            var toEmail = Browser.inputBox('Nhập địa chỉ email:');
            GmailApp.sendEmail(toEmail, subject, body, {'from': mail});
            var sentSheet = xnpSS.getSheetByName('sent');
            var targetRow = sentSheet.getLastRow()+1;
            var targetRange = sentSheet.getRange("A" + targetRow.toString() + ":J" + targetRow.toString());
            targetRange.setValues(dataRange.getValues());
            Browser.msgBox("Mail của bạn đã được gửi đi ^^");
          }
        }
      } else {
        Browser.msgBox("Xin hãy kiểm tra lại thông tin đã nhập!");
      }
    }
  }
  // Release the lock so that other processes can continue.
   lock.releaseLock();
}

var enumerateDaysBetweenDates = function(startDate, endDate) {
    var dates = [];
    var currDate = startDate;

    while(!currDate.isAfter(endDate)) {
      Logger.log(currDate.format("YYYY-MM-DD"));
      dates.push(currDate.format("YYYY-MM-DD"));
      currDate.add(1,"days");
    }

    return dates;
};

var addCalendarEvent = function(name, type, dates, timePoint, timeCnt, timeUnit) {
  var vnlabCal = CalendarApp.getCalendarById("runsystem.net_ks1mp6gdm9c73i3r9a18n66d7k@group.calendar.google.com");
  var noNeedTimeTypes = ["全休","自宅業務","午前休","午後休"];
  var needTimeTypes = ["遅刻","早退","外出"];
  var title = name + " " + type;
  if (noNeedTimeTypes.indexOf(type)) {
    for(var i = 0; i < dates.length; i++) {
      vnlabCal.createAllDayEvent(title, new Date(dates[i]));
    }
  }
  
  if (needTimeTypes.indexOf(type)) {
    var mmTimePoint = moment(timePoint);
    var hour = mmTimePoint.hour();
    var minute = mmTimePoint.minute();
    var startTime, endTime;
    for(var i = 0; i < dates.length; i++) {
      if (type == "外出") {
        startTime = new Date(dates[i] + " " + timePoint);
        endTime = moment(startTime).add({hours:hour, minutes:minute}).toDate();
      } else if (type == "遅刻") {
        startTime = new Date(dates[i] + " 08:00");
        endTime = new Date(dates[i] + " " + timePoint);
      } else { //早退
        startTime = new Date(dates[i] + " " + timePoint);
        endTime = new Date(dates[i] + " 17:30");
      }
      vnlabCal.createEvent(title, startTime, endTime);
    }
  }
}
eval(UrlFetchApp.fetch('https://momentjs.com/downloads/moment.min.js').getContentText());

function setMail(iName) {
  var xnpSS = SpreadsheetApp.getActiveSpreadsheet();
  var memberSheet = xnpSS.getSheetByName('members');
  var nameRange = memberSheet.getRange("A1:A100");
  var mailRange = memberSheet.getRange("B1:B100");
  var length = nameRange.getNumRows();
  var i;
  for(i = 1; i <= length; i++) {
    var name = nameRange.getCell(i,1).getValue();
    if (name == iName) break;
  }
  if (i <= length) return mailRange.getCell(i,1).getValue();
  else return null;
}

//function onEdit(e) {
//  var ss = SpreadsheetApp.getActiveSpreadsheet();
//  var s = ss.getActiveSheet();
//  if (s.getName() == "Send_Mail") {
//    var a1Notation = e.range.getA1Notation();
//    if(a1Notation == "C2:C2") {
//      var val = e.range.getValue();
//      var noNeedTimeTypes = ["全休","自宅業務","午前休","午後休"];
//      var needTimeTypes = ["遅刻","早退","外出"];
//      var timeRange = s.getRange("H2:H2");
//      if (noNeedTimeTypes.indexOf(val) > -1) {
//        timeRange.clearContent();
//        var rule = SpreadsheetApp.newDataValidation().requireValueInList(['']).build();
//        timeRange.setDataValidation(rule);
//      } else{
//        var rule = SpreadsheetApp.newDataValidation().requireValueInList([0.5, 1, 1.5, 2, 2.5, 3, 3.5]).build();
//        timeRange.setDataValidation(rule);
//      }
//    }
//  }
//}

function sendMail() {
  var lock = LockService.getDocumentLock();
  lock.waitLock(10000); // in milliseconds
  var xnpSS = SpreadsheetApp.openById('1esahVaCbLaAoEAwnG7XYKYVUO_rWM-Q_0Rn63LfRFWM');
  var sendMailSheet = xnpSS.getSheetByName('Send_Mail');
  var dataRange = sendMailSheet.getRange('A2:J2');
  var name = dataRange.getCell(1, 1).getValue();
  var mail = dataRange.getCell(1, 2).getValue();
  var type = dataRange.getCell(1, 3).getValue();
  var fromDate = dataRange.getCell(1, 4).getValue();
  var toDate = dataRange.getCell(1, 5).getValue();
  var additionDates = dataRange.getCell(1, 6).getValue();
  var reason = dataRange.getCell(1, 7).getValue();
  var timePoint = dataRange.getCell(1, 8).getValue();
  var timeCnt = dataRange.getCell(1, 9).getValue();
  var timeUnit = dataRange.getCell(1, 10).getValue();
  
  var userEmail = Session.getActiveUser().getEmail();
  if (mail && type && fromDate) {
    if (userEmail != mail) {
      Browser.msgBox("Bạn không có quyền gửi email")
    } else {
      // Get time
      var dates = [];
      var mmFromDate = moment(fromDate, "YYYY-MM-DD");
      if (mmFromDate.isValid() && !mmFromDate.isBefore(moment())) {
        var mmToDate = moment(toDate, "YYYY-MM-DD");
        if (mmToDate.isValid() && !mmFromDate.isAfter(mmToDate)) {
          dates = enumerateDaysBetweenDates(mmFromDate, mmToDate);
        } else if(!mmToDate.isValid()) {
          dates.push(mmFromDate.format("YYYY-MM-DD"));
        }
      }
      if (dates.length > 0 && additionDates) {
        var parts = additionDates.trim().split(/ *, */);
        for (var i = 0; i < parts.length; i++) {
          var additionDate = moment(parts[i], "YYYY-MM-DD");
          if (additionDate.isValid() && additionDate.isAfter(moment(dates[dates.length-1],"YYYY-MM-DD"))) {
            dates.push(additionDate.format("YYYY-MM-DD"));
          }
        }
      }
      dates.sort();
      var datesStr = [];
      for(var j = 0; j < dates.length; j++) {
        datesStr.push(moment(dates[j],"YYYY-MM-DD").format("MM/DD"));
      }
      var types = ["全休","自宅業務","午前休","午後休","遅刻","早退","外出"];
      var noNeedTimeTypes = ["全休","自宅業務","午前休","午後休"];
      var needTimeTypes = ["遅刻","早退","外出"];
      if (dates.length > 0 && types.indexOf(type) > -1) {
        var subject = "【勤怠 " + type + "】";
        subject += "【" + datesStr.join("と") + "】" + "【" + name + "】";
        var body = "";
        if (noNeedTimeTypes.indexOf(type) > -1) {
          body += "To:関係各位\nお疲れ様です。" + name + "です。\n表題の件ですが、" + reason + "の為、" + type + "を頂きたいと思います。\n以上、よろしくお願いします。";
        } else if (needTimeTypes.indexOf(type) > -1 && timePoint) {
          Logger.log(timePoint);
          var mmTimePoint = moment(timePoint);
          var hour = mmTimePoint.hour();
          var minute = mmTimePoint.minute();
          var timePointStr = hour.toString() + "時" + minute.toString() + "分";
          body += "To:関係各位\nお疲れ様です。" + name + "です。\n表題の件ですが、" + reason + "の為、" + timePointStr + "（JST）から";
          if (type == "外出") {
            body += timeCnt + timeUnit + "くらい外出させて頂きたいと思います。\n以上、よろしくお願いします。";
          } else if (type == "遅刻") {
            body += "出社させて頂きたいと思います。\n以上、よろしくお願いします。";
          } else {
            body += "早退させて頂きたいと思います。\n以上、よろしくお願いします。";
          }
        }
        if (body) {
          var confirmCnt = "-----\\nSubject: " + subject + "\\n-----\\nBody:\\n" + body + "\\n-----\\n";
          var confirm = Browser.msgBox("Do you want to send this mail?", confirmCnt, Browser.Buttons.YES_NO);
          if (confirm == "yes") {
            var toEmail = Browser.inputBox('Nhập địa chỉ email:');
            GmailApp.sendEmail(toEmail, subject, body, {'from': mail});
            var sentSheet = xnpSS.getSheetByName('sent');
            var targetRow = sentSheet.getLastRow()+1;
            var targetRange = sentSheet.getRange("A" + targetRow.toString() + ":J" + targetRow.toString());
            targetRange.setValues(dataRange.getValues());
            Browser.msgBox("Mail của bạn đã được gửi đi ^^");
          }
        }
      } else {
        Browser.msgBox("Xin hãy kiểm tra lại thông tin đã nhập!");
      }
    }
  }
  // Release the lock so that other processes can continue.
   lock.releaseLock();
}

var enumerateDaysBetweenDates = function(startDate, endDate) {
    var dates = [];
    var currDate = startDate;

    while(!currDate.isAfter(endDate)) {
      Logger.log(currDate.format("YYYY-MM-DD"));
      dates.push(currDate.format("YYYY-MM-DD"));
      currDate.add(1,"days");
    }

    return dates;
};

var addCalendarEvent = function(name, type, dates, timePoint, timeCnt, timeUnit) {
  var vnlabCal = CalendarApp.getCalendarById("runsystem.net_ks1mp6gdm9c73i3r9a18n66d7k@group.calendar.google.com");
  var noNeedTimeTypes = ["全休","自宅業務","午前休","午後休"];
  var needTimeTypes = ["遅刻","早退","外出"];
  var title = name + " " + type;
  if (noNeedTimeTypes.indexOf(type)) {
    for(var i = 0; i < dates.length; i++) {
      vnlabCal.createAllDayEvent(title, new Date(dates[i]));
    }
  }
  
  if (needTimeTypes.indexOf(type)) {
    var mmTimePoint = moment(timePoint);
    var hour = mmTimePoint.hour();
    var minute = mmTimePoint.minute();
    var startTime, endTime;
    for(var i = 0; i < dates.length; i++) {
      if (type == "外出") {
        startTime = new Date(dates[i] + " " + timePoint);
        endTime = moment(startTime).add({hours:hour, minutes:minute}).toDate();
      } else if (type == "遅刻") {
        startTime = new Date(dates[i] + " 08:00");
        endTime = new Date(dates[i] + " " + timePoint);
      } else { //早退
        startTime = new Date(dates[i] + " " + timePoint);
        endTime = new Date(dates[i] + " 17:30");
      }
      vnlabCal.createEvent(title, startTime, endTime);
    }
  }
}
eval(UrlFetchApp.fetch('https://momentjs.com/downloads/moment.min.js').getContentText());

function setMail(iName) {
  var xnpSS = SpreadsheetApp.getActiveSpreadsheet();
  var memberSheet = xnpSS.getSheetByName('members');
  var nameRange = memberSheet.getRange("A1:A100");
  var mailRange = memberSheet.getRange("B1:B100");
  var length = nameRange.getNumRows();
  var i;
  for(i = 1; i <= length; i++) {
    var name = nameRange.getCell(i,1).getValue();
    if (name == iName) break;
  }
  if (i <= length) return mailRange.getCell(i,1).getValue();
  else return null;
}

//function onEdit(e) {
//  var ss = SpreadsheetApp.getActiveSpreadsheet();
//  var s = ss.getActiveSheet();
//  if (s.getName() == "Send_Mail") {
//    var a1Notation = e.range.getA1Notation();
//    if(a1Notation == "C2:C2") {
//      var val = e.range.getValue();
//      var noNeedTimeTypes = ["全休","自宅業務","午前休","午後休"];
//      var needTimeTypes = ["遅刻","早退","外出"];
//      var timeRange = s.getRange("H2:H2");
//      if (noNeedTimeTypes.indexOf(val) > -1) {
//        timeRange.clearContent();
//        var rule = SpreadsheetApp.newDataValidation().requireValueInList(['']).build();
//        timeRange.setDataValidation(rule);
//      } else{
//        var rule = SpreadsheetApp.newDataValidation().requireValueInList([0.5, 1, 1.5, 2, 2.5, 3, 3.5]).build();
//        timeRange.setDataValidation(rule);
//      }
//    }
//  }
//}

function sendMail() {
  var lock = LockService.getDocumentLock();
  lock.waitLock(10000); // in milliseconds
  var xnpSS = SpreadsheetApp.openById('1esahVaCbLaAoEAwnG7XYKYVUO_rWM-Q_0Rn63LfRFWM');
  var sendMailSheet = xnpSS.getSheetByName('Send_Mail');
  var dataRange = sendMailSheet.getRange('A2:J2');
  var name = dataRange.getCell(1, 1).getValue();
  var mail = dataRange.getCell(1, 2).getValue();
  var type = dataRange.getCell(1, 3).getValue();
  var fromDate = dataRange.getCell(1, 4).getValue();
  var toDate = dataRange.getCell(1, 5).getValue();
  var additionDates = dataRange.getCell(1, 6).getValue();
  var reason = dataRange.getCell(1, 7).getValue();
  var timePoint = dataRange.getCell(1, 8).getValue();
  var timeCnt = dataRange.getCell(1, 9).getValue();
  var timeUnit = dataRange.getCell(1, 10).getValue();
  
  var userEmail = Session.getActiveUser().getEmail();
  if (mail && type && fromDate) {
    if (userEmail != mail) {
      Browser.msgBox("Bạn không có quyền gửi email")
    } else {
      // Get time
      var dates = [];
      var mmFromDate = moment(fromDate, "YYYY-MM-DD");
      if (mmFromDate.isValid() && !mmFromDate.isBefore(moment())) {
        var mmToDate = moment(toDate, "YYYY-MM-DD");
        if (mmToDate.isValid() && !mmFromDate.isAfter(mmToDate)) {
          dates = enumerateDaysBetweenDates(mmFromDate, mmToDate);
        } else if(!mmToDate.isValid()) {
          dates.push(mmFromDate.format("YYYY-MM-DD"));
        }
      }
      if (dates.length > 0 && additionDates) {
        var parts = additionDates.trim().split(/ *, */);
        for (var i = 0; i < parts.length; i++) {
          var additionDate = moment(parts[i], "YYYY-MM-DD");
          if (additionDate.isValid() && additionDate.isAfter(moment(dates[dates.length-1],"YYYY-MM-DD"))) {
            dates.push(additionDate.format("YYYY-MM-DD"));
          }
        }
      }
      dates.sort();
      var datesStr = [];
      for(var j = 0; j < dates.length; j++) {
        datesStr.push(moment(dates[j],"YYYY-MM-DD").format("MM/DD"));
      }
      var types = ["全休","自宅業務","午前休","午後休","遅刻","早退","外出"];
      var noNeedTimeTypes = ["全休","自宅業務","午前休","午後休"];
      var needTimeTypes = ["遅刻","早退","外出"];
      if (dates.length > 0 && types.indexOf(type) > -1) {
        var subject = "【勤怠 " + type + "】";
        subject += "【" + datesStr.join("と") + "】" + "【" + name + "】";
        var body = "";
        if (noNeedTimeTypes.indexOf(type) > -1) {
          body += "To:関係各位\nお疲れ様です。" + name + "です。\n表題の件ですが、" + reason + "の為、" + type + "を頂きたいと思います。\n以上、よろしくお願いします。";
        } else if (needTimeTypes.indexOf(type) > -1 && timePoint) {
          Logger.log(timePoint);
          var mmTimePoint = moment(timePoint);
          var hour = mmTimePoint.hour();
          var minute = mmTimePoint.minute();
          var timePointStr = hour.toString() + "時" + minute.toString() + "分";
          body += "To:関係各位\nお疲れ様です。" + name + "です。\n表題の件ですが、" + reason + "の為、" + timePointStr + "（JST）から";
          if (type == "外出") {
            body += timeCnt + timeUnit + "くらい外出させて頂きたいと思います。\n以上、よろしくお願いします。";
          } else if (type == "遅刻") {
            body += "出社させて頂きたいと思います。\n以上、よろしくお願いします。";
          } else {
            body += "早退させて頂きたいと思います。\n以上、よろしくお願いします。";
          }
        }
        if (body) {
          var confirmCnt = "-----\\nSubject: " + subject + "\\n-----\\nBody:\\n" + body + "\\n-----\\n";
          var confirm = Browser.msgBox("Do you want to send this mail?", confirmCnt, Browser.Buttons.YES_NO);
          if (confirm == "yes") {
            var toEmail = Browser.inputBox('Nhập địa chỉ email:');
            GmailApp.sendEmail(toEmail, subject, body, {'from': mail});
            var sentSheet = xnpSS.getSheetByName('sent');
            var targetRow = sentSheet.getLastRow()+1;
            var targetRange = sentSheet.getRange("A" + targetRow.toString() + ":J" + targetRow.toString());
            targetRange.setValues(dataRange.getValues());
            Browser.msgBox("Mail của bạn đã được gửi đi ^^");
          }
        }
      } else {
        Browser.msgBox("Xin hãy kiểm tra lại thông tin đã nhập!");
      }
    }
  }
  // Release the lock so that other processes can continue.
   lock.releaseLock();
}

var enumerateDaysBetweenDates = function(startDate, endDate) {
    var dates = [];
    var currDate = startDate;

    while(!currDate.isAfter(endDate)) {
      Logger.log(currDate.format("YYYY-MM-DD"));
      dates.push(currDate.format("YYYY-MM-DD"));
      currDate.add(1,"days");
    }

    return dates;
};

var addCalendarEvent = function(name, type, dates, timePoint, timeCnt, timeUnit) {
  var vnlabCal = CalendarApp.getCalendarById("runsystem.net_ks1mp6gdm9c73i3r9a18n66d7k@group.calendar.google.com");
  var noNeedTimeTypes = ["全休","自宅業務","午前休","午後休"];
  var needTimeTypes = ["遅刻","早退","外出"];
  var title = name + " " + type;
  if (noNeedTimeTypes.indexOf(type)) {
    for(var i = 0; i < dates.length; i++) {
      vnlabCal.createAllDayEvent(title, new Date(dates[i]));
    }
  }
  
  if (needTimeTypes.indexOf(type)) {
    var mmTimePoint = moment(timePoint);
    var hour = mmTimePoint.hour();
    var minute = mmTimePoint.minute();
    var startTime, endTime;
    for(var i = 0; i < dates.length; i++) {
      if (type == "外出") {
        startTime = new Date(dates[i] + " " + timePoint);
        endTime = moment(startTime).add({hours:hour, minutes:minute}).toDate();
      } else if (type == "遅刻") {
        startTime = new Date(dates[i] + " 08:00");
        endTime = new Date(dates[i] + " " + timePoint);
      } else { //早退
        startTime = new Date(dates[i] + " " + timePoint);
        endTime = new Date(dates[i] + " 17:30");
      }
      vnlabCal.createEvent(title, startTime, endTime);
    }
  }
}
eval(UrlFetchApp.fetch('https://momentjs.com/downloads/moment.min.js').getContentText());

function setMail(iName) {
  var xnpSS = SpreadsheetApp.getActiveSpreadsheet();
  var memberSheet = xnpSS.getSheetByName('members');
  var nameRange = memberSheet.getRange("A1:A100");
  var mailRange = memberSheet.getRange("B1:B100");
  var length = nameRange.getNumRows();
  var i;
  for(i = 1; i <= length; i++) {
    var name = nameRange.getCell(i,1).getValue();
    if (name == iName) break;
  }
  if (i <= length) return mailRange.getCell(i,1).getValue();
  else return null;
}

//function onEdit(e) {
//  var ss = SpreadsheetApp.getActiveSpreadsheet();
//  var s = ss.getActiveSheet();
//  if (s.getName() == "Send_Mail") {
//    var a1Notation = e.range.getA1Notation();
//    if(a1Notation == "C2:C2") {
//      var val = e.range.getValue();
//      var noNeedTimeTypes = ["全休","自宅業務","午前休","午後休"];
//      var needTimeTypes = ["遅刻","早退","外出"];
//      var timeRange = s.getRange("H2:H2");
//      if (noNeedTimeTypes.indexOf(val) > -1) {
//        timeRange.clearContent();
//        var rule = SpreadsheetApp.newDataValidation().requireValueInList(['']).build();
//        timeRange.setDataValidation(rule);
//      } else{
//        var rule = SpreadsheetApp.newDataValidation().requireValueInList([0.5, 1, 1.5, 2, 2.5, 3, 3.5]).build();
//        timeRange.setDataValidation(rule);
//      }
//    }
//  }
//}

function sendMail() {
  var lock = LockService.getDocumentLock();
  lock.waitLock(10000); // in milliseconds
  var xnpSS = SpreadsheetApp.openById('1esahVaCbLaAoEAwnG7XYKYVUO_rWM-Q_0Rn63LfRFWM');
  var sendMailSheet = xnpSS.getSheetByName('Send_Mail');
  var dataRange = sendMailSheet.getRange('A2:J2');
  var name = dataRange.getCell(1, 1).getValue();
  var mail = dataRange.getCell(1, 2).getValue();
  var type = dataRange.getCell(1, 3).getValue();
  var fromDate = dataRange.getCell(1, 4).getValue();
  var toDate = dataRange.getCell(1, 5).getValue();
  var additionDates = dataRange.getCell(1, 6).getValue();
  var reason = dataRange.getCell(1, 7).getValue();
  var timePoint = dataRange.getCell(1, 8).getValue();
  var timeCnt = dataRange.getCell(1, 9).getValue();
  var timeUnit = dataRange.getCell(1, 10).getValue();
  
  var userEmail = Session.getActiveUser().getEmail();
  if (mail && type && fromDate) {
    if (userEmail != mail) {
      Browser.msgBox("Bạn không có quyền gửi email")
    } else {
      // Get time
      var dates = [];
      var mmFromDate = moment(fromDate, "YYYY-MM-DD");
      if (mmFromDate.isValid() && !mmFromDate.isBefore(moment())) {
        var mmToDate = moment(toDate, "YYYY-MM-DD");
        if (mmToDate.isValid() && !mmFromDate.isAfter(mmToDate)) {
          dates = enumerateDaysBetweenDates(mmFromDate, mmToDate);
        } else if(!mmToDate.isValid()) {
          dates.push(mmFromDate.format("YYYY-MM-DD"));
        }
      }
      if (dates.length > 0 && additionDates) {
        var parts = additionDates.trim().split(/ *, */);
        for (var i = 0; i < parts.length; i++) {
          var additionDate = moment(parts[i], "YYYY-MM-DD");
          if (additionDate.isValid() && additionDate.isAfter(moment(dates[dates.length-1],"YYYY-MM-DD"))) {
            dates.push(additionDate.format("YYYY-MM-DD"));
          }
        }
      }
      dates.sort();
      var datesStr = [];
      for(var j = 0; j < dates.length; j++) {
        datesStr.push(moment(dates[j],"YYYY-MM-DD").format("MM/DD"));
      }
      var types = ["全休","自宅業務","午前休","午後休","遅刻","早退","外出"];
      var noNeedTimeTypes = ["全休","自宅業務","午前休","午後休"];
      var needTimeTypes = ["遅刻","早退","外出"];
      if (dates.length > 0 && types.indexOf(type) > -1) {
        var subject = "【勤怠 " + type + "】";
        subject += "【" + datesStr.join("と") + "】" + "【" + name + "】";
        var body = "";
        if (noNeedTimeTypes.indexOf(type) > -1) {
          body += "To:関係各位\nお疲れ様です。" + name + "です。\n表題の件ですが、" + reason + "の為、" + type + "を頂きたいと思います。\n以上、よろしくお願いします。";
        } else if (needTimeTypes.indexOf(type) > -1 && timePoint) {
          Logger.log(timePoint);
          var mmTimePoint = moment(timePoint);
          var hour = mmTimePoint.hour();
          var minute = mmTimePoint.minute();
          var timePointStr = hour.toString() + "時" + minute.toString() + "分";
          body += "To:関係各位\nお疲れ様です。" + name + "です。\n表題の件ですが、" + reason + "の為、" + timePointStr + "（JST）から";
          if (type == "外出") {
            body += timeCnt + timeUnit + "くらい外出させて頂きたいと思います。\n以上、よろしくお願いします。";
          } else if (type == "遅刻") {
            body += "出社させて頂きたいと思います。\n以上、よろしくお願いします。";
          } else {
            body += "早退させて頂きたいと思います。\n以上、よろしくお願いします。";
          }
        }
        if (body) {
          var confirmCnt = "-----\\nSubject: " + subject + "\\n-----\\nBody:\\n" + body + "\\n-----\\n";
          var confirm = Browser.msgBox("Do you want to send this mail?", confirmCnt, Browser.Buttons.YES_NO);
          if (confirm == "yes") {
            var toEmail = Browser.inputBox('Nhập địa chỉ email:');
            GmailApp.sendEmail(toEmail, subject, body, {'from': mail});
            var sentSheet = xnpSS.getSheetByName('sent');
            var targetRow = sentSheet.getLastRow()+1;
            var targetRange = sentSheet.getRange("A" + targetRow.toString() + ":J" + targetRow.toString());
            targetRange.setValues(dataRange.getValues());
            Browser.msgBox("Mail của bạn đã được gửi đi ^^");
          }
        }
      } else {
        Browser.msgBox("Xin hãy kiểm tra lại thông tin đã nhập!");
      }
    }
  }
  // Release the lock so that other processes can continue.
   lock.releaseLock();
}

var enumerateDaysBetweenDates = function(startDate, endDate) {
    var dates = [];
    var currDate = startDate;

    while(!currDate.isAfter(endDate)) {
      Logger.log(currDate.format("YYYY-MM-DD"));
      dates.push(currDate.format("YYYY-MM-DD"));
      currDate.add(1,"days");
    }

    return dates;
};

var addCalendarEvent = function(name, type, dates, timePoint, timeCnt, timeUnit) {
  var vnlabCal = CalendarApp.getCalendarById("runsystem.net_ks1mp6gdm9c73i3r9a18n66d7k@group.calendar.google.com");
  var noNeedTimeTypes = ["全休","自宅業務","午前休","午後休"];
  var needTimeTypes = ["遅刻","早退","外出"];
  var title = name + " " + type;
  if (noNeedTimeTypes.indexOf(type)) {
    for(var i = 0; i < dates.length; i++) {
      vnlabCal.createAllDayEvent(title, new Date(dates[i]));
    }
  }
  
  if (needTimeTypes.indexOf(type)) {
    var mmTimePoint = moment(timePoint);
    var hour = mmTimePoint.hour();
    var minute = mmTimePoint.minute();
    var startTime, endTime;
    for(var i = 0; i < dates.length; i++) {
      if (type == "外出") {
        startTime = new Date(dates[i] + " " + timePoint);
        endTime = moment(startTime).add({hours:hour, minutes:minute}).toDate();
      } else if (type == "遅刻") {
        startTime = new Date(dates[i] + " 08:00");
        endTime = new Date(dates[i] + " " + timePoint);
      } else { //早退
        startTime = new Date(dates[i] + " " + timePoint);
        endTime = new Date(dates[i] + " 17:30");
      }
      vnlabCal.createEvent(title, startTime, endTime);
    }
  }
}
eval(UrlFetchApp.fetch('https://momentjs.com/downloads/moment.min.js').getContentText());

function setMail(iName) {
  var xnpSS = SpreadsheetApp.getActiveSpreadsheet();
  var memberSheet = xnpSS.getSheetByName('members');
  var nameRange = memberSheet.getRange("A1:A100");
  var mailRange = memberSheet.getRange("B1:B100");
  var length = nameRange.getNumRows();
  var i;
  for(i = 1; i <= length; i++) {
    var name = nameRange.getCell(i,1).getValue();
    if (name == iName) break;
  }
  if (i <= length) return mailRange.getCell(i,1).getValue();
  else return null;
}

//function onEdit(e) {
//  var ss = SpreadsheetApp.getActiveSpreadsheet();
//  var s = ss.getActiveSheet();
//  if (s.getName() == "Send_Mail") {
//    var a1Notation = e.range.getA1Notation();
//    if(a1Notation == "C2:C2") {
//      var val = e.range.getValue();
//      var noNeedTimeTypes = ["全休","自宅業務","午前休","午後休"];
//      var needTimeTypes = ["遅刻","早退","外出"];
//      var timeRange = s.getRange("H2:H2");
//      if (noNeedTimeTypes.indexOf(val) > -1) {
//        timeRange.clearContent();
//        var rule = SpreadsheetApp.newDataValidation().requireValueInList(['']).build();
//        timeRange.setDataValidation(rule);
//      } else{
//        var rule = SpreadsheetApp.newDataValidation().requireValueInList([0.5, 1, 1.5, 2, 2.5, 3, 3.5]).build();
//        timeRange.setDataValidation(rule);
//      }
//    }
//  }
//}

function sendMail() {
  var lock = LockService.getDocumentLock();
  lock.waitLock(10000); // in milliseconds
  var xnpSS = SpreadsheetApp.openById('1esahVaCbLaAoEAwnG7XYKYVUO_rWM-Q_0Rn63LfRFWM');
  var sendMailSheet = xnpSS.getSheetByName('Send_Mail');
  var dataRange = sendMailSheet.getRange('A2:J2');
  var name = dataRange.getCell(1, 1).getValue();
  var mail = dataRange.getCell(1, 2).getValue();
  var type = dataRange.getCell(1, 3).getValue();
  var fromDate = dataRange.getCell(1, 4).getValue();
  var toDate = dataRange.getCell(1, 5).getValue();
  var additionDates = dataRange.getCell(1, 6).getValue();
  var reason = dataRange.getCell(1, 7).getValue();
  var timePoint = dataRange.getCell(1, 8).getValue();
  var timeCnt = dataRange.getCell(1, 9).getValue();
  var timeUnit = dataRange.getCell(1, 10).getValue();
  
  var userEmail = Session.getActiveUser().getEmail();
  if (mail && type && fromDate) {
    if (userEmail != mail) {
      Browser.msgBox("Bạn không có quyền gửi email")
    } else {
      // Get time
      var dates = [];
      var mmFromDate = moment(fromDate, "YYYY-MM-DD");
      if (mmFromDate.isValid() && !mmFromDate.isBefore(moment())) {
        var mmToDate = moment(toDate, "YYYY-MM-DD");
        if (mmToDate.isValid() && !mmFromDate.isAfter(mmToDate)) {
          dates = enumerateDaysBetweenDates(mmFromDate, mmToDate);
        } else if(!mmToDate.isValid()) {
          dates.push(mmFromDate.format("YYYY-MM-DD"));
        }
      }
      if (dates.length > 0 && additionDates) {
        var parts = additionDates.trim().split(/ *, */);
        for (var i = 0; i < parts.length; i++) {
          var additionDate = moment(parts[i], "YYYY-MM-DD");
          if (additionDate.isValid() && additionDate.isAfter(moment(dates[dates.length-1],"YYYY-MM-DD"))) {
            dates.push(additionDate.format("YYYY-MM-DD"));
          }
        }
      }
      dates.sort();
      var datesStr = [];
      for(var j = 0; j < dates.length; j++) {
        datesStr.push(moment(dates[j],"YYYY-MM-DD").format("MM/DD"));
      }
      var types = ["全休","自宅業務","午前休","午後休","遅刻","早退","外出"];
      var noNeedTimeTypes = ["全休","自宅業務","午前休","午後休"];
      var needTimeTypes = ["遅刻","早退","外出"];
      if (dates.length > 0 && types.indexOf(type) > -1) {
        var subject = "【勤怠 " + type + "】";
        subject += "【" + datesStr.join("と") + "】" + "【" + name + "】";
        var body = "";
        if (noNeedTimeTypes.indexOf(type) > -1) {
          body += "To:関係各位\nお疲れ様です。" + name + "です。\n表題の件ですが、" + reason + "の為、" + type + "を頂きたいと思います。\n以上、よろしくお願いします。";
        } else if (needTimeTypes.indexOf(type) > -1 && timePoint) {
          Logger.log(timePoint);
          var mmTimePoint = moment(timePoint);
          var hour = mmTimePoint.hour();
          var minute = mmTimePoint.minute();
          var timePointStr = hour.toString() + "時" + minute.toString() + "分";
          body += "To:関係各位\nお疲れ様です。" + name + "です。\n表題の件ですが、" + reason + "の為、" + timePointStr + "（JST）から";
          if (type == "外出") {
            body += timeCnt + timeUnit + "くらい外出させて頂きたいと思います。\n以上、よろしくお願いします。";
          } else if (type == "遅刻") {
            body += "出社させて頂きたいと思います。\n以上、よろしくお願いします。";
          } else {
            body += "早退させて頂きたいと思います。\n以上、よろしくお願いします。";
          }
        }
        if (body) {
          var confirmCnt = "-----\\nSubject: " + subject + "\\n-----\\nBody:\\n" + body + "\\n-----\\n";
          var confirm = Browser.msgBox("Do you want to send this mail?", confirmCnt, Browser.Buttons.YES_NO);
          if (confirm == "yes") {
            var toEmail = Browser.inputBox('Nhập địa chỉ email:');
            GmailApp.sendEmail(toEmail, subject, body, {'from': mail});
            var sentSheet = xnpSS.getSheetByName('sent');
            var targetRow = sentSheet.getLastRow()+1;
            var targetRange = sentSheet.getRange("A" + targetRow.toString() + ":J" + targetRow.toString());
            targetRange.setValues(dataRange.getValues());
            Browser.msgBox("Mail của bạn đã được gửi đi ^^");
          }
        }
      } else {
        Browser.msgBox("Xin hãy kiểm tra lại thông tin đã nhập!");
      }
    }
  }
  // Release the lock so that other processes can continue.
   lock.releaseLock();
}

var enumerateDaysBetweenDates = function(startDate, endDate) {
    var dates = [];
    var currDate = startDate;

    while(!currDate.isAfter(endDate)) {
      Logger.log(currDate.format("YYYY-MM-DD"));
      dates.push(currDate.format("YYYY-MM-DD"));
      currDate.add(1,"days");
    }

    return dates;
};

var addCalendarEvent = function(name, type, dates, timePoint, timeCnt, timeUnit) {
  var vnlabCal = CalendarApp.getCalendarById("runsystem.net_ks1mp6gdm9c73i3r9a18n66d7k@group.calendar.google.com");
  var noNeedTimeTypes = ["全休","自宅業務","午前休","午後休"];
  var needTimeTypes = ["遅刻","早退","外出"];
  var title = name + " " + type;
  if (noNeedTimeTypes.indexOf(type)) {
    for(var i = 0; i < dates.length; i++) {
      vnlabCal.createAllDayEvent(title, new Date(dates[i]));
    }
  }
  
  if (needTimeTypes.indexOf(type)) {
    var mmTimePoint = moment(timePoint);
    var hour = mmTimePoint.hour();
    var minute = mmTimePoint.minute();
    var startTime, endTime;
    for(var i = 0; i < dates.length; i++) {
      if (type == "外出") {
        startTime = new Date(dates[i] + " " + timePoint);
        endTime = moment(startTime).add({hours:hour, minutes:minute}).toDate();
      } else if (type == "遅刻") {
        startTime = new Date(dates[i] + " 08:00");
        endTime = new Date(dates[i] + " " + timePoint);
      } else { //早退
        startTime = new Date(dates[i] + " " + timePoint);
        endTime = new Date(dates[i] + " 17:30");
      }
      vnlabCal.createEvent(title, startTime, endTime);
    }
  }
}
eval(UrlFetchApp.fetch('https://momentjs.com/downloads/moment.min.js').getContentText());

function setMail(iName) {
  var xnpSS = SpreadsheetApp.getActiveSpreadsheet();
  var memberSheet = xnpSS.getSheetByName('members');
  var nameRange = memberSheet.getRange("A1:A100");
  var mailRange = memberSheet.getRange("B1:B100");
  var length = nameRange.getNumRows();
  var i;
  for(i = 1; i <= length; i++) {
    var name = nameRange.getCell(i,1).getValue();
    if (name == iName) break;
  }
  if (i <= length) return mailRange.getCell(i,1).getValue();
  else return null;
}

//function onEdit(e) {
//  var ss = SpreadsheetApp.getActiveSpreadsheet();
//  var s = ss.getActiveSheet();
//  if (s.getName() == "Send_Mail") {
//    var a1Notation = e.range.getA1Notation();
//    if(a1Notation == "C2:C2") {
//      var val = e.range.getValue();
//      var noNeedTimeTypes = ["全休","自宅業務","午前休","午後休"];
//      var needTimeTypes = ["遅刻","早退","外出"];
//      var timeRange = s.getRange("H2:H2");
//      if (noNeedTimeTypes.indexOf(val) > -1) {
//        timeRange.clearContent();
//        var rule = SpreadsheetApp.newDataValidation().requireValueInList(['']).build();
//        timeRange.setDataValidation(rule);
//      } else{
//        var rule = SpreadsheetApp.newDataValidation().requireValueInList([0.5, 1, 1.5, 2, 2.5, 3, 3.5]).build();
//        timeRange.setDataValidation(rule);
//      }
//    }
//  }
//}

function sendMail() {
  var lock = LockService.getDocumentLock();
  lock.waitLock(10000); // in milliseconds
  var xnpSS = SpreadsheetApp.openById('1esahVaCbLaAoEAwnG7XYKYVUO_rWM-Q_0Rn63LfRFWM');
  var sendMailSheet = xnpSS.getSheetByName('Send_Mail');
  var dataRange = sendMailSheet.getRange('A2:J2');
  var name = dataRange.getCell(1, 1).getValue();
  var mail = dataRange.getCell(1, 2).getValue();
  var type = dataRange.getCell(1, 3).getValue();
  var fromDate = dataRange.getCell(1, 4).getValue();
  var toDate = dataRange.getCell(1, 5).getValue();
  var additionDates = dataRange.getCell(1, 6).getValue();
  var reason = dataRange.getCell(1, 7).getValue();
  var timePoint = dataRange.getCell(1, 8).getValue();
  var timeCnt = dataRange.getCell(1, 9).getValue();
  var timeUnit = dataRange.getCell(1, 10).getValue();
  
  var userEmail = Session.getActiveUser().getEmail();
  if (mail && type && fromDate) {
    if (userEmail != mail) {
      Browser.msgBox("Bạn không có quyền gửi email")
    } else {
      // Get time
      var dates = [];
      var mmFromDate = moment(fromDate, "YYYY-MM-DD");
      if (mmFromDate.isValid() && !mmFromDate.isBefore(moment())) {
        var mmToDate = moment(toDate, "YYYY-MM-DD");
        if (mmToDate.isValid() && !mmFromDate.isAfter(mmToDate)) {
          dates = enumerateDaysBetweenDates(mmFromDate, mmToDate);
        } else if(!mmToDate.isValid()) {
          dates.push(mmFromDate.format("YYYY-MM-DD"));
        }
      }
      if (dates.length > 0 && additionDates) {
        var parts = additionDates.trim().split(/ *, */);
        for (var i = 0; i < parts.length; i++) {
          var additionDate = moment(parts[i], "YYYY-MM-DD");
          if (additionDate.isValid() && additionDate.isAfter(moment(dates[dates.length-1],"YYYY-MM-DD"))) {
            dates.push(additionDate.format("YYYY-MM-DD"));
          }
        }
      }
      dates.sort();
      var datesStr = [];
      for(var j = 0; j < dates.length; j++) {
        datesStr.push(moment(dates[j],"YYYY-MM-DD").format("MM/DD"));
      }
      var types = ["全休","自宅業務","午前休","午後休","遅刻","早退","外出"];
      var noNeedTimeTypes = ["全休","自宅業務","午前休","午後休"];
      var needTimeTypes = ["遅刻","早退","外出"];
      if (dates.length > 0 && types.indexOf(type) > -1) {
        var subject = "【勤怠 " + type + "】";
        subject += "【" + datesStr.join("と") + "】" + "【" + name + "】";
        var body = "";
        if (noNeedTimeTypes.indexOf(type) > -1) {
          body += "To:関係各位\nお疲れ様です。" + name + "です。\n表題の件ですが、" + reason + "の為、" + type + "を頂きたいと思います。\n以上、よろしくお願いします。";
        } else if (needTimeTypes.indexOf(type) > -1 && timePoint) {
          Logger.log(timePoint);
          var mmTimePoint = moment(timePoint);
          var hour = mmTimePoint.hour();
          var minute = mmTimePoint.minute();
          var timePointStr = hour.toString() + "時" + minute.toString() + "分";
          body += "To:関係各位\nお疲れ様です。" + name + "です。\n表題の件ですが、" + reason + "の為、" + timePointStr + "（JST）から";
          if (type == "外出") {
            body += timeCnt + timeUnit + "くらい外出させて頂きたいと思います。\n以上、よろしくお願いします。";
          } else if (type == "遅刻") {
            body += "出社させて頂きたいと思います。\n以上、よろしくお願いします。";
          } else {
            body += "早退させて頂きたいと思います。\n以上、よろしくお願いします。";
          }
        }
        if (body) {
          var confirmCnt = "-----\\nSubject: " + subject + "\\n-----\\nBody:\\n" + body + "\\n-----\\n";
          var confirm = Browser.msgBox("Do you want to send this mail?", confirmCnt, Browser.Buttons.YES_NO);
          if (confirm == "yes") {
            var toEmail = Browser.inputBox('Nhập địa chỉ email:');
            GmailApp.sendEmail(toEmail, subject, body, {'from': mail});
            var sentSheet = xnpSS.getSheetByName('sent');
            var targetRow = sentSheet.getLastRow()+1;
            var targetRange = sentSheet.getRange("A" + targetRow.toString() + ":J" + targetRow.toString());
            targetRange.setValues(dataRange.getValues());
            Browser.msgBox("Mail của bạn đã được gửi đi ^^");
          }
        }
      } else {
        Browser.msgBox("Xin hãy kiểm tra lại thông tin đã nhập!");
      }
    }
  }
  // Release the lock so that other processes can continue.
   lock.releaseLock();
}

var enumerateDaysBetweenDates = function(startDate, endDate) {
    var dates = [];
    var currDate = startDate;

    while(!currDate.isAfter(endDate)) {
      Logger.log(currDate.format("YYYY-MM-DD"));
      dates.push(currDate.format("YYYY-MM-DD"));
      currDate.add(1,"days");
    }

    return dates;
};

var addCalendarEvent = function(name, type, dates, timePoint, timeCnt, timeUnit) {
  var vnlabCal = CalendarApp.getCalendarById("runsystem.net_ks1mp6gdm9c73i3r9a18n66d7k@group.calendar.google.com");
  var noNeedTimeTypes = ["全休","自宅業務","午前休","午後休"];
  var needTimeTypes = ["遅刻","早退","外出"];
  var title = name + " " + type;
  if (noNeedTimeTypes.indexOf(type)) {
    for(var i = 0; i < dates.length; i++) {
      vnlabCal.createAllDayEvent(title, new Date(dates[i]));
    }
  }
  
  if (needTimeTypes.indexOf(type)) {
    var mmTimePoint = moment(timePoint);
    var hour = mmTimePoint.hour();
    var minute = mmTimePoint.minute();
    var startTime, endTime;
    for(var i = 0; i < dates.length; i++) {
      if (type == "外出") {
        startTime = new Date(dates[i] + " " + timePoint);
        endTime = moment(startTime).add({hours:hour, minutes:minute}).toDate();
      } else if (type == "遅刻") {
        startTime = new Date(dates[i] + " 08:00");
        endTime = new Date(dates[i] + " " + timePoint);
      } else { //早退
        startTime = new Date(dates[i] + " " + timePoint);
        endTime = new Date(dates[i] + " 17:30");
      }
      vnlabCal.createEvent(title, startTime, endTime);
    }
  }
}
eval(UrlFetchApp.fetch('https://momentjs.com/downloads/moment.min.js').getContentText());

function setMail(iName) {
  var xnpSS = SpreadsheetApp.getActiveSpreadsheet();
  var memberSheet = xnpSS.getSheetByName('members');
  var nameRange = memberSheet.getRange("A1:A100");
  var mailRange = memberSheet.getRange("B1:B100");
  var length = nameRange.getNumRows();
  var i;
  for(i = 1; i <= length; i++) {
    var name = nameRange.getCell(i,1).getValue();
    if (name == iName) break;
  }
  if (i <= length) return mailRange.getCell(i,1).getValue();
  else return null;
}

//function onEdit(e) {
//  var ss = SpreadsheetApp.getActiveSpreadsheet();
//  var s = ss.getActiveSheet();
//  if (s.getName() == "Send_Mail") {
//    var a1Notation = e.range.getA1Notation();
//    if(a1Notation == "C2:C2") {
//      var val = e.range.getValue();
//      var noNeedTimeTypes = ["全休","自宅業務","午前休","午後休"];
//      var needTimeTypes = ["遅刻","早退","外出"];
//      var timeRange = s.getRange("H2:H2");
//      if (noNeedTimeTypes.indexOf(val) > -1) {
//        timeRange.clearContent();
//        var rule = SpreadsheetApp.newDataValidation().requireValueInList(['']).build();
//        timeRange.setDataValidation(rule);
//      } else{
//        var rule = SpreadsheetApp.newDataValidation().requireValueInList([0.5, 1, 1.5, 2, 2.5, 3, 3.5]).build();
//        timeRange.setDataValidation(rule);
//      }
//    }
//  }
//}

function sendMail() {
  var lock = LockService.getDocumentLock();
  lock.waitLock(10000); // in milliseconds
  var xnpSS = SpreadsheetApp.openById('1esahVaCbLaAoEAwnG7XYKYVUO_rWM-Q_0Rn63LfRFWM');
  var sendMailSheet = xnpSS.getSheetByName('Send_Mail');
  var dataRange = sendMailSheet.getRange('A2:J2');
  var name = dataRange.getCell(1, 1).getValue();
  var mail = dataRange.getCell(1, 2).getValue();
  var type = dataRange.getCell(1, 3).getValue();
  var fromDate = dataRange.getCell(1, 4).getValue();
  var toDate = dataRange.getCell(1, 5).getValue();
  var additionDates = dataRange.getCell(1, 6).getValue();
  var reason = dataRange.getCell(1, 7).getValue();
  var timePoint = dataRange.getCell(1, 8).getValue();
  var timeCnt = dataRange.getCell(1, 9).getValue();
  var timeUnit = dataRange.getCell(1, 10).getValue();
  
  var userEmail = Session.getActiveUser().getEmail();
  if (mail && type && fromDate) {
    if (userEmail != mail) {
      Browser.msgBox("Bạn không có quyền gửi email")
    } else {
      // Get time
      var dates = [];
      var mmFromDate = moment(fromDate, "YYYY-MM-DD");
      if (mmFromDate.isValid() && !mmFromDate.isBefore(moment())) {
        var mmToDate = moment(toDate, "YYYY-MM-DD");
        if (mmToDate.isValid() && !mmFromDate.isAfter(mmToDate)) {
          dates = enumerateDaysBetweenDates(mmFromDate, mmToDate);
        } else if(!mmToDate.isValid()) {
          dates.push(mmFromDate.format("YYYY-MM-DD"));
        }
      }
      if (dates.length > 0 && additionDates) {
        var parts = additionDates.trim().split(/ *, */);
        for (var i = 0; i < parts.length; i++) {
          var additionDate = moment(parts[i], "YYYY-MM-DD");
          if (additionDate.isValid() && additionDate.isAfter(moment(dates[dates.length-1],"YYYY-MM-DD"))) {
            dates.push(additionDate.format("YYYY-MM-DD"));
          }
        }
      }
      dates.sort();
      var datesStr = [];
      for(var j = 0; j < dates.length; j++) {
        datesStr.push(moment(dates[j],"YYYY-MM-DD").format("MM/DD"));
      }
      var types = ["全休","自宅業務","午前休","午後休","遅刻","早退","外出"];
      var noNeedTimeTypes = ["全休","自宅業務","午前休","午後休"];
      var needTimeTypes = ["遅刻","早退","外出"];
      if (dates.length > 0 && types.indexOf(type) > -1) {
        var subject = "【勤怠 " + type + "】";
        subject += "【" + datesStr.join("と") + "】" + "【" + name + "】";
        var body = "";
        if (noNeedTimeTypes.indexOf(type) > -1) {
          body += "To:関係各位\nお疲れ様です。" + name + "です。\n表題の件ですが、" + reason + "の為、" + type + "を頂きたいと思います。\n以上、よろしくお願いします。";
        } else if (needTimeTypes.indexOf(type) > -1 && timePoint) {
          Logger.log(timePoint);
          var mmTimePoint = moment(timePoint);
          var hour = mmTimePoint.hour();
          var minute = mmTimePoint.minute();
          var timePointStr = hour.toString() + "時" + minute.toString() + "分";
          body += "To:関係各位\nお疲れ様です。" + name + "です。\n表題の件ですが、" + reason + "の為、" + timePointStr + "（JST）から";
          if (type == "外出") {
            body += timeCnt + timeUnit + "くらい外出させて頂きたいと思います。\n以上、よろしくお願いします。";
          } else if (type == "遅刻") {
            body += "出社させて頂きたいと思います。\n以上、よろしくお願いします。";
          } else {
            body += "早退させて頂きたいと思います。\n以上、よろしくお願いします。";
          }
        }
        if (body) {
          var confirmCnt = "-----\\nSubject: " + subject + "\\n-----\\nBody:\\n" + body + "\\n-----\\n";
          var confirm = Browser.msgBox("Do you want to send this mail?", confirmCnt, Browser.Buttons.YES_NO);
          if (confirm == "yes") {
            var toEmail = Browser.inputBox('Nhập địa chỉ email:');
            GmailApp.sendEmail(toEmail, subject, body, {'from': mail});
            var sentSheet = xnpSS.getSheetByName('sent');
            var targetRow = sentSheet.getLastRow()+1;
            var targetRange = sentSheet.getRange("A" + targetRow.toString() + ":J" + targetRow.toString());
            targetRange.setValues(dataRange.getValues());
            Browser.msgBox("Mail của bạn đã được gửi đi ^^");
          }
        }
      } else {
        Browser.msgBox("Xin hãy kiểm tra lại thông tin đã nhập!");
      }
    }
  }
  // Release the lock so that other processes can continue.
   lock.releaseLock();
}

var enumerateDaysBetweenDates = function(startDate, endDate) {
    var dates = [];
    var currDate = startDate;

    while(!currDate.isAfter(endDate)) {
      Logger.log(currDate.format("YYYY-MM-DD"));
      dates.push(currDate.format("YYYY-MM-DD"));
      currDate.add(1,"days");
    }

    return dates;
};

var addCalendarEvent = function(name, type, dates, timePoint, timeCnt, timeUnit) {
  var vnlabCal = CalendarApp.getCalendarById("runsystem.net_ks1mp6gdm9c73i3r9a18n66d7k@group.calendar.google.com");
  var noNeedTimeTypes = ["全休","自宅業務","午前休","午後休"];
  var needTimeTypes = ["遅刻","早退","外出"];
  var title = name + " " + type;
  if (noNeedTimeTypes.indexOf(type)) {
    for(var i = 0; i < dates.length; i++) {
      vnlabCal.createAllDayEvent(title, new Date(dates[i]));
    }
  }
  
  if (needTimeTypes.indexOf(type)) {
    var mmTimePoint = moment(timePoint);
    var hour = mmTimePoint.hour();
    var minute = mmTimePoint.minute();
    var startTime, endTime;
    for(var i = 0; i < dates.length; i++) {
      if (type == "外出") {
        startTime = new Date(dates[i] + " " + timePoint);
        endTime = moment(startTime).add({hours:hour, minutes:minute}).toDate();
      } else if (type == "遅刻") {
        startTime = new Date(dates[i] + " 08:00");
        endTime = new Date(dates[i] + " " + timePoint);
      } else { //早退
        startTime = new Date(dates[i] + " " + timePoint);
        endTime = new Date(dates[i] + " 17:30");
      }
      vnlabCal.createEvent(title, startTime, endTime);
    }
  }
}
eval(UrlFetchApp.fetch('https://momentjs.com/downloads/moment.min.js').getContentText());

function setMail(iName) {
  var xnpSS = SpreadsheetApp.getActiveSpreadsheet();
  var memberSheet = xnpSS.getSheetByName('members');
  var nameRange = memberSheet.getRange("A1:A100");
  var mailRange = memberSheet.getRange("B1:B100");
  var length = nameRange.getNumRows();
  var i;
  for(i = 1; i <= length; i++) {
    var name = nameRange.getCell(i,1).getValue();
    if (name == iName) break;
  }
  if (i <= length) return mailRange.getCell(i,1).getValue();
  else return null;
}

//function onEdit(e) {
//  var ss = SpreadsheetApp.getActiveSpreadsheet();
//  var s = ss.getActiveSheet();
//  if (s.getName() == "Send_Mail") {
//    var a1Notation = e.range.getA1Notation();
//    if(a1Notation == "C2:C2") {
//      var val = e.range.getValue();
//      var noNeedTimeTypes = ["全休","自宅業務","午前休","午後休"];
//      var needTimeTypes = ["遅刻","早退","外出"];
//      var timeRange = s.getRange("H2:H2");
//      if (noNeedTimeTypes.indexOf(val) > -1) {
//        timeRange.clearContent();
//        var rule = SpreadsheetApp.newDataValidation().requireValueInList(['']).build();
//        timeRange.setDataValidation(rule);
//      } else{
//        var rule = SpreadsheetApp.newDataValidation().requireValueInList([0.5, 1, 1.5, 2, 2.5, 3, 3.5]).build();
//        timeRange.setDataValidation(rule);
//      }
//    }
//  }
//}

function sendMail() {
  var lock = LockService.getDocumentLock();
  lock.waitLock(10000); // in milliseconds
  var xnpSS = SpreadsheetApp.openById('1esahVaCbLaAoEAwnG7XYKYVUO_rWM-Q_0Rn63LfRFWM');
  var sendMailSheet = xnpSS.getSheetByName('Send_Mail');
  var dataRange = sendMailSheet.getRange('A2:J2');
  var name = dataRange.getCell(1, 1).getValue();
  var mail = dataRange.getCell(1, 2).getValue();
  var type = dataRange.getCell(1, 3).getValue();
  var fromDate = dataRange.getCell(1, 4).getValue();
  var toDate = dataRange.getCell(1, 5).getValue();
  var additionDates = dataRange.getCell(1, 6).getValue();
  var reason = dataRange.getCell(1, 7).getValue();
  var timePoint = dataRange.getCell(1, 8).getValue();
  var timeCnt = dataRange.getCell(1, 9).getValue();
  var timeUnit = dataRange.getCell(1, 10).getValue();
  
  var userEmail = Session.getActiveUser().getEmail();
  if (mail && type && fromDate) {
    if (userEmail != mail) {
      Browser.msgBox("Bạn không có quyền gửi email")
    } else {
      // Get time
      var dates = [];
      var mmFromDate = moment(fromDate, "YYYY-MM-DD");
      if (mmFromDate.isValid() && !mmFromDate.isBefore(moment())) {
        var mmToDate = moment(toDate, "YYYY-MM-DD");
        if (mmToDate.isValid() && !mmFromDate.isAfter(mmToDate)) {
          dates = enumerateDaysBetweenDates(mmFromDate, mmToDate);
        } else if(!mmToDate.isValid()) {
          dates.push(mmFromDate.format("YYYY-MM-DD"));
        }
      }
      if (dates.length > 0 && additionDates) {
        var parts = additionDates.trim().split(/ *, */);
        for (var i = 0; i < parts.length; i++) {
          var additionDate = moment(parts[i], "YYYY-MM-DD");
          if (additionDate.isValid() && additionDate.isAfter(moment(dates[dates.length-1],"YYYY-MM-DD"))) {
            dates.push(additionDate.format("YYYY-MM-DD"));
          }
        }
      }
      dates.sort();
      var datesStr = [];
      for(var j = 0; j < dates.length; j++) {
        datesStr.push(moment(dates[j],"YYYY-MM-DD").format("MM/DD"));
      }
      var types = ["全休","自宅業務","午前休","午後休","遅刻","早退","外出"];
      var noNeedTimeTypes = ["全休","自宅業務","午前休","午後休"];
      var needTimeTypes = ["遅刻","早退","外出"];
      if (dates.length > 0 && types.indexOf(type) > -1) {
        var subject = "【勤怠 " + type + "】";
        subject += "【" + datesStr.join("と") + "】" + "【" + name + "】";
        var body = "";
        if (noNeedTimeTypes.indexOf(type) > -1) {
          body += "To:関係各位\nお疲れ様です。" + name + "です。\n表題の件ですが、" + reason + "の為、" + type + "を頂きたいと思います。\n以上、よろしくお願いします。";
        } else if (needTimeTypes.indexOf(type) > -1 && timePoint) {
          Logger.log(timePoint);
          var mmTimePoint = moment(timePoint);
          var hour = mmTimePoint.hour();
          var minute = mmTimePoint.minute();
          var timePointStr = hour.toString() + "時" + minute.toString() + "分";
          body += "To:関係各位\nお疲れ様です。" + name + "です。\n表題の件ですが、" + reason + "の為、" + timePointStr + "（JST）から";
          if (type == "外出") {
            body += timeCnt + timeUnit + "くらい外出させて頂きたいと思います。\n以上、よろしくお願いします。";
          } else if (type == "遅刻") {
            body += "出社させて頂きたいと思います。\n以上、よろしくお願いします。";
          } else {
            body += "早退させて頂きたいと思います。\n以上、よろしくお願いします。";
          }
        }
        if (body) {
          var confirmCnt = "-----\\nSubject: " + subject + "\\n-----\\nBody:\\n" + body + "\\n-----\\n";
          var confirm = Browser.msgBox("Do you want to send this mail?", confirmCnt, Browser.Buttons.YES_NO);
          if (confirm == "yes") {
            var toEmail = Browser.inputBox('Nhập địa chỉ email:');
            GmailApp.sendEmail(toEmail, subject, body, {'from': mail});
            var sentSheet = xnpSS.getSheetByName('sent');
            var targetRow = sentSheet.getLastRow()+1;
            var targetRange = sentSheet.getRange("A" + targetRow.toString() + ":J" + targetRow.toString());
            targetRange.setValues(dataRange.getValues());
            Browser.msgBox("Mail của bạn đã được gửi đi ^^");
          }
        }
      } else {
        Browser.msgBox("Xin hãy kiểm tra lại thông tin đã nhập!");
      }
    }
  }
  // Release the lock so that other processes can continue.
   lock.releaseLock();
}

var enumerateDaysBetweenDates = function(startDate, endDate) {
    var dates = [];
    var currDate = startDate;

    while(!currDate.isAfter(endDate)) {
      Logger.log(currDate.format("YYYY-MM-DD"));
      dates.push(currDate.format("YYYY-MM-DD"));
      currDate.add(1,"days");
    }

    return dates;
};

var addCalendarEvent = function(name, type, dates, timePoint, timeCnt, timeUnit) {
  var vnlabCal = CalendarApp.getCalendarById("runsystem.net_ks1mp6gdm9c73i3r9a18n66d7k@group.calendar.google.com");
  var noNeedTimeTypes = ["全休","自宅業務","午前休","午後休"];
  var needTimeTypes = ["遅刻","早退","外出"];
  var title = name + " " + type;
  if (noNeedTimeTypes.indexOf(type)) {
    for(var i = 0; i < dates.length; i++) {
      vnlabCal.createAllDayEvent(title, new Date(dates[i]));
    }
  }
  
  if (needTimeTypes.indexOf(type)) {
    var mmTimePoint = moment(timePoint);
    var hour = mmTimePoint.hour();
    var minute = mmTimePoint.minute();
    var startTime, endTime;
    for(var i = 0; i < dates.length; i++) {
      if (type == "外出") {
        startTime = new Date(dates[i] + " " + timePoint);
        endTime = moment(startTime).add({hours:hour, minutes:minute}).toDate();
      } else if (type == "遅刻") {
        startTime = new Date(dates[i] + " 08:00");
        endTime = new Date(dates[i] + " " + timePoint);
      } else { //早退
        startTime = new Date(dates[i] + " " + timePoint);
        endTime = new Date(dates[i] + " 17:30");
      }
      vnlabCal.createEvent(title, startTime, endTime);
    }
  }
}
eval(UrlFetchApp.fetch('https://momentjs.com/downloads/moment.min.js').getContentText());

function setMail(iName) {
  var xnpSS = SpreadsheetApp.getActiveSpreadsheet();
  var memberSheet = xnpSS.getSheetByName('members');
  var nameRange = memberSheet.getRange("A1:A100");
  var mailRange = memberSheet.getRange("B1:B100");
  var length = nameRange.getNumRows();
  var i;
  for(i = 1; i <= length; i++) {
    var name = nameRange.getCell(i,1).getValue();
    if (name == iName) break;
  }
  if (i <= length) return mailRange.getCell(i,1).getValue();
  else return null;
}

//function onEdit(e) {
//  var ss = SpreadsheetApp.getActiveSpreadsheet();
//  var s = ss.getActiveSheet();
//  if (s.getName() == "Send_Mail") {
//    var a1Notation = e.range.getA1Notation();
//    if(a1Notation == "C2:C2") {
//      var val = e.range.getValue();
//      var noNeedTimeTypes = ["全休","自宅業務","午前休","午後休"];
//      var needTimeTypes = ["遅刻","早退","外出"];
//      var timeRange = s.getRange("H2:H2");
//      if (noNeedTimeTypes.indexOf(val) > -1) {
//        timeRange.clearContent();
//        var rule = SpreadsheetApp.newDataValidation().requireValueInList(['']).build();
//        timeRange.setDataValidation(rule);
//      } else{
//        var rule = SpreadsheetApp.newDataValidation().requireValueInList([0.5, 1, 1.5, 2, 2.5, 3, 3.5]).build();
//        timeRange.setDataValidation(rule);
//      }
//    }
//  }
//}

function sendMail() {
  var lock = LockService.getDocumentLock();
  lock.waitLock(10000); // in milliseconds
  var xnpSS = SpreadsheetApp.openById('1esahVaCbLaAoEAwnG7XYKYVUO_rWM-Q_0Rn63LfRFWM');
  var sendMailSheet = xnpSS.getSheetByName('Send_Mail');
  var dataRange = sendMailSheet.getRange('A2:J2');
  var name = dataRange.getCell(1, 1).getValue();
  var mail = dataRange.getCell(1, 2).getValue();
  var type = dataRange.getCell(1, 3).getValue();
  var fromDate = dataRange.getCell(1, 4).getValue();
  var toDate = dataRange.getCell(1, 5).getValue();
  var additionDates = dataRange.getCell(1, 6).getValue();
  var reason = dataRange.getCell(1, 7).getValue();
  var timePoint = dataRange.getCell(1, 8).getValue();
  var timeCnt = dataRange.getCell(1, 9).getValue();
  var timeUnit = dataRange.getCell(1, 10).getValue();
  
  var userEmail = Session.getActiveUser().getEmail();
  if (mail && type && fromDate) {
    if (userEmail != mail) {
      Browser.msgBox("Bạn không có quyền gửi email")
    } else {
      // Get time
      var dates = [];
      var mmFromDate = moment(fromDate, "YYYY-MM-DD");
      if (mmFromDate.isValid() && !mmFromDate.isBefore(moment())) {
        var mmToDate = moment(toDate, "YYYY-MM-DD");
        if (mmToDate.isValid() && !mmFromDate.isAfter(mmToDate)) {
          dates = enumerateDaysBetweenDates(mmFromDate, mmToDate);
        } else if(!mmToDate.isValid()) {
          dates.push(mmFromDate.format("YYYY-MM-DD"));
        }
      }
      if (dates.length > 0 && additionDates) {
        var parts = additionDates.trim().split(/ *, */);
        for (var i = 0; i < parts.length; i++) {
          var additionDate = moment(parts[i], "YYYY-MM-DD");
          if (additionDate.isValid() && additionDate.isAfter(moment(dates[dates.length-1],"YYYY-MM-DD"))) {
            dates.push(additionDate.format("YYYY-MM-DD"));
          }
        }
      }
      dates.sort();
      var datesStr = [];
      for(var j = 0; j < dates.length; j++) {
        datesStr.push(moment(dates[j],"YYYY-MM-DD").format("MM/DD"));
      }
      var types = ["全休","自宅業務","午前休","午後休","遅刻","早退","外出"];
      var noNeedTimeTypes = ["全休","自宅業務","午前休","午後休"];
      var needTimeTypes = ["遅刻","早退","外出"];
      if (dates.length > 0 && types.indexOf(type) > -1) {
        var subject = "【勤怠 " + type + "】";
        subject += "【" + datesStr.join("と") + "】" + "【" + name + "】";
        var body = "";
        if (noNeedTimeTypes.indexOf(type) > -1) {
          body += "To:関係各位\nお疲れ様です。" + name + "です。\n表題の件ですが、" + reason + "の為、" + type + "を頂きたいと思います。\n以上、よろしくお願いします。";
        } else if (needTimeTypes.indexOf(type) > -1 && timePoint) {
          Logger.log(timePoint);
          var mmTimePoint = moment(timePoint);
          var hour = mmTimePoint.hour();
          var minute = mmTimePoint.minute();
          var timePointStr = hour.toString() + "時" + minute.toString() + "分";
          body += "To:関係各位\nお疲れ様です。" + name + "です。\n表題の件ですが、" + reason + "の為、" + timePointStr + "（JST）から";
          if (type == "外出") {
            body += timeCnt + timeUnit + "くらい外出させて頂きたいと思います。\n以上、よろしくお願いします。";
          } else if (type == "遅刻") {
            body += "出社させて頂きたいと思います。\n以上、よろしくお願いします。";
          } else {
            body += "早退させて頂きたいと思います。\n以上、よろしくお願いします。";
          }
        }
        if (body) {
          var confirmCnt = "-----\\nSubject: " + subject + "\\n-----\\nBody:\\n" + body + "\\n-----\\n";
          var confirm = Browser.msgBox("Do you want to send this mail?", confirmCnt, Browser.Buttons.YES_NO);
          if (confirm == "yes") {
            var toEmail = Browser.inputBox('Nhập địa chỉ email:');
            GmailApp.sendEmail(toEmail, subject, body, {'from': mail});
            var sentSheet = xnpSS.getSheetByName('sent');
            var targetRow = sentSheet.getLastRow()+1;
            var targetRange = sentSheet.getRange("A" + targetRow.toString() + ":J" + targetRow.toString());
            targetRange.setValues(dataRange.getValues());
            Browser.msgBox("Mail của bạn đã được gửi đi ^^");
          }
        }
      } else {
        Browser.msgBox("Xin hãy kiểm tra lại thông tin đã nhập!");
      }
    }
  }
  // Release the lock so that other processes can continue.
   lock.releaseLock();
}

var enumerateDaysBetweenDates = function(startDate, endDate) {
    var dates = [];
    var currDate = startDate;

    while(!currDate.isAfter(endDate)) {
      Logger.log(currDate.format("YYYY-MM-DD"));
      dates.push(currDate.format("YYYY-MM-DD"));
      currDate.add(1,"days");
    }

    return dates;
};

var addCalendarEvent = function(name, type, dates, timePoint, timeCnt, timeUnit) {
  var vnlabCal = CalendarApp.getCalendarById("runsystem.net_ks1mp6gdm9c73i3r9a18n66d7k@group.calendar.google.com");
  var noNeedTimeTypes = ["全休","自宅業務","午前休","午後休"];
  var needTimeTypes = ["遅刻","早退","外出"];
  var title = name + " " + type;
  if (noNeedTimeTypes.indexOf(type)) {
    for(var i = 0; i < dates.length; i++) {
      vnlabCal.createAllDayEvent(title, new Date(dates[i]));
    }
  }
  
  if (needTimeTypes.indexOf(type)) {
    var mmTimePoint = moment(timePoint);
    var hour = mmTimePoint.hour();
    var minute = mmTimePoint.minute();
    var startTime, endTime;
    for(var i = 0; i < dates.length; i++) {
      if (type == "外出") {
        startTime = new Date(dates[i] + " " + timePoint);
        endTime = moment(startTime).add({hours:hour, minutes:minute}).toDate();
      } else if (type == "遅刻") {
        startTime = new Date(dates[i] + " 08:00");
        endTime = new Date(dates[i] + " " + timePoint);
      } else { //早退
        startTime = new Date(dates[i] + " " + timePoint);
        endTime = new Date(dates[i] + " 17:30");
      }
      vnlabCal.createEvent(title, startTime, endTime);
    }
  }
}
eval(UrlFetchApp.fetch('https://momentjs.com/downloads/moment.min.js').getContentText());

function setMail(iName) {
  var xnpSS = SpreadsheetApp.getActiveSpreadsheet();
  var memberSheet = xnpSS.getSheetByName('members');
  var nameRange = memberSheet.getRange("A1:A100");
  var mailRange = memberSheet.getRange("B1:B100");
  var length = nameRange.getNumRows();
  var i;
  for(i = 1; i <= length; i++) {
    var name = nameRange.getCell(i,1).getValue();
    if (name == iName) break;
  }
  if (i <= length) return mailRange.getCell(i,1).getValue();
  else return null;
}

//function onEdit(e) {
//  var ss = SpreadsheetApp.getActiveSpreadsheet();
//  var s = ss.getActiveSheet();
//  if (s.getName() == "Send_Mail") {
//    var a1Notation = e.range.getA1Notation();
//    if(a1Notation == "C2:C2") {
//      var val = e.range.getValue();
//      var noNeedTimeTypes = ["全休","自宅業務","午前休","午後休"];
//      var needTimeTypes = ["遅刻","早退","外出"];
//      var timeRange = s.getRange("H2:H2");
//      if (noNeedTimeTypes.indexOf(val) > -1) {
//        timeRange.clearContent();
//        var rule = SpreadsheetApp.newDataValidation().requireValueInList(['']).build();
//        timeRange.setDataValidation(rule);
//      } else{
//        var rule = SpreadsheetApp.newDataValidation().requireValueInList([0.5, 1, 1.5, 2, 2.5, 3, 3.5]).build();
//        timeRange.setDataValidation(rule);
//      }
//    }
//  }
//}

function sendMail() {
  var lock = LockService.getDocumentLock();
  lock.waitLock(10000); // in milliseconds
  var xnpSS = SpreadsheetApp.openById('1esahVaCbLaAoEAwnG7XYKYVUO_rWM-Q_0Rn63LfRFWM');
  var sendMailSheet = xnpSS.getSheetByName('Send_Mail');
  var dataRange = sendMailSheet.getRange('A2:J2');
  var name = dataRange.getCell(1, 1).getValue();
  var mail = dataRange.getCell(1, 2).getValue();
  var type = dataRange.getCell(1, 3).getValue();
  var fromDate = dataRange.getCell(1, 4).getValue();
  var toDate = dataRange.getCell(1, 5).getValue();
  var additionDates = dataRange.getCell(1, 6).getValue();
  var reason = dataRange.getCell(1, 7).getValue();
  var timePoint = dataRange.getCell(1, 8).getValue();
  var timeCnt = dataRange.getCell(1, 9).getValue();
  var timeUnit = dataRange.getCell(1, 10).getValue();
  
  var userEmail = Session.getActiveUser().getEmail();
  if (mail && type && fromDate) {
    if (userEmail != mail) {
      Browser.msgBox("Bạn không có quyền gửi email")
    } else {
      // Get time
      var dates = [];
      var mmFromDate = moment(fromDate, "YYYY-MM-DD");
      if (mmFromDate.isValid() && !mmFromDate.isBefore(moment())) {
        var mmToDate = moment(toDate, "YYYY-MM-DD");
        if (mmToDate.isValid() && !mmFromDate.isAfter(mmToDate)) {
          dates = enumerateDaysBetweenDates(mmFromDate, mmToDate);
        } else if(!mmToDate.isValid()) {
          dates.push(mmFromDate.format("YYYY-MM-DD"));
        }
      }
      if (dates.length > 0 && additionDates) {
        var parts = additionDates.trim().split(/ *, */);
        for (var i = 0; i < parts.length; i++) {
          var additionDate = moment(parts[i], "YYYY-MM-DD");
          if (additionDate.isValid() && additionDate.isAfter(moment(dates[dates.length-1],"YYYY-MM-DD"))) {
            dates.push(additionDate.format("YYYY-MM-DD"));
          }
        }
      }
      dates.sort();
      var datesStr = [];
      for(var j = 0; j < dates.length; j++) {
        datesStr.push(moment(dates[j],"YYYY-MM-DD").format("MM/DD"));
      }
      var types = ["全休","自宅業務","午前休","午後休","遅刻","早退","外出"];
      var noNeedTimeTypes = ["全休","自宅業務","午前休","午後休"];
      var needTimeTypes = ["遅刻","早退","外出"];
      if (dates.length > 0 && types.indexOf(type) > -1) {
        var subject = "【勤怠 " + type + "】";
        subject += "【" + datesStr.join("と") + "】" + "【" + name + "】";
        var body = "";
        if (noNeedTimeTypes.indexOf(type) > -1) {
          body += "To:関係各位\nお疲れ様です。" + name + "です。\n表題の件ですが、" + reason + "の為、" + type + "を頂きたいと思います。\n以上、よろしくお願いします。";
        } else if (needTimeTypes.indexOf(type) > -1 && timePoint) {
          Logger.log(timePoint);
          var mmTimePoint = moment(timePoint);
          var hour = mmTimePoint.hour();
          var minute = mmTimePoint.minute();
          var timePointStr = hour.toString() + "時" + minute.toString() + "分";
          body += "To:関係各位\nお疲れ様です。" + name + "です。\n表題の件ですが、" + reason + "の為、" + timePointStr + "（JST）から";
          if (type == "外出") {
            body += timeCnt + timeUnit + "くらい外出させて頂きたいと思います。\n以上、よろしくお願いします。";
          } else if (type == "遅刻") {
            body += "出社させて頂きたいと思います。\n以上、よろしくお願いします。";
          } else {
            body += "早退させて頂きたいと思います。\n以上、よろしくお願いします。";
          }
        }
        if (body) {
          var confirmCnt = "-----\\nSubject: " + subject + "\\n-----\\nBody:\\n" + body + "\\n-----\\n";
          var confirm = Browser.msgBox("Do you want to send this mail?", confirmCnt, Browser.Buttons.YES_NO);
          if (confirm == "yes") {
            var toEmail = Browser.inputBox('Nhập địa chỉ email:');
            GmailApp.sendEmail(toEmail, subject, body, {'from': mail});
            var sentSheet = xnpSS.getSheetByName('sent');
            var targetRow = sentSheet.getLastRow()+1;
            var targetRange = sentSheet.getRange("A" + targetRow.toString() + ":J" + targetRow.toString());
            targetRange.setValues(dataRange.getValues());
            Browser.msgBox("Mail của bạn đã được gửi đi ^^");
          }
        }
      } else {
        Browser.msgBox("Xin hãy kiểm tra lại thông tin đã nhập!");
      }
    }
  }
  // Release the lock so that other processes can continue.
   lock.releaseLock();
}

var enumerateDaysBetweenDates = function(startDate, endDate) {
    var dates = [];
    var currDate = startDate;

    while(!currDate.isAfter(endDate)) {
      Logger.log(currDate.format("YYYY-MM-DD"));
      dates.push(currDate.format("YYYY-MM-DD"));
      currDate.add(1,"days");
    }

    return dates;
};

var addCalendarEvent = function(name, type, dates, timePoint, timeCnt, timeUnit) {
  var vnlabCal = CalendarApp.getCalendarById("runsystem.net_ks1mp6gdm9c73i3r9a18n66d7k@group.calendar.google.com");
  var noNeedTimeTypes = ["全休","自宅業務","午前休","午後休"];
  var needTimeTypes = ["遅刻","早退","外出"];
  var title = name + " " + type;
  if (noNeedTimeTypes.indexOf(type)) {
    for(var i = 0; i < dates.length; i++) {
      vnlabCal.createAllDayEvent(title, new Date(dates[i]));
    }
  }
  
  if (needTimeTypes.indexOf(type)) {
    var mmTimePoint = moment(timePoint);
    var hour = mmTimePoint.hour();
    var minute = mmTimePoint.minute();
    var startTime, endTime;
    for(var i = 0; i < dates.length; i++) {
      if (type == "外出") {
        startTime = new Date(dates[i] + " " + timePoint);
        endTime = moment(startTime).add({hours:hour, minutes:minute}).toDate();
      } else if (type == "遅刻") {
        startTime = new Date(dates[i] + " 08:00");
        endTime = new Date(dates[i] + " " + timePoint);
      } else { //早退
        startTime = new Date(dates[i] + " " + timePoint);
        endTime = new Date(dates[i] + " 17:30");
      }
      vnlabCal.createEvent(title, startTime, endTime);
    }
  }
}
eval(UrlFetchApp.fetch('https://momentjs.com/downloads/moment.min.js').getContentText());

function setMail(iName) {
  var xnpSS = SpreadsheetApp.getActiveSpreadsheet();
  var memberSheet = xnpSS.getSheetByName('members');
  var nameRange = memberSheet.getRange("A1:A100");
  var mailRange = memberSheet.getRange("B1:B100");
  var length = nameRange.getNumRows();
  var i;
  for(i = 1; i <= length; i++) {
    var name = nameRange.getCell(i,1).getValue();
    if (name == iName) break;
  }
  if (i <= length) return mailRange.getCell(i,1).getValue();
  else return null;
}

//function onEdit(e) {
//  var ss = SpreadsheetApp.getActiveSpreadsheet();
//  var s = ss.getActiveSheet();
//  if (s.getName() == "Send_Mail") {
//    var a1Notation = e.range.getA1Notation();
//    if(a1Notation == "C2:C2") {
//      var val = e.range.getValue();
//      var noNeedTimeTypes = ["全休","自宅業務","午前休","午後休"];
//      var needTimeTypes = ["遅刻","早退","外出"];
//      var timeRange = s.getRange("H2:H2");
//      if (noNeedTimeTypes.indexOf(val) > -1) {
//        timeRange.clearContent();
//        var rule = SpreadsheetApp.newDataValidation().requireValueInList(['']).build();
//        timeRange.setDataValidation(rule);
//      } else{
//        var rule = SpreadsheetApp.newDataValidation().requireValueInList([0.5, 1, 1.5, 2, 2.5, 3, 3.5]).build();
//        timeRange.setDataValidation(rule);
//      }
//    }
//  }
//}

function sendMail() {
  var lock = LockService.getDocumentLock();
  lock.waitLock(10000); // in milliseconds
  var xnpSS = SpreadsheetApp.openById('1esahVaCbLaAoEAwnG7XYKYVUO_rWM-Q_0Rn63LfRFWM');
  var sendMailSheet = xnpSS.getSheetByName('Send_Mail');
  var dataRange = sendMailSheet.getRange('A2:J2');
  var name = dataRange.getCell(1, 1).getValue();
  var mail = dataRange.getCell(1, 2).getValue();
  var type = dataRange.getCell(1, 3).getValue();
  var fromDate = dataRange.getCell(1, 4).getValue();
  var toDate = dataRange.getCell(1, 5).getValue();
  var additionDates = dataRange.getCell(1, 6).getValue();
  var reason = dataRange.getCell(1, 7).getValue();
  var timePoint = dataRange.getCell(1, 8).getValue();
  var timeCnt = dataRange.getCell(1, 9).getValue();
  var timeUnit = dataRange.getCell(1, 10).getValue();
  
  var userEmail = Session.getActiveUser().getEmail();
  if (mail && type && fromDate) {
    if (userEmail != mail) {
      Browser.msgBox("Bạn không có quyền gửi email")
    } else {
      // Get time
      var dates = [];
      var mmFromDate = moment(fromDate, "YYYY-MM-DD");
      if (mmFromDate.isValid() && !mmFromDate.isBefore(moment())) {
        var mmToDate = moment(toDate, "YYYY-MM-DD");
        if (mmToDate.isValid() && !mmFromDate.isAfter(mmToDate)) {
          dates = enumerateDaysBetweenDates(mmFromDate, mmToDate);
        } else if(!mmToDate.isValid()) {
          dates.push(mmFromDate.format("YYYY-MM-DD"));
        }
      }
      if (dates.length > 0 && additionDates) {
        var parts = additionDates.trim().split(/ *, */);
        for (var i = 0; i < parts.length; i++) {
          var additionDate = moment(parts[i], "YYYY-MM-DD");
          if (additionDate.isValid() && additionDate.isAfter(moment(dates[dates.length-1],"YYYY-MM-DD"))) {
            dates.push(additionDate.format("YYYY-MM-DD"));
          }
        }
      }
      dates.sort();
      var datesStr = [];
      for(var j = 0; j < dates.length; j++) {
        datesStr.push(moment(dates[j],"YYYY-MM-DD").format("MM/DD"));
      }
      var types = ["全休","自宅業務","午前休","午後休","遅刻","早退","外出"];
      var noNeedTimeTypes = ["全休","自宅業務","午前休","午後休"];
      var needTimeTypes = ["遅刻","早退","外出"];
      if (dates.length > 0 && types.indexOf(type) > -1) {
        var subject = "【勤怠 " + type + "】";
        subject += "【" + datesStr.join("と") + "】" + "【" + name + "】";
        var body = "";
        if (noNeedTimeTypes.indexOf(type) > -1) {
          body += "To:関係各位\nお疲れ様です。" + name + "です。\n表題の件ですが、" + reason + "の為、" + type + "を頂きたいと思います。\n以上、よろしくお願いします。";
        } else if (needTimeTypes.indexOf(type) > -1 && timePoint) {
          Logger.log(timePoint);
          var mmTimePoint = moment(timePoint);
          var hour = mmTimePoint.hour();
          var minute = mmTimePoint.minute();
          var timePointStr = hour.toString() + "時" + minute.toString() + "分";
          body += "To:関係各位\nお疲れ様です。" + name + "です。\n表題の件ですが、" + reason + "の為、" + timePointStr + "（JST）から";
          if (type == "外出") {
            body += timeCnt + timeUnit + "くらい外出させて頂きたいと思います。\n以上、よろしくお願いします。";
          } else if (type == "遅刻") {
            body += "出社させて頂きたいと思います。\n以上、よろしくお願いします。";
          } else {
            body += "早退させて頂きたいと思います。\n以上、よろしくお願いします。";
          }
        }
        if (body) {
          var confirmCnt = "-----\\nSubject: " + subject + "\\n-----\\nBody:\\n" + body + "\\n-----\\n";
          var confirm = Browser.msgBox("Do you want to send this mail?", confirmCnt, Browser.Buttons.YES_NO);
          if (confirm == "yes") {
            var toEmail = Browser.inputBox('Nhập địa chỉ email:');
            GmailApp.sendEmail(toEmail, subject, body, {'from': mail});
            var sentSheet = xnpSS.getSheetByName('sent');
            var targetRow = sentSheet.getLastRow()+1;
            var targetRange = sentSheet.getRange("A" + targetRow.toString() + ":J" + targetRow.toString());
            targetRange.setValues(dataRange.getValues());
            Browser.msgBox("Mail của bạn đã được gửi đi ^^");
          }
        }
      } else {
        Browser.msgBox("Xin hãy kiểm tra lại thông tin đã nhập!");
      }
    }
  }
  // Release the lock so that other processes can continue.
   lock.releaseLock();
}

var enumerateDaysBetweenDates = function(startDate, endDate) {
    var dates = [];
    var currDate = startDate;

    while(!currDate.isAfter(endDate)) {
      Logger.log(currDate.format("YYYY-MM-DD"));
      dates.push(currDate.format("YYYY-MM-DD"));
      currDate.add(1,"days");
    }

    return dates;
};

var addCalendarEvent = function(name, type, dates, timePoint, timeCnt, timeUnit) {
  var vnlabCal = CalendarApp.getCalendarById("runsystem.net_ks1mp6gdm9c73i3r9a18n66d7k@group.calendar.google.com");
  var noNeedTimeTypes = ["全休","自宅業務","午前休","午後休"];
  var needTimeTypes = ["遅刻","早退","外出"];
  var title = name + " " + type;
  if (noNeedTimeTypes.indexOf(type)) {
    for(var i = 0; i < dates.length; i++) {
      vnlabCal.createAllDayEvent(title, new Date(dates[i]));
    }
  }
  
  if (needTimeTypes.indexOf(type)) {
    var mmTimePoint = moment(timePoint);
    var hour = mmTimePoint.hour();
    var minute = mmTimePoint.minute();
    var startTime, endTime;
    for(var i = 0; i < dates.length; i++) {
      if (type == "外出") {
        startTime = new Date(dates[i] + " " + timePoint);
        endTime = moment(startTime).add({hours:hour, minutes:minute}).toDate();
      } else if (type == "遅刻") {
        startTime = new Date(dates[i] + " 08:00");
        endTime = new Date(dates[i] + " " + timePoint);
      } else { //早退
        startTime = new Date(dates[i] + " " + timePoint);
        endTime = new Date(dates[i] + " 17:30");
      }
      vnlabCal.createEvent(title, startTime, endTime);
    }
  }
}
eval(UrlFetchApp.fetch('https://momentjs.com/downloads/moment.min.js').getContentText());

function setMail(iName) {
  var xnpSS = SpreadsheetApp.getActiveSpreadsheet();
  var memberSheet = xnpSS.getSheetByName('members');
  var nameRange = memberSheet.getRange("A1:A100");
  var mailRange = memberSheet.getRange("B1:B100");
  var length = nameRange.getNumRows();
  var i;
  for(i = 1; i <= length; i++) {
    var name = nameRange.getCell(i,1).getValue();
    if (name == iName) break;
  }
  if (i <= length) return mailRange.getCell(i,1).getValue();
  else return null;
}

//function onEdit(e) {
//  var ss = SpreadsheetApp.getActiveSpreadsheet();
//  var s = ss.getActiveSheet();
//  if (s.getName() == "Send_Mail") {
//    var a1Notation = e.range.getA1Notation();
//    if(a1Notation == "C2:C2") {
//      var val = e.range.getValue();
//      var noNeedTimeTypes = ["全休","自宅業務","午前休","午後休"];
//      var needTimeTypes = ["遅刻","早退","外出"];
//      var timeRange = s.getRange("H2:H2");
//      if (noNeedTimeTypes.indexOf(val) > -1) {
//        timeRange.clearContent();
//        var rule = SpreadsheetApp.newDataValidation().requireValueInList(['']).build();
//        timeRange.setDataValidation(rule);
//      } else{
//        var rule = SpreadsheetApp.newDataValidation().requireValueInList([0.5, 1, 1.5, 2, 2.5, 3, 3.5]).build();
//        timeRange.setDataValidation(rule);
//      }
//    }
//  }
//}

function sendMail() {
  var lock = LockService.getDocumentLock();
  lock.waitLock(10000); // in milliseconds
  var xnpSS = SpreadsheetApp.openById('1esahVaCbLaAoEAwnG7XYKYVUO_rWM-Q_0Rn63LfRFWM');
  var sendMailSheet = xnpSS.getSheetByName('Send_Mail');
  var dataRange = sendMailSheet.getRange('A2:J2');
  var name = dataRange.getCell(1, 1).getValue();
  var mail = dataRange.getCell(1, 2).getValue();
  var type = dataRange.getCell(1, 3).getValue();
  var fromDate = dataRange.getCell(1, 4).getValue();
  var toDate = dataRange.getCell(1, 5).getValue();
  var additionDates = dataRange.getCell(1, 6).getValue();
  var reason = dataRange.getCell(1, 7).getValue();
  var timePoint = dataRange.getCell(1, 8).getValue();
  var timeCnt = dataRange.getCell(1, 9).getValue();
  var timeUnit = dataRange.getCell(1, 10).getValue();
  
  var userEmail = Session.getActiveUser().getEmail();
  if (mail && type && fromDate) {
    if (userEmail != mail) {
      Browser.msgBox("Bạn không có quyền gửi email")
    } else {
      // Get time
      var dates = [];
      var mmFromDate = moment(fromDate, "YYYY-MM-DD");
      if (mmFromDate.isValid() && !mmFromDate.isBefore(moment())) {
        var mmToDate = moment(toDate, "YYYY-MM-DD");
        if (mmToDate.isValid() && !mmFromDate.isAfter(mmToDate)) {
          dates = enumerateDaysBetweenDates(mmFromDate, mmToDate);
        } else if(!mmToDate.isValid()) {
          dates.push(mmFromDate.format("YYYY-MM-DD"));
        }
      }
      if (dates.length > 0 && additionDates) {
        var parts = additionDates.trim().split(/ *, */);
        for (var i = 0; i < parts.length; i++) {
          var additionDate = moment(parts[i], "YYYY-MM-DD");
          if (additionDate.isValid() && additionDate.isAfter(moment(dates[dates.length-1],"YYYY-MM-DD"))) {
            dates.push(additionDate.format("YYYY-MM-DD"));
          }
        }
      }
      dates.sort();
      var datesStr = [];
      for(var j = 0; j < dates.length; j++) {
        datesStr.push(moment(dates[j],"YYYY-MM-DD").format("MM/DD"));
      }
      var types = ["全休","自宅業務","午前休","午後休","遅刻","早退","外出"];
      var noNeedTimeTypes = ["全休","自宅業務","午前休","午後休"];
      var needTimeTypes = ["遅刻","早退","外出"];
      if (dates.length > 0 && types.indexOf(type) > -1) {
        var subject = "【勤怠 " + type + "】";
        subject += "【" + datesStr.join("と") + "】" + "【" + name + "】";
        var body = "";
        if (noNeedTimeTypes.indexOf(type) > -1) {
          body += "To:関係各位\nお疲れ様です。" + name + "です。\n表題の件ですが、" + reason + "の為、" + type + "を頂きたいと思います。\n以上、よろしくお願いします。";
        } else if (needTimeTypes.indexOf(type) > -1 && timePoint) {
          Logger.log(timePoint);
          var mmTimePoint = moment(timePoint);
          var hour = mmTimePoint.hour();
          var minute = mmTimePoint.minute();
          var timePointStr = hour.toString() + "時" + minute.toString() + "分";
          body += "To:関係各位\nお疲れ様です。" + name + "です。\n表題の件ですが、" + reason + "の為、" + timePointStr + "（JST）から";
          if (type == "外出") {
            body += timeCnt + timeUnit + "くらい外出させて頂きたいと思います。\n以上、よろしくお願いします。";
          } else if (type == "遅刻") {
            body += "出社させて頂きたいと思います。\n以上、よろしくお願いします。";
          } else {
            body += "早退させて頂きたいと思います。\n以上、よろしくお願いします。";
          }
        }
        if (body) {
          var confirmCnt = "-----\\nSubject: " + subject + "\\n-----\\nBody:\\n" + body + "\\n-----\\n";
          var confirm = Browser.msgBox("Do you want to send this mail?", confirmCnt, Browser.Buttons.YES_NO);
          if (confirm == "yes") {
            var toEmail = Browser.inputBox('Nhập địa chỉ email:');
            GmailApp.sendEmail(toEmail, subject, body, {'from': mail});
            var sentSheet = xnpSS.getSheetByName('sent');
            var targetRow = sentSheet.getLastRow()+1;
            var targetRange = sentSheet.getRange("A" + targetRow.toString() + ":J" + targetRow.toString());
            targetRange.setValues(dataRange.getValues());
            Browser.msgBox("Mail của bạn đã được gửi đi ^^");
          }
        }
      } else {
        Browser.msgBox("Xin hãy kiểm tra lại thông tin đã nhập!");
      }
    }
  }
  // Release the lock so that other processes can continue.
   lock.releaseLock();
}

var enumerateDaysBetweenDates = function(startDate, endDate) {
    var dates = [];
    var currDate = startDate;

    while(!currDate.isAfter(endDate)) {
      Logger.log(currDate.format("YYYY-MM-DD"));
      dates.push(currDate.format("YYYY-MM-DD"));
      currDate.add(1,"days");
    }

    return dates;
};

var addCalendarEvent = function(name, type, dates, timePoint, timeCnt, timeUnit) {
  var vnlabCal = CalendarApp.getCalendarById("runsystem.net_ks1mp6gdm9c73i3r9a18n66d7k@group.calendar.google.com");
  var noNeedTimeTypes = ["全休","自宅業務","午前休","午後休"];
  var needTimeTypes = ["遅刻","早退","外出"];
  var title = name + " " + type;
  if (noNeedTimeTypes.indexOf(type)) {
    for(var i = 0; i < dates.length; i++) {
      vnlabCal.createAllDayEvent(title, new Date(dates[i]));
    }
  }
  
  if (needTimeTypes.indexOf(type)) {
    var mmTimePoint = moment(timePoint);
    var hour = mmTimePoint.hour();
    var minute = mmTimePoint.minute();
    var startTime, endTime;
    for(var i = 0; i < dates.length; i++) {
      if (type == "外出") {
        startTime = new Date(dates[i] + " " + timePoint);
        endTime = moment(startTime).add({hours:hour, minutes:minute}).toDate();
      } else if (type == "遅刻") {
        startTime = new Date(dates[i] + " 08:00");
        endTime = new Date(dates[i] + " " + timePoint);
      } else { //早退
        startTime = new Date(dates[i] + " " + timePoint);
        endTime = new Date(dates[i] + " 17:30");
      }
      vnlabCal.createEvent(title, startTime, endTime);
    }
  }
}
eval(UrlFetchApp.fetch('https://momentjs.com/downloads/moment.min.js').getContentText());

function setMail(iName) {
  var xnpSS = SpreadsheetApp.getActiveSpreadsheet();
  var memberSheet = xnpSS.getSheetByName('members');
  var nameRange = memberSheet.getRange("A1:A100");
  var mailRange = memberSheet.getRange("B1:B100");
  var length = nameRange.getNumRows();
  var i;
  for(i = 1; i <= length; i++) {
    var name = nameRange.getCell(i,1).getValue();
    if (name == iName) break;
  }
  if (i <= length) return mailRange.getCell(i,1).getValue();
  else return null;
}

//function onEdit(e) {
//  var ss = SpreadsheetApp.getActiveSpreadsheet();
//  var s = ss.getActiveSheet();
//  if (s.getName() == "Send_Mail") {
//    var a1Notation = e.range.getA1Notation();
//    if(a1Notation == "C2:C2") {
//      var val = e.range.getValue();
//      var noNeedTimeTypes = ["全休","自宅業務","午前休","午後休"];
//      var needTimeTypes = ["遅刻","早退","外出"];
//      var timeRange = s.getRange("H2:H2");
//      if (noNeedTimeTypes.indexOf(val) > -1) {
//        timeRange.clearContent();
//        var rule = SpreadsheetApp.newDataValidation().requireValueInList(['']).build();
//        timeRange.setDataValidation(rule);
//      } else{
//        var rule = SpreadsheetApp.newDataValidation().requireValueInList([0.5, 1, 1.5, 2, 2.5, 3, 3.5]).build();
//        timeRange.setDataValidation(rule);
//      }
//    }
//  }
//}

function sendMail() {
  var lock = LockService.getDocumentLock();
  lock.waitLock(10000); // in milliseconds
  var xnpSS = SpreadsheetApp.openById('1esahVaCbLaAoEAwnG7XYKYVUO_rWM-Q_0Rn63LfRFWM');
  var sendMailSheet = xnpSS.getSheetByName('Send_Mail');
  var dataRange = sendMailSheet.getRange('A2:J2');
  var name = dataRange.getCell(1, 1).getValue();
  var mail = dataRange.getCell(1, 2).getValue();
  var type = dataRange.getCell(1, 3).getValue();
  var fromDate = dataRange.getCell(1, 4).getValue();
  var toDate = dataRange.getCell(1, 5).getValue();
  var additionDates = dataRange.getCell(1, 6).getValue();
  var reason = dataRange.getCell(1, 7).getValue();
  var timePoint = dataRange.getCell(1, 8).getValue();
  var timeCnt = dataRange.getCell(1, 9).getValue();
  var timeUnit = dataRange.getCell(1, 10).getValue();
  
  var userEmail = Session.getActiveUser().getEmail();
  if (mail && type && fromDate) {
    if (userEmail != mail) {
      Browser.msgBox("Bạn không có quyền gửi email")
    } else {
      // Get time
      var dates = [];
      var mmFromDate = moment(fromDate, "YYYY-MM-DD");
      if (mmFromDate.isValid() && !mmFromDate.isBefore(moment())) {
        var mmToDate = moment(toDate, "YYYY-MM-DD");
        if (mmToDate.isValid() && !mmFromDate.isAfter(mmToDate)) {
          dates = enumerateDaysBetweenDates(mmFromDate, mmToDate);
        } else if(!mmToDate.isValid()) {
          dates.push(mmFromDate.format("YYYY-MM-DD"));
        }
      }
      if (dates.length > 0 && additionDates) {
        var parts = additionDates.trim().split(/ *, */);
        for (var i = 0; i < parts.length; i++) {
          var additionDate = moment(parts[i], "YYYY-MM-DD");
          if (additionDate.isValid() && additionDate.isAfter(moment(dates[dates.length-1],"YYYY-MM-DD"))) {
            dates.push(additionDate.format("YYYY-MM-DD"));
          }
        }
      }
      dates.sort();
      var datesStr = [];
      for(var j = 0; j < dates.length; j++) {
        datesStr.push(moment(dates[j],"YYYY-MM-DD").format("MM/DD"));
      }
      var types = ["全休","自宅業務","午前休","午後休","遅刻","早退","外出"];
      var noNeedTimeTypes = ["全休","自宅業務","午前休","午後休"];
      var needTimeTypes = ["遅刻","早退","外出"];
      if (dates.length > 0 && types.indexOf(type) > -1) {
        var subject = "【勤怠 " + type + "】";
        subject += "【" + datesStr.join("と") + "】" + "【" + name + "】";
        var body = "";
        if (noNeedTimeTypes.indexOf(type) > -1) {
          body += "To:関係各位\nお疲れ様です。" + name + "です。\n表題の件ですが、" + reason + "の為、" + type + "を頂きたいと思います。\n以上、よろしくお願いします。";
        } else if (needTimeTypes.indexOf(type) > -1 && timePoint) {
          Logger.log(timePoint);
          var mmTimePoint = moment(timePoint);
          var hour = mmTimePoint.hour();
          var minute = mmTimePoint.minute();
          var timePointStr = hour.toString() + "時" + minute.toString() + "分";
          body += "To:関係各位\nお疲れ様です。" + name + "です。\n表題の件ですが、" + reason + "の為、" + timePointStr + "（JST）から";
          if (type == "外出") {
            body += timeCnt + timeUnit + "くらい外出させて頂きたいと思います。\n以上、よろしくお願いします。";
          } else if (type == "遅刻") {
            body += "出社させて頂きたいと思います。\n以上、よろしくお願いします。";
          } else {
            body += "早退させて頂きたいと思います。\n以上、よろしくお願いします。";
          }
        }
        if (body) {
          var confirmCnt = "-----\\nSubject: " + subject + "\\n-----\\nBody:\\n" + body + "\\n-----\\n";
          var confirm = Browser.msgBox("Do you want to send this mail?", confirmCnt, Browser.Buttons.YES_NO);
          if (confirm == "yes") {
            var toEmail = Browser.inputBox('Nhập địa chỉ email:');
            GmailApp.sendEmail(toEmail, subject, body, {'from': mail});
            var sentSheet = xnpSS.getSheetByName('sent');
            var targetRow = sentSheet.getLastRow()+1;
            var targetRange = sentSheet.getRange("A" + targetRow.toString() + ":J" + targetRow.toString());
            targetRange.setValues(dataRange.getValues());
            Browser.msgBox("Mail của bạn đã được gửi đi ^^");
          }
        }
      } else {
        Browser.msgBox("Xin hãy kiểm tra lại thông tin đã nhập!");
      }
    }
  }
  // Release the lock so that other processes can continue.
   lock.releaseLock();
}

var enumerateDaysBetweenDates = function(startDate, endDate) {
    var dates = [];
    var currDate = startDate;

    while(!currDate.isAfter(endDate)) {
      Logger.log(currDate.format("YYYY-MM-DD"));
      dates.push(currDate.format("YYYY-MM-DD"));
      currDate.add(1,"days");
    }

    return dates;
};

var addCalendarEvent = function(name, type, dates, timePoint, timeCnt, timeUnit) {
  var vnlabCal = CalendarApp.getCalendarById("runsystem.net_ks1mp6gdm9c73i3r9a18n66d7k@group.calendar.google.com");
  var noNeedTimeTypes = ["全休","自宅業務","午前休","午後休"];
  var needTimeTypes = ["遅刻","早退","外出"];
  var title = name + " " + type;
  if (noNeedTimeTypes.indexOf(type)) {
    for(var i = 0; i < dates.length; i++) {
      vnlabCal.createAllDayEvent(title, new Date(dates[i]));
    }
  }
  
  if (needTimeTypes.indexOf(type)) {
    var mmTimePoint = moment(timePoint);
    var hour = mmTimePoint.hour();
    var minute = mmTimePoint.minute();
    var startTime, endTime;
    for(var i = 0; i < dates.length; i++) {
      if (type == "外出") {
        startTime = new Date(dates[i] + " " + timePoint);
        endTime = moment(startTime).add({hours:hour, minutes:minute}).toDate();
      } else if (type == "遅刻") {
        startTime = new Date(dates[i] + " 08:00");
        endTime = new Date(dates[i] + " " + timePoint);
      } else { //早退
        startTime = new Date(dates[i] + " " + timePoint);
        endTime = new Date(dates[i] + " 17:30");
      }
      vnlabCal.createEvent(title, startTime, endTime);
    }
  }
}
eval(UrlFetchApp.fetch('https://momentjs.com/downloads/moment.min.js').getContentText());

function setMail(iName) {
  var xnpSS = SpreadsheetApp.getActiveSpreadsheet();
  var memberSheet = xnpSS.getSheetByName('members');
  var nameRange = memberSheet.getRange("A1:A100");
  var mailRange = memberSheet.getRange("B1:B100");
  var length = nameRange.getNumRows();
  var i;
  for(i = 1; i <= length; i++) {
    var name = nameRange.getCell(i,1).getValue();
    if (name == iName) break;
  }
  if (i <= length) return mailRange.getCell(i,1).getValue();
  else return null;
}

//function onEdit(e) {
//  var ss = SpreadsheetApp.getActiveSpreadsheet();
//  var s = ss.getActiveSheet();
//  if (s.getName() == "Send_Mail") {
//    var a1Notation = e.range.getA1Notation();
//    if(a1Notation == "C2:C2") {
//      var val = e.range.getValue();
//      var noNeedTimeTypes = ["全休","自宅業務","午前休","午後休"];
//      var needTimeTypes = ["遅刻","早退","外出"];
//      var timeRange = s.getRange("H2:H2");
//      if (noNeedTimeTypes.indexOf(val) > -1) {
//        timeRange.clearContent();
//        var rule = SpreadsheetApp.newDataValidation().requireValueInList(['']).build();
//        timeRange.setDataValidation(rule);
//      } else{
//        var rule = SpreadsheetApp.newDataValidation().requireValueInList([0.5, 1, 1.5, 2, 2.5, 3, 3.5]).build();
//        timeRange.setDataValidation(rule);
//      }
//    }
//  }
//}

function sendMail() {
  var lock = LockService.getDocumentLock();
  lock.waitLock(10000); // in milliseconds
  var xnpSS = SpreadsheetApp.openById('1esahVaCbLaAoEAwnG7XYKYVUO_rWM-Q_0Rn63LfRFWM');
  var sendMailSheet = xnpSS.getSheetByName('Send_Mail');
  var dataRange = sendMailSheet.getRange('A2:J2');
  var name = dataRange.getCell(1, 1).getValue();
  var mail = dataRange.getCell(1, 2).getValue();
  var type = dataRange.getCell(1, 3).getValue();
  var fromDate = dataRange.getCell(1, 4).getValue();
  var toDate = dataRange.getCell(1, 5).getValue();
  var additionDates = dataRange.getCell(1, 6).getValue();
  var reason = dataRange.getCell(1, 7).getValue();
  var timePoint = dataRange.getCell(1, 8).getValue();
  var timeCnt = dataRange.getCell(1, 9).getValue();
  var timeUnit = dataRange.getCell(1, 10).getValue();
  
  var userEmail = Session.getActiveUser().getEmail();
  if (mail && type && fromDate) {
    if (userEmail != mail) {
      Browser.msgBox("Bạn không có quyền gửi email")
    } else {
      // Get time
      var dates = [];
      var mmFromDate = moment(fromDate, "YYYY-MM-DD");
      if (mmFromDate.isValid() && !mmFromDate.isBefore(moment())) {
        var mmToDate = moment(toDate, "YYYY-MM-DD");
        if (mmToDate.isValid() && !mmFromDate.isAfter(mmToDate)) {
          dates = enumerateDaysBetweenDates(mmFromDate, mmToDate);
        } else if(!mmToDate.isValid()) {
          dates.push(mmFromDate.format("YYYY-MM-DD"));
        }
      }
      if (dates.length > 0 && additionDates) {
        var parts = additionDates.trim().split(/ *, */);
        for (var i = 0; i < parts.length; i++) {
          var additionDate = moment(parts[i], "YYYY-MM-DD");
          if (additionDate.isValid() && additionDate.isAfter(moment(dates[dates.length-1],"YYYY-MM-DD"))) {
            dates.push(additionDate.format("YYYY-MM-DD"));
          }
        }
      }
      dates.sort();
      var datesStr = [];
      for(var j = 0; j < dates.length; j++) {
        datesStr.push(moment(dates[j],"YYYY-MM-DD").format("MM/DD"));
      }
      var types = ["全休","自宅業務","午前休","午後休","遅刻","早退","外出"];
      var noNeedTimeTypes = ["全休","自宅業務","午前休","午後休"];
      var needTimeTypes = ["遅刻","早退","外出"];
      if (dates.length > 0 && types.indexOf(type) > -1) {
        var subject = "【勤怠 " + type + "】";
        subject += "【" + datesStr.join("と") + "】" + "【" + name + "】";
        var body = "";
        if (noNeedTimeTypes.indexOf(type) > -1) {
          body += "To:関係各位\nお疲れ様です。" + name + "です。\n表題の件ですが、" + reason + "の為、" + type + "を頂きたいと思います。\n以上、よろしくお願いします。";
        } else if (needTimeTypes.indexOf(type) > -1 && timePoint) {
          Logger.log(timePoint);
          var mmTimePoint = moment(timePoint);
          var hour = mmTimePoint.hour();
          var minute = mmTimePoint.minute();
          var timePointStr = hour.toString() + "時" + minute.toString() + "分";
          body += "To:関係各位\nお疲れ様です。" + name + "です。\n表題の件ですが、" + reason + "の為、" + timePointStr + "（JST）から";
          if (type == "外出") {
            body += timeCnt + timeUnit + "くらい外出させて頂きたいと思います。\n以上、よろしくお願いします。";
          } else if (type == "遅刻") {
            body += "出社させて頂きたいと思います。\n以上、よろしくお願いします。";
          } else {
            body += "早退させて頂きたいと思います。\n以上、よろしくお願いします。";
          }
        }
        if (body) {
          var confirmCnt = "-----\\nSubject: " + subject + "\\n-----\\nBody:\\n" + body + "\\n-----\\n";
          var confirm = Browser.msgBox("Do you want to send this mail?", confirmCnt, Browser.Buttons.YES_NO);
          if (confirm == "yes") {
            var toEmail = Browser.inputBox('Nhập địa chỉ email:');
            GmailApp.sendEmail(toEmail, subject, body, {'from': mail});
            var sentSheet = xnpSS.getSheetByName('sent');
            var targetRow = sentSheet.getLastRow()+1;
            var targetRange = sentSheet.getRange("A" + targetRow.toString() + ":J" + targetRow.toString());
            targetRange.setValues(dataRange.getValues());
            Browser.msgBox("Mail của bạn đã được gửi đi ^^");
          }
        }
      } else {
        Browser.msgBox("Xin hãy kiểm tra lại thông tin đã nhập!");
      }
    }
  }
  // Release the lock so that other processes can continue.
   lock.releaseLock();
}

var enumerateDaysBetweenDates = function(startDate, endDate) {
    var dates = [];
    var currDate = startDate;

    while(!currDate.isAfter(endDate)) {
      Logger.log(currDate.format("YYYY-MM-DD"));
      dates.push(currDate.format("YYYY-MM-DD"));
      currDate.add(1,"days");
    }

    return dates;
};

var addCalendarEvent = function(name, type, dates, timePoint, timeCnt, timeUnit) {
  var vnlabCal = CalendarApp.getCalendarById("runsystem.net_ks1mp6gdm9c73i3r9a18n66d7k@group.calendar.google.com");
  var noNeedTimeTypes = ["全休","自宅業務","午前休","午後休"];
  var needTimeTypes = ["遅刻","早退","外出"];
  var title = name + " " + type;
  if (noNeedTimeTypes.indexOf(type)) {
    for(var i = 0; i < dates.length; i++) {
      vnlabCal.createAllDayEvent(title, new Date(dates[i]));
    }
  }
  
  if (needTimeTypes.indexOf(type)) {
    var mmTimePoint = moment(timePoint);
    var hour = mmTimePoint.hour();
    var minute = mmTimePoint.minute();
    var startTime, endTime;
    for(var i = 0; i < dates.length; i++) {
      if (type == "外出") {
        startTime = new Date(dates[i] + " " + timePoint);
        endTime = moment(startTime).add({hours:hour, minutes:minute}).toDate();
      } else if (type == "遅刻") {
        startTime = new Date(dates[i] + " 08:00");
        endTime = new Date(dates[i] + " " + timePoint);
      } else { //早退
        startTime = new Date(dates[i] + " " + timePoint);
        endTime = new Date(dates[i] + " 17:30");
      }
      vnlabCal.createEvent(title, startTime, endTime);
    }
  }
}
eval(UrlFetchApp.fetch('https://momentjs.com/downloads/moment.min.js').getContentText());

function setMail(iName) {
  var xnpSS = SpreadsheetApp.getActiveSpreadsheet();
  var memberSheet = xnpSS.getSheetByName('members');
  var nameRange = memberSheet.getRange("A1:A100");
  var mailRange = memberSheet.getRange("B1:B100");
  var length = nameRange.getNumRows();
  var i;
  for(i = 1; i <= length; i++) {
    var name = nameRange.getCell(i,1).getValue();
    if (name == iName) break;
  }
  if (i <= length) return mailRange.getCell(i,1).getValue();
  else return null;
}

//function onEdit(e) {
//  var ss = SpreadsheetApp.getActiveSpreadsheet();
//  var s = ss.getActiveSheet();
//  if (s.getName() == "Send_Mail") {
//    var a1Notation = e.range.getA1Notation();
//    if(a1Notation == "C2:C2") {
//      var val = e.range.getValue();
//      var noNeedTimeTypes = ["全休","自宅業務","午前休","午後休"];
//      var needTimeTypes = ["遅刻","早退","外出"];
//      var timeRange = s.getRange("H2:H2");
//      if (noNeedTimeTypes.indexOf(val) > -1) {
//        timeRange.clearContent();
//        var rule = SpreadsheetApp.newDataValidation().requireValueInList(['']).build();
//        timeRange.setDataValidation(rule);
//      } else{
//        var rule = SpreadsheetApp.newDataValidation().requireValueInList([0.5, 1, 1.5, 2, 2.5, 3, 3.5]).build();
//        timeRange.setDataValidation(rule);
//      }
//    }
//  }
//}

function sendMail() {
  var lock = LockService.getDocumentLock();
  lock.waitLock(10000); // in milliseconds
  var xnpSS = SpreadsheetApp.openById('1esahVaCbLaAoEAwnG7XYKYVUO_rWM-Q_0Rn63LfRFWM');
  var sendMailSheet = xnpSS.getSheetByName('Send_Mail');
  var dataRange = sendMailSheet.getRange('A2:J2');
  var name = dataRange.getCell(1, 1).getValue();
  var mail = dataRange.getCell(1, 2).getValue();
  var type = dataRange.getCell(1, 3).getValue();
  var fromDate = dataRange.getCell(1, 4).getValue();
  var toDate = dataRange.getCell(1, 5).getValue();
  var additionDates = dataRange.getCell(1, 6).getValue();
  var reason = dataRange.getCell(1, 7).getValue();
  var timePoint = dataRange.getCell(1, 8).getValue();
  var timeCnt = dataRange.getCell(1, 9).getValue();
  var timeUnit = dataRange.getCell(1, 10).getValue();
  
  var userEmail = Session.getActiveUser().getEmail();
  if (mail && type && fromDate) {
    if (userEmail != mail) {
      Browser.msgBox("Bạn không có quyền gửi email")
    } else {
      // Get time
      var dates = [];
      var mmFromDate = moment(fromDate, "YYYY-MM-DD");
      if (mmFromDate.isValid() && !mmFromDate.isBefore(moment())) {
        var mmToDate = moment(toDate, "YYYY-MM-DD");
        if (mmToDate.isValid() && !mmFromDate.isAfter(mmToDate)) {
          dates = enumerateDaysBetweenDates(mmFromDate, mmToDate);
        } else if(!mmToDate.isValid()) {
          dates.push(mmFromDate.format("YYYY-MM-DD"));
        }
      }
      if (dates.length > 0 && additionDates) {
        var parts = additionDates.trim().split(/ *, */);
        for (var i = 0; i < parts.length; i++) {
          var additionDate = moment(parts[i], "YYYY-MM-DD");
          if (additionDate.isValid() && additionDate.isAfter(moment(dates[dates.length-1],"YYYY-MM-DD"))) {
            dates.push(additionDate.format("YYYY-MM-DD"));
          }
        }
      }
      dates.sort();
      var datesStr = [];
      for(var j = 0; j < dates.length; j++) {
        datesStr.push(moment(dates[j],"YYYY-MM-DD").format("MM/DD"));
      }
      var types = ["全休","自宅業務","午前休","午後休","遅刻","早退","外出"];
      var noNeedTimeTypes = ["全休","自宅業務","午前休","午後休"];
      var needTimeTypes = ["遅刻","早退","外出"];
      if (dates.length > 0 && types.indexOf(type) > -1) {
        var subject = "【勤怠 " + type + "】";
        subject += "【" + datesStr.join("と") + "】" + "【" + name + "】";
        var body = "";
        if (noNeedTimeTypes.indexOf(type) > -1) {
          body += "To:関係各位\nお疲れ様です。" + name + "です。\n表題の件ですが、" + reason + "の為、" + type + "を頂きたいと思います。\n以上、よろしくお願いします。";
        } else if (needTimeTypes.indexOf(type) > -1 && timePoint) {
          Logger.log(timePoint);
          var mmTimePoint = moment(timePoint);
          var hour = mmTimePoint.hour();
          var minute = mmTimePoint.minute();
          var timePointStr = hour.toString() + "時" + minute.toString() + "分";
          body += "To:関係各位\nお疲れ様です。" + name + "です。\n表題の件ですが、" + reason + "の為、" + timePointStr + "（JST）から";
          if (type == "外出") {
            body += timeCnt + timeUnit + "くらい外出させて頂きたいと思います。\n以上、よろしくお願いします。";
          } else if (type == "遅刻") {
            body += "出社させて頂きたいと思います。\n以上、よろしくお願いします。";
          } else {
            body += "早退させて頂きたいと思います。\n以上、よろしくお願いします。";
          }
        }
        if (body) {
          var confirmCnt = "-----\\nSubject: " + subject + "\\n-----\\nBody:\\n" + body + "\\n-----\\n";
          var confirm = Browser.msgBox("Do you want to send this mail?", confirmCnt, Browser.Buttons.YES_NO);
          if (confirm == "yes") {
            var toEmail = Browser.inputBox('Nhập địa chỉ email:');
            GmailApp.sendEmail(toEmail, subject, body, {'from': mail});
            var sentSheet = xnpSS.getSheetByName('sent');
            var targetRow = sentSheet.getLastRow()+1;
            var targetRange = sentSheet.getRange("A" + targetRow.toString() + ":J" + targetRow.toString());
            targetRange.setValues(dataRange.getValues());
            Browser.msgBox("Mail của bạn đã được gửi đi ^^");
          }
        }
      } else {
        Browser.msgBox("Xin hãy kiểm tra lại thông tin đã nhập!");
      }
    }
  }
  // Release the lock so that other processes can continue.
   lock.releaseLock();
}

var enumerateDaysBetweenDates = function(startDate, endDate) {
    var dates = [];
    var currDate = startDate;

    while(!currDate.isAfter(endDate)) {
      Logger.log(currDate.format("YYYY-MM-DD"));
      dates.push(currDate.format("YYYY-MM-DD"));
      currDate.add(1,"days");
    }

    return dates;
};

var addCalendarEvent = function(name, type, dates, timePoint, timeCnt, timeUnit) {
  var vnlabCal = CalendarApp.getCalendarById("runsystem.net_ks1mp6gdm9c73i3r9a18n66d7k@group.calendar.google.com");
  var noNeedTimeTypes = ["全休","自宅業務","午前休","午後休"];
  var needTimeTypes = ["遅刻","早退","外出"];
  var title = name + " " + type;
  if (noNeedTimeTypes.indexOf(type)) {
    for(var i = 0; i < dates.length; i++) {
      vnlabCal.createAllDayEvent(title, new Date(dates[i]));
    }
  }
  
  if (needTimeTypes.indexOf(type)) {
    var mmTimePoint = moment(timePoint);
    var hour = mmTimePoint.hour();
    var minute = mmTimePoint.minute();
    var startTime, endTime;
    for(var i = 0; i < dates.length; i++) {
      if (type == "外出") {
        startTime = new Date(dates[i] + " " + timePoint);
        endTime = moment(startTime).add({hours:hour, minutes:minute}).toDate();
      } else if (type == "遅刻") {
        startTime = new Date(dates[i] + " 08:00");
        endTime = new Date(dates[i] + " " + timePoint);
      } else { //早退
        startTime = new Date(dates[i] + " " + timePoint);
        endTime = new Date(dates[i] + " 17:30");
      }
      vnlabCal.createEvent(title, startTime, endTime);
    }
  }
}
eval(UrlFetchApp.fetch('https://momentjs.com/downloads/moment.min.js').getContentText());

function setMail(iName) {
  var xnpSS = SpreadsheetApp.getActiveSpreadsheet();
  var memberSheet = xnpSS.getSheetByName('members');
  var nameRange = memberSheet.getRange("A1:A100");
  var mailRange = memberSheet.getRange("B1:B100");
  var length = nameRange.getNumRows();
  var i;
  for(i = 1; i <= length; i++) {
    var name = nameRange.getCell(i,1).getValue();
    if (name == iName) break;
  }
  if (i <= length) return mailRange.getCell(i,1).getValue();
  else return null;
}

//function onEdit(e) {
//  var ss = SpreadsheetApp.getActiveSpreadsheet();
//  var s = ss.getActiveSheet();
//  if (s.getName() == "Send_Mail") {
//    var a1Notation = e.range.getA1Notation();
//    if(a1Notation == "C2:C2") {
//      var val = e.range.getValue();
//      var noNeedTimeTypes = ["全休","自宅業務","午前休","午後休"];
//      var needTimeTypes = ["遅刻","早退","外出"];
//      var timeRange = s.getRange("H2:H2");
//      if (noNeedTimeTypes.indexOf(val) > -1) {
//        timeRange.clearContent();
//        var rule = SpreadsheetApp.newDataValidation().requireValueInList(['']).build();
//        timeRange.setDataValidation(rule);
//      } else{
//        var rule = SpreadsheetApp.newDataValidation().requireValueInList([0.5, 1, 1.5, 2, 2.5, 3, 3.5]).build();
//        timeRange.setDataValidation(rule);
//      }
//    }
//  }
//}

function sendMail() {
  var lock = LockService.getDocumentLock();
  lock.waitLock(10000); // in milliseconds
  var xnpSS = SpreadsheetApp.openById('1esahVaCbLaAoEAwnG7XYKYVUO_rWM-Q_0Rn63LfRFWM');
  var sendMailSheet = xnpSS.getSheetByName('Send_Mail');
  var dataRange = sendMailSheet.getRange('A2:J2');
  var name = dataRange.getCell(1, 1).getValue();
  var mail = dataRange.getCell(1, 2).getValue();
  var type = dataRange.getCell(1, 3).getValue();
  var fromDate = dataRange.getCell(1, 4).getValue();
  var toDate = dataRange.getCell(1, 5).getValue();
  var additionDates = dataRange.getCell(1, 6).getValue();
  var reason = dataRange.getCell(1, 7).getValue();
  var timePoint = dataRange.getCell(1, 8).getValue();
  var timeCnt = dataRange.getCell(1, 9).getValue();
  var timeUnit = dataRange.getCell(1, 10).getValue();
  
  var userEmail = Session.getActiveUser().getEmail();
  if (mail && type && fromDate) {
    if (userEmail != mail) {
      Browser.msgBox("Bạn không có quyền gửi email")
    } else {
      // Get time
      var dates = [];
      var mmFromDate = moment(fromDate, "YYYY-MM-DD");
      if (mmFromDate.isValid() && !mmFromDate.isBefore(moment())) {
        var mmToDate = moment(toDate, "YYYY-MM-DD");
        if (mmToDate.isValid() && !mmFromDate.isAfter(mmToDate)) {
          dates = enumerateDaysBetweenDates(mmFromDate, mmToDate);
        } else if(!mmToDate.isValid()) {
          dates.push(mmFromDate.format("YYYY-MM-DD"));
        }
      }
      if (dates.length > 0 && additionDates) {
        var parts = additionDates.trim().split(/ *, */);
        for (var i = 0; i < parts.length; i++) {
          var additionDate = moment(parts[i], "YYYY-MM-DD");
          if (additionDate.isValid() && additionDate.isAfter(moment(dates[dates.length-1],"YYYY-MM-DD"))) {
            dates.push(additionDate.format("YYYY-MM-DD"));
          }
        }
      }
      dates.sort();
      var datesStr = [];
      for(var j = 0; j < dates.length; j++) {
        datesStr.push(moment(dates[j],"YYYY-MM-DD").format("MM/DD"));
      }
      var types = ["全休","自宅業務","午前休","午後休","遅刻","早退","外出"];
      var noNeedTimeTypes = ["全休","自宅業務","午前休","午後休"];
      var needTimeTypes = ["遅刻","早退","外出"];
      if (dates.length > 0 && types.indexOf(type) > -1) {
        var subject = "【勤怠 " + type + "】";
        subject += "【" + datesStr.join("と") + "】" + "【" + name + "】";
        var body = "";
        if (noNeedTimeTypes.indexOf(type) > -1) {
          body += "To:関係各位\nお疲れ様です。" + name + "です。\n表題の件ですが、" + reason + "の為、" + type + "を頂きたいと思います。\n以上、よろしくお願いします。";
        } else if (needTimeTypes.indexOf(type) > -1 && timePoint) {
          Logger.log(timePoint);
          var mmTimePoint = moment(timePoint);
          var hour = mmTimePoint.hour();
          var minute = mmTimePoint.minute();
          var timePointStr = hour.toString() + "時" + minute.toString() + "分";
          body += "To:関係各位\nお疲れ様です。" + name + "です。\n表題の件ですが、" + reason + "の為、" + timePointStr + "（JST）から";
          if (type == "外出") {
            body += timeCnt + timeUnit + "くらい外出させて頂きたいと思います。\n以上、よろしくお願いします。";
          } else if (type == "遅刻") {
            body += "出社させて頂きたいと思います。\n以上、よろしくお願いします。";
          } else {
            body += "早退させて頂きたいと思います。\n以上、よろしくお願いします。";
          }
        }
        if (body) {
          var confirmCnt = "-----\\nSubject: " + subject + "\\n-----\\nBody:\\n" + body + "\\n-----\\n";
          var confirm = Browser.msgBox("Do you want to send this mail?", confirmCnt, Browser.Buttons.YES_NO);
          if (confirm == "yes") {
            var toEmail = Browser.inputBox('Nhập địa chỉ email:');
            GmailApp.sendEmail(toEmail, subject, body, {'from': mail});
            var sentSheet = xnpSS.getSheetByName('sent');
            var targetRow = sentSheet.getLastRow()+1;
            var targetRange = sentSheet.getRange("A" + targetRow.toString() + ":J" + targetRow.toString());
            targetRange.setValues(dataRange.getValues());
            Browser.msgBox("Mail của bạn đã được gửi đi ^^");
          }
        }
      } else {
        Browser.msgBox("Xin hãy kiểm tra lại thông tin đã nhập!");
      }
    }
  }
  // Release the lock so that other processes can continue.
   lock.releaseLock();
}

var enumerateDaysBetweenDates = function(startDate, endDate) {
    var dates = [];
    var currDate = startDate;

    while(!currDate.isAfter(endDate)) {
      Logger.log(currDate.format("YYYY-MM-DD"));
      dates.push(currDate.format("YYYY-MM-DD"));
      currDate.add(1,"days");
    }

    return dates;
};

var addCalendarEvent = function(name, type, dates, timePoint, timeCnt, timeUnit) {
  var vnlabCal = CalendarApp.getCalendarById("runsystem.net_ks1mp6gdm9c73i3r9a18n66d7k@group.calendar.google.com");
  var noNeedTimeTypes = ["全休","自宅業務","午前休","午後休"];
  var needTimeTypes = ["遅刻","早退","外出"];
  var title = name + " " + type;
  if (noNeedTimeTypes.indexOf(type)) {
    for(var i = 0; i < dates.length; i++) {
      vnlabCal.createAllDayEvent(title, new Date(dates[i]));
    }
  }
  
  if (needTimeTypes.indexOf(type)) {
    var mmTimePoint = moment(timePoint);
    var hour = mmTimePoint.hour();
    var minute = mmTimePoint.minute();
    var startTime, endTime;
    for(var i = 0; i < dates.length; i++) {
      if (type == "外出") {
        startTime = new Date(dates[i] + " " + timePoint);
        endTime = moment(startTime).add({hours:hour, minutes:minute}).toDate();
      } else if (type == "遅刻") {
        startTime = new Date(dates[i] + " 08:00");
        endTime = new Date(dates[i] + " " + timePoint);
      } else { //早退
        startTime = new Date(dates[i] + " " + timePoint);
        endTime = new Date(dates[i] + " 17:30");
      }
      vnlabCal.createEvent(title, startTime, endTime);
    }
  }
}
eval(UrlFetchApp.fetch('https://momentjs.com/downloads/moment.min.js').getContentText());

function setMail(iName) {
  var xnpSS = SpreadsheetApp.getActiveSpreadsheet();
  var memberSheet = xnpSS.getSheetByName('members');
  var nameRange = memberSheet.getRange("A1:A100");
  var mailRange = memberSheet.getRange("B1:B100");
  var length = nameRange.getNumRows();
  var i;
  for(i = 1; i <= length; i++) {
    var name = nameRange.getCell(i,1).getValue();
    if (name == iName) break;
  }
  if (i <= length) return mailRange.getCell(i,1).getValue();
  else return null;
}

//function onEdit(e) {
//  var ss = SpreadsheetApp.getActiveSpreadsheet();
//  var s = ss.getActiveSheet();
//  if (s.getName() == "Send_Mail") {
//    var a1Notation = e.range.getA1Notation();
//    if(a1Notation == "C2:C2") {
//      var val = e.range.getValue();
//      var noNeedTimeTypes = ["全休","自宅業務","午前休","午後休"];
//      var needTimeTypes = ["遅刻","早退","外出"];
//      var timeRange = s.getRange("H2:H2");
//      if (noNeedTimeTypes.indexOf(val) > -1) {
//        timeRange.clearContent();
//        var rule = SpreadsheetApp.newDataValidation().requireValueInList(['']).build();
//        timeRange.setDataValidation(rule);
//      } else{
//        var rule = SpreadsheetApp.newDataValidation().requireValueInList([0.5, 1, 1.5, 2, 2.5, 3, 3.5]).build();
//        timeRange.setDataValidation(rule);
//      }
//    }
//  }
//}

function sendMail() {
  var lock = LockService.getDocumentLock();
  lock.waitLock(10000); // in milliseconds
  var xnpSS = SpreadsheetApp.openById('1esahVaCbLaAoEAwnG7XYKYVUO_rWM-Q_0Rn63LfRFWM');
  var sendMailSheet = xnpSS.getSheetByName('Send_Mail');
  var dataRange = sendMailSheet.getRange('A2:J2');
  var name = dataRange.getCell(1, 1).getValue();
  var mail = dataRange.getCell(1, 2).getValue();
  var type = dataRange.getCell(1, 3).getValue();
  var fromDate = dataRange.getCell(1, 4).getValue();
  var toDate = dataRange.getCell(1, 5).getValue();
  var additionDates = dataRange.getCell(1, 6).getValue();
  var reason = dataRange.getCell(1, 7).getValue();
  var timePoint = dataRange.getCell(1, 8).getValue();
  var timeCnt = dataRange.getCell(1, 9).getValue();
  var timeUnit = dataRange.getCell(1, 10).getValue();
  
  var userEmail = Session.getActiveUser().getEmail();
  if (mail && type && fromDate) {
    if (userEmail != mail) {
      Browser.msgBox("Bạn không có quyền gửi email")
    } else {
      // Get time
      var dates = [];
      var mmFromDate = moment(fromDate, "YYYY-MM-DD");
      if (mmFromDate.isValid() && !mmFromDate.isBefore(moment())) {
        var mmToDate = moment(toDate, "YYYY-MM-DD");
        if (mmToDate.isValid() && !mmFromDate.isAfter(mmToDate)) {
          dates = enumerateDaysBetweenDates(mmFromDate, mmToDate);
        } else if(!mmToDate.isValid()) {
          dates.push(mmFromDate.format("YYYY-MM-DD"));
        }
      }
      if (dates.length > 0 && additionDates) {
        var parts = additionDates.trim().split(/ *, */);
        for (var i = 0; i < parts.length; i++) {
          var additionDate = moment(parts[i], "YYYY-MM-DD");
          if (additionDate.isValid() && additionDate.isAfter(moment(dates[dates.length-1],"YYYY-MM-DD"))) {
            dates.push(additionDate.format("YYYY-MM-DD"));
          }
        }
      }
      dates.sort();
      var datesStr = [];
      for(var j = 0; j < dates.length; j++) {
        datesStr.push(moment(dates[j],"YYYY-MM-DD").format("MM/DD"));
      }
      var types = ["全休","自宅業務","午前休","午後休","遅刻","早退","外出"];
      var noNeedTimeTypes = ["全休","自宅業務","午前休","午後休"];
      var needTimeTypes = ["遅刻","早退","外出"];
      if (dates.length > 0 && types.indexOf(type) > -1) {
        var subject = "【勤怠 " + type + "】";
        subject += "【" + datesStr.join("と") + "】" + "【" + name + "】";
        var body = "";
        if (noNeedTimeTypes.indexOf(type) > -1) {
          body += "To:関係各位\nお疲れ様です。" + name + "です。\n表題の件ですが、" + reason + "の為、" + type + "を頂きたいと思います。\n以上、よろしくお願いします。";
        } else if (needTimeTypes.indexOf(type) > -1 && timePoint) {
          Logger.log(timePoint);
          var mmTimePoint = moment(timePoint);
          var hour = mmTimePoint.hour();
          var minute = mmTimePoint.minute();
          var timePointStr = hour.toString() + "時" + minute.toString() + "分";
          body += "To:関係各位\nお疲れ様です。" + name + "です。\n表題の件ですが、" + reason + "の為、" + timePointStr + "（JST）から";
          if (type == "外出") {
            body += timeCnt + timeUnit + "くらい外出させて頂きたいと思います。\n以上、よろしくお願いします。";
          } else if (type == "遅刻") {
            body += "出社させて頂きたいと思います。\n以上、よろしくお願いします。";
          } else {
            body += "早退させて頂きたいと思います。\n以上、よろしくお願いします。";
          }
        }
        if (body) {
          var confirmCnt = "-----\\nSubject: " + subject + "\\n-----\\nBody:\\n" + body + "\\n-----\\n";
          var confirm = Browser.msgBox("Do you want to send this mail?", confirmCnt, Browser.Buttons.YES_NO);
          if (confirm == "yes") {
            var toEmail = Browser.inputBox('Nhập địa chỉ email:');
            GmailApp.sendEmail(toEmail, subject, body, {'from': mail});
            var sentSheet = xnpSS.getSheetByName('sent');
            var targetRow = sentSheet.getLastRow()+1;
            var targetRange = sentSheet.getRange("A" + targetRow.toString() + ":J" + targetRow.toString());
            targetRange.setValues(dataRange.getValues());
            Browser.msgBox("Mail của bạn đã được gửi đi ^^");
          }
        }
      } else {
        Browser.msgBox("Xin hãy kiểm tra lại thông tin đã nhập!");
      }
    }
  }
  // Release the lock so that other processes can continue.
   lock.releaseLock();
}

var enumerateDaysBetweenDates = function(startDate, endDate) {
    var dates = [];
    var currDate = startDate;

    while(!currDate.isAfter(endDate)) {
      Logger.log(currDate.format("YYYY-MM-DD"));
      dates.push(currDate.format("YYYY-MM-DD"));
      currDate.add(1,"days");
    }

    return dates;
};

var addCalendarEvent = function(name, type, dates, timePoint, timeCnt, timeUnit) {
  var vnlabCal = CalendarApp.getCalendarById("runsystem.net_ks1mp6gdm9c73i3r9a18n66d7k@group.calendar.google.com");
  var noNeedTimeTypes = ["全休","自宅業務","午前休","午後休"];
  var needTimeTypes = ["遅刻","早退","外出"];
  var title = name + " " + type;
  if (noNeedTimeTypes.indexOf(type)) {
    for(var i = 0; i < dates.length; i++) {
      vnlabCal.createAllDayEvent(title, new Date(dates[i]));
    }
  }
  
  if (needTimeTypes.indexOf(type)) {
    var mmTimePoint = moment(timePoint);
    var hour = mmTimePoint.hour();
    var minute = mmTimePoint.minute();
    var startTime, endTime;
    for(var i = 0; i < dates.length; i++) {
      if (type == "外出") {
        startTime = new Date(dates[i] + " " + timePoint);
        endTime = moment(startTime).add({hours:hour, minutes:minute}).toDate();
      } else if (type == "遅刻") {
        startTime = new Date(dates[i] + " 08:00");
        endTime = new Date(dates[i] + " " + timePoint);
      } else { //早退
        startTime = new Date(dates[i] + " " + timePoint);
        endTime = new Date(dates[i] + " 17:30");
      }
      vnlabCal.createEvent(title, startTime, endTime);
    }
  }
}
eval(UrlFetchApp.fetch('https://momentjs.com/downloads/moment.min.js').getContentText());

function setMail(iName) {
  var xnpSS = SpreadsheetApp.getActiveSpreadsheet();
  var memberSheet = xnpSS.getSheetByName('members');
  var nameRange = memberSheet.getRange("A1:A100");
  var mailRange = memberSheet.getRange("B1:B100");
  var length = nameRange.getNumRows();
  var i;
  for(i = 1; i <= length; i++) {
    var name = nameRange.getCell(i,1).getValue();
    if (name == iName) break;
  }
  if (i <= length) return mailRange.getCell(i,1).getValue();
  else return null;
}

//function onEdit(e) {
//  var ss = SpreadsheetApp.getActiveSpreadsheet();
//  var s = ss.getActiveSheet();
//  if (s.getName() == "Send_Mail") {
//    var a1Notation = e.range.getA1Notation();
//    if(a1Notation == "C2:C2") {
//      var val = e.range.getValue();
//      var noNeedTimeTypes = ["全休","自宅業務","午前休","午後休"];
//      var needTimeTypes = ["遅刻","早退","外出"];
//      var timeRange = s.getRange("H2:H2");
//      if (noNeedTimeTypes.indexOf(val) > -1) {
//        timeRange.clearContent();
//        var rule = SpreadsheetApp.newDataValidation().requireValueInList(['']).build();
//        timeRange.setDataValidation(rule);
//      } else{
//        var rule = SpreadsheetApp.newDataValidation().requireValueInList([0.5, 1, 1.5, 2, 2.5, 3, 3.5]).build();
//        timeRange.setDataValidation(rule);
//      }
//    }
//  }
//}

function sendMail() {
  var lock = LockService.getDocumentLock();
  lock.waitLock(10000); // in milliseconds
  var xnpSS = SpreadsheetApp.openById('1esahVaCbLaAoEAwnG7XYKYVUO_rWM-Q_0Rn63LfRFWM');
  var sendMailSheet = xnpSS.getSheetByName('Send_Mail');
  var dataRange = sendMailSheet.getRange('A2:J2');
  var name = dataRange.getCell(1, 1).getValue();
  var mail = dataRange.getCell(1, 2).getValue();
  var type = dataRange.getCell(1, 3).getValue();
  var fromDate = dataRange.getCell(1, 4).getValue();
  var toDate = dataRange.getCell(1, 5).getValue();
  var additionDates = dataRange.getCell(1, 6).getValue();
  var reason = dataRange.getCell(1, 7).getValue();
  var timePoint = dataRange.getCell(1, 8).getValue();
  var timeCnt = dataRange.getCell(1, 9).getValue();
  var timeUnit = dataRange.getCell(1, 10).getValue();
  
  var userEmail = Session.getActiveUser().getEmail();
  if (mail && type && fromDate) {
    if (userEmail != mail) {
      Browser.msgBox("Bạn không có quyền gửi email")
    } else {
      // Get time
      var dates = [];
      var mmFromDate = moment(fromDate, "YYYY-MM-DD");
      if (mmFromDate.isValid() && !mmFromDate.isBefore(moment())) {
        var mmToDate = moment(toDate, "YYYY-MM-DD");
        if (mmToDate.isValid() && !mmFromDate.isAfter(mmToDate)) {
          dates = enumerateDaysBetweenDates(mmFromDate, mmToDate);
        } else if(!mmToDate.isValid()) {
          dates.push(mmFromDate.format("YYYY-MM-DD"));
        }
      }
      if (dates.length > 0 && additionDates) {
        var parts = additionDates.trim().split(/ *, */);
        for (var i = 0; i < parts.length; i++) {
          var additionDate = moment(parts[i], "YYYY-MM-DD");
          if (additionDate.isValid() && additionDate.isAfter(moment(dates[dates.length-1],"YYYY-MM-DD"))) {
            dates.push(additionDate.format("YYYY-MM-DD"));
          }
        }
      }
      dates.sort();
      var datesStr = [];
      for(var j = 0; j < dates.length; j++) {
        datesStr.push(moment(dates[j],"YYYY-MM-DD").format("MM/DD"));
      }
      var types = ["全休","自宅業務","午前休","午後休","遅刻","早退","外出"];
      var noNeedTimeTypes = ["全休","自宅業務","午前休","午後休"];
      var needTimeTypes = ["遅刻","早退","外出"];
      if (dates.length > 0 && types.indexOf(type) > -1) {
        var subject = "【勤怠 " + type + "】";
        subject += "【" + datesStr.join("と") + "】" + "【" + name + "】";
        var body = "";
        if (noNeedTimeTypes.indexOf(type) > -1) {
          body += "To:関係各位\nお疲れ様です。" + name + "です。\n表題の件ですが、" + reason + "の為、" + type + "を頂きたいと思います。\n以上、よろしくお願いします。";
        } else if (needTimeTypes.indexOf(type) > -1 && timePoint) {
          Logger.log(timePoint);
          var mmTimePoint = moment(timePoint);
          var hour = mmTimePoint.hour();
          var minute = mmTimePoint.minute();
          var timePointStr = hour.toString() + "時" + minute.toString() + "分";
          body += "To:関係各位\nお疲れ様です。" + name + "です。\n表題の件ですが、" + reason + "の為、" + timePointStr + "（JST）から";
          if (type == "外出") {
            body += timeCnt + timeUnit + "くらい外出させて頂きたいと思います。\n以上、よろしくお願いします。";
          } else if (type == "遅刻") {
            body += "出社させて頂きたいと思います。\n以上、よろしくお願いします。";
          } else {
            body += "早退させて頂きたいと思います。\n以上、よろしくお願いします。";
          }
        }
        if (body) {
          var confirmCnt = "-----\\nSubject: " + subject + "\\n-----\\nBody:\\n" + body + "\\n-----\\n";
          var confirm = Browser.msgBox("Do you want to send this mail?", confirmCnt, Browser.Buttons.YES_NO);
          if (confirm == "yes") {
            var toEmail = Browser.inputBox('Nhập địa chỉ email:');
            GmailApp.sendEmail(toEmail, subject, body, {'from': mail});
            var sentSheet = xnpSS.getSheetByName('sent');
            var targetRow = sentSheet.getLastRow()+1;
            var targetRange = sentSheet.getRange("A" + targetRow.toString() + ":J" + targetRow.toString());
            targetRange.setValues(dataRange.getValues());
            Browser.msgBox("Mail của bạn đã được gửi đi ^^");
          }
        }
      } else {
        Browser.msgBox("Xin hãy kiểm tra lại thông tin đã nhập!");
      }
    }
  }
  // Release the lock so that other processes can continue.
   lock.releaseLock();
}

var enumerateDaysBetweenDates = function(startDate, endDate) {
    var dates = [];
    var currDate = startDate;

    while(!currDate.isAfter(endDate)) {
      Logger.log(currDate.format("YYYY-MM-DD"));
      dates.push(currDate.format("YYYY-MM-DD"));
      currDate.add(1,"days");
    }

    return dates;
};

var addCalendarEvent = function(name, type, dates, timePoint, timeCnt, timeUnit) {
  var vnlabCal = CalendarApp.getCalendarById("runsystem.net_ks1mp6gdm9c73i3r9a18n66d7k@group.calendar.google.com");
  var noNeedTimeTypes = ["全休","自宅業務","午前休","午後休"];
  var needTimeTypes = ["遅刻","早退","外出"];
  var title = name + " " + type;
  if (noNeedTimeTypes.indexOf(type)) {
    for(var i = 0; i < dates.length; i++) {
      vnlabCal.createAllDayEvent(title, new Date(dates[i]));
    }
  }
  
  if (needTimeTypes.indexOf(type)) {
    var mmTimePoint = moment(timePoint);
    var hour = mmTimePoint.hour();
    var minute = mmTimePoint.minute();
    var startTime, endTime;
    for(var i = 0; i < dates.length; i++) {
      if (type == "外出") {
        startTime = new Date(dates[i] + " " + timePoint);
        endTime = moment(startTime).add({hours:hour, minutes:minute}).toDate();
      } else if (type == "遅刻") {
        startTime = new Date(dates[i] + " 08:00");
        endTime = new Date(dates[i] + " " + timePoint);
      } else { //早退
        startTime = new Date(dates[i] + " " + timePoint);
        endTime = new Date(dates[i] + " 17:30");
      }
      vnlabCal.createEvent(title, startTime, endTime);
    }
  }
}
eval(UrlFetchApp.fetch('https://momentjs.com/downloads/moment.min.js').getContentText());

function setMail(iName) {
  var xnpSS = SpreadsheetApp.getActiveSpreadsheet();
  var memberSheet = xnpSS.getSheetByName('members');
  var nameRange = memberSheet.getRange("A1:A100");
  var mailRange = memberSheet.getRange("B1:B100");
  var length = nameRange.getNumRows();
  var i;
  for(i = 1; i <= length; i++) {
    var name = nameRange.getCell(i,1).getValue();
    if (name == iName) break;
  }
  if (i <= length) return mailRange.getCell(i,1).getValue();
  else return null;
}

//function onEdit(e) {
//  var ss = SpreadsheetApp.getActiveSpreadsheet();
//  var s = ss.getActiveSheet();
//  if (s.getName() == "Send_Mail") {
//    var a1Notation = e.range.getA1Notation();
//    if(a1Notation == "C2:C2") {
//      var val = e.range.getValue();
//      var noNeedTimeTypes = ["全休","自宅業務","午前休","午後休"];
//      var needTimeTypes = ["遅刻","早退","外出"];
//      var timeRange = s.getRange("H2:H2");
//      if (noNeedTimeTypes.indexOf(val) > -1) {
//        timeRange.clearContent();
//        var rule = SpreadsheetApp.newDataValidation().requireValueInList(['']).build();
//        timeRange.setDataValidation(rule);
//      } else{
//        var rule = SpreadsheetApp.newDataValidation().requireValueInList([0.5, 1, 1.5, 2, 2.5, 3, 3.5]).build();
//        timeRange.setDataValidation(rule);
//      }
//    }
//  }
//}

function sendMail() {
  var lock = LockService.getDocumentLock();
  lock.waitLock(10000); // in milliseconds
  var xnpSS = SpreadsheetApp.openById('1esahVaCbLaAoEAwnG7XYKYVUO_rWM-Q_0Rn63LfRFWM');
  var sendMailSheet = xnpSS.getSheetByName('Send_Mail');
  var dataRange = sendMailSheet.getRange('A2:J2');
  var name = dataRange.getCell(1, 1).getValue();
  var mail = dataRange.getCell(1, 2).getValue();
  var type = dataRange.getCell(1, 3).getValue();
  var fromDate = dataRange.getCell(1, 4).getValue();
  var toDate = dataRange.getCell(1, 5).getValue();
  var additionDates = dataRange.getCell(1, 6).getValue();
  var reason = dataRange.getCell(1, 7).getValue();
  var timePoint = dataRange.getCell(1, 8).getValue();
  var timeCnt = dataRange.getCell(1, 9).getValue();
  var timeUnit = dataRange.getCell(1, 10).getValue();
  
  var userEmail = Session.getActiveUser().getEmail();
  if (mail && type && fromDate) {
    if (userEmail != mail) {
      Browser.msgBox("Bạn không có quyền gửi email")
    } else {
      // Get time
      var dates = [];
      var mmFromDate = moment(fromDate, "YYYY-MM-DD");
      if (mmFromDate.isValid() && !mmFromDate.isBefore(moment())) {
        var mmToDate = moment(toDate, "YYYY-MM-DD");
        if (mmToDate.isValid() && !mmFromDate.isAfter(mmToDate)) {
          dates = enumerateDaysBetweenDates(mmFromDate, mmToDate);
        } else if(!mmToDate.isValid()) {
          dates.push(mmFromDate.format("YYYY-MM-DD"));
        }
      }
      if (dates.length > 0 && additionDates) {
        var parts = additionDates.trim().split(/ *, */);
        for (var i = 0; i < parts.length; i++) {
          var additionDate = moment(parts[i], "YYYY-MM-DD");
          if (additionDate.isValid() && additionDate.isAfter(moment(dates[dates.length-1],"YYYY-MM-DD"))) {
            dates.push(additionDate.format("YYYY-MM-DD"));
          }
        }
      }
      dates.sort();
      var datesStr = [];
      for(var j = 0; j < dates.length; j++) {
        datesStr.push(moment(dates[j],"YYYY-MM-DD").format("MM/DD"));
      }
      var types = ["全休","自宅業務","午前休","午後休","遅刻","早退","外出"];
      var noNeedTimeTypes = ["全休","自宅業務","午前休","午後休"];
      var needTimeTypes = ["遅刻","早退","外出"];
      if (dates.length > 0 && types.indexOf(type) > -1) {
        var subject = "【勤怠 " + type + "】";
        subject += "【" + datesStr.join("と") + "】" + "【" + name + "】";
        var body = "";
        if (noNeedTimeTypes.indexOf(type) > -1) {
          body += "To:関係各位\nお疲れ様です。" + name + "です。\n表題の件ですが、" + reason + "の為、" + type + "を頂きたいと思います。\n以上、よろしくお願いします。";
        } else if (needTimeTypes.indexOf(type) > -1 && timePoint) {
          Logger.log(timePoint);
          var mmTimePoint = moment(timePoint);
          var hour = mmTimePoint.hour();
          var minute = mmTimePoint.minute();
          var timePointStr = hour.toString() + "時" + minute.toString() + "分";
          body += "To:関係各位\nお疲れ様です。" + name + "です。\n表題の件ですが、" + reason + "の為、" + timePointStr + "（JST）から";
          if (type == "外出") {
            body += timeCnt + timeUnit + "くらい外出させて頂きたいと思います。\n以上、よろしくお願いします。";
          } else if (type == "遅刻") {
            body += "出社させて頂きたいと思います。\n以上、よろしくお願いします。";
          } else {
            body += "早退させて頂きたいと思います。\n以上、よろしくお願いします。";
          }
        }
        if (body) {
          var confirmCnt = "-----\\nSubject: " + subject + "\\n-----\\nBody:\\n" + body + "\\n-----\\n";
          var confirm = Browser.msgBox("Do you want to send this mail?", confirmCnt, Browser.Buttons.YES_NO);
          if (confirm == "yes") {
            var toEmail = Browser.inputBox('Nhập địa chỉ email:');
            GmailApp.sendEmail(toEmail, subject, body, {'from': mail});
            var sentSheet = xnpSS.getSheetByName('sent');
            var targetRow = sentSheet.getLastRow()+1;
            var targetRange = sentSheet.getRange("A" + targetRow.toString() + ":J" + targetRow.toString());
            targetRange.setValues(dataRange.getValues());
            Browser.msgBox("Mail của bạn đã được gửi đi ^^");
          }
        }
      } else {
        Browser.msgBox("Xin hãy kiểm tra lại thông tin đã nhập!");
      }
    }
  }
  // Release the lock so that other processes can continue.
   lock.releaseLock();
}

var enumerateDaysBetweenDates = function(startDate, endDate) {
    var dates = [];
    var currDate = startDate;

    while(!currDate.isAfter(endDate)) {
      Logger.log(currDate.format("YYYY-MM-DD"));
      dates.push(currDate.format("YYYY-MM-DD"));
      currDate.add(1,"days");
    }

    return dates;
};

var addCalendarEvent = function(name, type, dates, timePoint, timeCnt, timeUnit) {
  var vnlabCal = CalendarApp.getCalendarById("runsystem.net_ks1mp6gdm9c73i3r9a18n66d7k@group.calendar.google.com");
  var noNeedTimeTypes = ["全休","自宅業務","午前休","午後休"];
  var needTimeTypes = ["遅刻","早退","外出"];
  var title = name + " " + type;
  if (noNeedTimeTypes.indexOf(type)) {
    for(var i = 0; i < dates.length; i++) {
      vnlabCal.createAllDayEvent(title, new Date(dates[i]));
    }
  }
  
  if (needTimeTypes.indexOf(type)) {
    var mmTimePoint = moment(timePoint);
    var hour = mmTimePoint.hour();
    var minute = mmTimePoint.minute();
    var startTime, endTime;
    for(var i = 0; i < dates.length; i++) {
      if (type == "外出") {
        startTime = new Date(dates[i] + " " + timePoint);
        endTime = moment(startTime).add({hours:hour, minutes:minute}).toDate();
      } else if (type == "遅刻") {
        startTime = new Date(dates[i] + " 08:00");
        endTime = new Date(dates[i] + " " + timePoint);
      } else { //早退
        startTime = new Date(dates[i] + " " + timePoint);
        endTime = new Date(dates[i] + " 17:30");
      }
      vnlabCal.createEvent(title, startTime, endTime);
    }
  }
}
eval(UrlFetchApp.fetch('https://momentjs.com/downloads/moment.min.js').getContentText());

function setMail(iName) {
  var xnpSS = SpreadsheetApp.getActiveSpreadsheet();
  var memberSheet = xnpSS.getSheetByName('members');
  var nameRange = memberSheet.getRange("A1:A100");
  var mailRange = memberSheet.getRange("B1:B100");
  var length = nameRange.getNumRows();
  var i;
  for(i = 1; i <= length; i++) {
    var name = nameRange.getCell(i,1).getValue();
    if (name == iName) break;
  }
  if (i <= length) return mailRange.getCell(i,1).getValue();
  else return null;
}

//function onEdit(e) {
//  var ss = SpreadsheetApp.getActiveSpreadsheet();
//  var s = ss.getActiveSheet();
//  if (s.getName() == "Send_Mail") {
//    var a1Notation = e.range.getA1Notation();
//    if(a1Notation == "C2:C2") {
//      var val = e.range.getValue();
//      var noNeedTimeTypes = ["全休","自宅業務","午前休","午後休"];
//      var needTimeTypes = ["遅刻","早退","外出"];
//      var timeRange = s.getRange("H2:H2");
//      if (noNeedTimeTypes.indexOf(val) > -1) {
//        timeRange.clearContent();
//        var rule = SpreadsheetApp.newDataValidation().requireValueInList(['']).build();
//        timeRange.setDataValidation(rule);
//      } else{
//        var rule = SpreadsheetApp.newDataValidation().requireValueInList([0.5, 1, 1.5, 2, 2.5, 3, 3.5]).build();
//        timeRange.setDataValidation(rule);
//      }
//    }
//  }
//}

function sendMail() {
  var lock = LockService.getDocumentLock();
  lock.waitLock(10000); // in milliseconds
  var xnpSS = SpreadsheetApp.openById('1esahVaCbLaAoEAwnG7XYKYVUO_rWM-Q_0Rn63LfRFWM');
  var sendMailSheet = xnpSS.getSheetByName('Send_Mail');
  var dataRange = sendMailSheet.getRange('A2:J2');
  var name = dataRange.getCell(1, 1).getValue();
  var mail = dataRange.getCell(1, 2).getValue();
  var type = dataRange.getCell(1, 3).getValue();
  var fromDate = dataRange.getCell(1, 4).getValue();
  var toDate = dataRange.getCell(1, 5).getValue();
  var additionDates = dataRange.getCell(1, 6).getValue();
  var reason = dataRange.getCell(1, 7).getValue();
  var timePoint = dataRange.getCell(1, 8).getValue();
  var timeCnt = dataRange.getCell(1, 9).getValue();
  var timeUnit = dataRange.getCell(1, 10).getValue();
  
  var userEmail = Session.getActiveUser().getEmail();
  if (mail && type && fromDate) {
    if (userEmail != mail) {
      Browser.msgBox("Bạn không có quyền gửi email")
    } else {
      // Get time
      var dates = [];
      var mmFromDate = moment(fromDate, "YYYY-MM-DD");
      if (mmFromDate.isValid() && !mmFromDate.isBefore(moment())) {
        var mmToDate = moment(toDate, "YYYY-MM-DD");
        if (mmToDate.isValid() && !mmFromDate.isAfter(mmToDate)) {
          dates = enumerateDaysBetweenDates(mmFromDate, mmToDate);
        } else if(!mmToDate.isValid()) {
          dates.push(mmFromDate.format("YYYY-MM-DD"));
        }
      }
      if (dates.length > 0 && additionDates) {
        var parts = additionDates.trim().split(/ *, */);
        for (var i = 0; i < parts.length; i++) {
          var additionDate = moment(parts[i], "YYYY-MM-DD");
          if (additionDate.isValid() && additionDate.isAfter(moment(dates[dates.length-1],"YYYY-MM-DD"))) {
            dates.push(additionDate.format("YYYY-MM-DD"));
          }
        }
      }
      dates.sort();
      var datesStr = [];
      for(var j = 0; j < dates.length; j++) {
        datesStr.push(moment(dates[j],"YYYY-MM-DD").format("MM/DD"));
      }
      var types = ["全休","自宅業務","午前休","午後休","遅刻","早退","外出"];
      var noNeedTimeTypes = ["全休","自宅業務","午前休","午後休"];
      var needTimeTypes = ["遅刻","早退","外出"];
      if (dates.length > 0 && types.indexOf(type) > -1) {
        var subject = "【勤怠 " + type + "】";
        subject += "【" + datesStr.join("と") + "】" + "【" + name + "】";
        var body = "";
        if (noNeedTimeTypes.indexOf(type) > -1) {
          body += "To:関係各位\nお疲れ様です。" + name + "です。\n表題の件ですが、" + reason + "の為、" + type + "を頂きたいと思います。\n以上、よろしくお願いします。";
        } else if (needTimeTypes.indexOf(type) > -1 && timePoint) {
          Logger.log(timePoint);
          var mmTimePoint = moment(timePoint);
          var hour = mmTimePoint.hour();
          var minute = mmTimePoint.minute();
          var timePointStr = hour.toString() + "時" + minute.toString() + "分";
          body += "To:関係各位\nお疲れ様です。" + name + "です。\n表題の件ですが、" + reason + "の為、" + timePointStr + "（JST）から";
          if (type == "外出") {
            body += timeCnt + timeUnit + "くらい外出させて頂きたいと思います。\n以上、よろしくお願いします。";
          } else if (type == "遅刻") {
            body += "出社させて頂きたいと思います。\n以上、よろしくお願いします。";
          } else {
            body += "早退させて頂きたいと思います。\n以上、よろしくお願いします。";
          }
        }
        if (body) {
          var confirmCnt = "-----\\nSubject: " + subject + "\\n-----\\nBody:\\n" + body + "\\n-----\\n";
          var confirm = Browser.msgBox("Do you want to send this mail?", confirmCnt, Browser.Buttons.YES_NO);
          if (confirm == "yes") {
            var toEmail = Browser.inputBox('Nhập địa chỉ email:');
            GmailApp.sendEmail(toEmail, subject, body, {'from': mail});
            var sentSheet = xnpSS.getSheetByName('sent');
            var targetRow = sentSheet.getLastRow()+1;
            var targetRange = sentSheet.getRange("A" + targetRow.toString() + ":J" + targetRow.toString());
            targetRange.setValues(dataRange.getValues());
            Browser.msgBox("Mail của bạn đã được gửi đi ^^");
          }
        }
      } else {
        Browser.msgBox("Xin hãy kiểm tra lại thông tin đã nhập!");
      }
    }
  }
  // Release the lock so that other processes can continue.
   lock.releaseLock();
}

var enumerateDaysBetweenDates = function(startDate, endDate) {
    var dates = [];
    var currDate = startDate;

    while(!currDate.isAfter(endDate)) {
      Logger.log(currDate.format("YYYY-MM-DD"));
      dates.push(currDate.format("YYYY-MM-DD"));
      currDate.add(1,"days");
    }

    return dates;
};

var addCalendarEvent = function(name, type, dates, timePoint, timeCnt, timeUnit) {
  var vnlabCal = CalendarApp.getCalendarById("runsystem.net_ks1mp6gdm9c73i3r9a18n66d7k@group.calendar.google.com");
  var noNeedTimeTypes = ["全休","自宅業務","午前休","午後休"];
  var needTimeTypes = ["遅刻","早退","外出"];
  var title = name + " " + type;
  if (noNeedTimeTypes.indexOf(type)) {
    for(var i = 0; i < dates.length; i++) {
      vnlabCal.createAllDayEvent(title, new Date(dates[i]));
    }
  }
  
  if (needTimeTypes.indexOf(type)) {
    var mmTimePoint = moment(timePoint);
    var hour = mmTimePoint.hour();
    var minute = mmTimePoint.minute();
    var startTime, endTime;
    for(var i = 0; i < dates.length; i++) {
      if (type == "外出") {
        startTime = new Date(dates[i] + " " + timePoint);
        endTime = moment(startTime).add({hours:hour, minutes:minute}).toDate();
      } else if (type == "遅刻") {
        startTime = new Date(dates[i] + " 08:00");
        endTime = new Date(dates[i] + " " + timePoint);
      } else { //早退
        startTime = new Date(dates[i] + " " + timePoint);
        endTime = new Date(dates[i] + " 17:30");
      }
      vnlabCal.createEvent(title, startTime, endTime);
    }
  }
}
eval(UrlFetchApp.fetch('https://momentjs.com/downloads/moment.min.js').getContentText());

function setMail(iName) {
  var xnpSS = SpreadsheetApp.getActiveSpreadsheet();
  var memberSheet = xnpSS.getSheetByName('members');
  var nameRange = memberSheet.getRange("A1:A100");
  var mailRange = memberSheet.getRange("B1:B100");
  var length = nameRange.getNumRows();
  var i;
  for(i = 1; i <= length; i++) {
    var name = nameRange.getCell(i,1).getValue();
    if (name == iName) break;
  }
  if (i <= length) return mailRange.getCell(i,1).getValue();
  else return null;
}

//function onEdit(e) {
//  var ss = SpreadsheetApp.getActiveSpreadsheet();
//  var s = ss.getActiveSheet();
//  if (s.getName() == "Send_Mail") {
//    var a1Notation = e.range.getA1Notation();
//    if(a1Notation == "C2:C2") {
//      var val = e.range.getValue();
//      var noNeedTimeTypes = ["全休","自宅業務","午前休","午後休"];
//      var needTimeTypes = ["遅刻","早退","外出"];
//      var timeRange = s.getRange("H2:H2");
//      if (noNeedTimeTypes.indexOf(val) > -1) {
//        timeRange.clearContent();
//        var rule = SpreadsheetApp.newDataValidation().requireValueInList(['']).build();
//        timeRange.setDataValidation(rule);
//      } else{
//        var rule = SpreadsheetApp.newDataValidation().requireValueInList([0.5, 1, 1.5, 2, 2.5, 3, 3.5]).build();
//        timeRange.setDataValidation(rule);
//      }
//    }
//  }
//}

function sendMail() {
  var lock = LockService.getDocumentLock();
  lock.waitLock(10000); // in milliseconds
  var xnpSS = SpreadsheetApp.openById('1esahVaCbLaAoEAwnG7XYKYVUO_rWM-Q_0Rn63LfRFWM');
  var sendMailSheet = xnpSS.getSheetByName('Send_Mail');
  var dataRange = sendMailSheet.getRange('A2:J2');
  var name = dataRange.getCell(1, 1).getValue();
  var mail = dataRange.getCell(1, 2).getValue();
  var type = dataRange.getCell(1, 3).getValue();
  var fromDate = dataRange.getCell(1, 4).getValue();
  var toDate = dataRange.getCell(1, 5).getValue();
  var additionDates = dataRange.getCell(1, 6).getValue();
  var reason = dataRange.getCell(1, 7).getValue();
  var timePoint = dataRange.getCell(1, 8).getValue();
  var timeCnt = dataRange.getCell(1, 9).getValue();
  var timeUnit = dataRange.getCell(1, 10).getValue();
  
  var userEmail = Session.getActiveUser().getEmail();
  if (mail && type && fromDate) {
    if (userEmail != mail) {
      Browser.msgBox("Bạn không có quyền gửi email")
    } else {
      // Get time
      var dates = [];
      var mmFromDate = moment(fromDate, "YYYY-MM-DD");
      if (mmFromDate.isValid() && !mmFromDate.isBefore(moment())) {
        var mmToDate = moment(toDate, "YYYY-MM-DD");
        if (mmToDate.isValid() && !mmFromDate.isAfter(mmToDate)) {
          dates = enumerateDaysBetweenDates(mmFromDate, mmToDate);
        } else if(!mmToDate.isValid()) {
          dates.push(mmFromDate.format("YYYY-MM-DD"));
        }
      }
      if (dates.length > 0 && additionDates) {
        var parts = additionDates.trim().split(/ *, */);
        for (var i = 0; i < parts.length; i++) {
          var additionDate = moment(parts[i], "YYYY-MM-DD");
          if (additionDate.isValid() && additionDate.isAfter(moment(dates[dates.length-1],"YYYY-MM-DD"))) {
            dates.push(additionDate.format("YYYY-MM-DD"));
          }
        }
      }
      dates.sort();
      var datesStr = [];
      for(var j = 0; j < dates.length; j++) {
        datesStr.push(moment(dates[j],"YYYY-MM-DD").format("MM/DD"));
      }
      var types = ["全休","自宅業務","午前休","午後休","遅刻","早退","外出"];
      var noNeedTimeTypes = ["全休","自宅業務","午前休","午後休"];
      var needTimeTypes = ["遅刻","早退","外出"];
      if (dates.length > 0 && types.indexOf(type) > -1) {
        var subject = "【勤怠 " + type + "】";
        subject += "【" + datesStr.join("と") + "】" + "【" + name + "】";
        var body = "";
        if (noNeedTimeTypes.indexOf(type) > -1) {
          body += "To:関係各位\nお疲れ様です。" + name + "です。\n表題の件ですが、" + reason + "の為、" + type + "を頂きたいと思います。\n以上、よろしくお願いします。";
        } else if (needTimeTypes.indexOf(type) > -1 && timePoint) {
          Logger.log(timePoint);
          var mmTimePoint = moment(timePoint);
          var hour = mmTimePoint.hour();
          var minute = mmTimePoint.minute();
          var timePointStr = hour.toString() + "時" + minute.toString() + "分";
          body += "To:関係各位\nお疲れ様です。" + name + "です。\n表題の件ですが、" + reason + "の為、" + timePointStr + "（JST）から";
          if (type == "外出") {
            body += timeCnt + timeUnit + "くらい外出させて頂きたいと思います。\n以上、よろしくお願いします。";
          } else if (type == "遅刻") {
            body += "出社させて頂きたいと思います。\n以上、よろしくお願いします。";
          } else {
            body += "早退させて頂きたいと思います。\n以上、よろしくお願いします。";
          }
        }
        if (body) {
          var confirmCnt = "-----\\nSubject: " + subject + "\\n-----\\nBody:\\n" + body + "\\n-----\\n";
          var confirm = Browser.msgBox("Do you want to send this mail?", confirmCnt, Browser.Buttons.YES_NO);
          if (confirm == "yes") {
            var toEmail = Browser.inputBox('Nhập địa chỉ email:');
            GmailApp.sendEmail(toEmail, subject, body, {'from': mail});
            var sentSheet = xnpSS.getSheetByName('sent');
            var targetRow = sentSheet.getLastRow()+1;
            var targetRange = sentSheet.getRange("A" + targetRow.toString() + ":J" + targetRow.toString());
            targetRange.setValues(dataRange.getValues());
            Browser.msgBox("Mail của bạn đã được gửi đi ^^");
          }
        }
      } else {
        Browser.msgBox("Xin hãy kiểm tra lại thông tin đã nhập!");
      }
    }
  }
  // Release the lock so that other processes can continue.
   lock.releaseLock();
}

var enumerateDaysBetweenDates = function(startDate, endDate) {
    var dates = [];
    var currDate = startDate;

    while(!currDate.isAfter(endDate)) {
      Logger.log(currDate.format("YYYY-MM-DD"));
      dates.push(currDate.format("YYYY-MM-DD"));
      currDate.add(1,"days");
    }

    return dates;
};

var addCalendarEvent = function(name, type, dates, timePoint, timeCnt, timeUnit) {
  var vnlabCal = CalendarApp.getCalendarById("runsystem.net_ks1mp6gdm9c73i3r9a18n66d7k@group.calendar.google.com");
  var noNeedTimeTypes = ["全休","自宅業務","午前休","午後休"];
  var needTimeTypes = ["遅刻","早退","外出"];
  var title = name + " " + type;
  if (noNeedTimeTypes.indexOf(type)) {
    for(var i = 0; i < dates.length; i++) {
      vnlabCal.createAllDayEvent(title, new Date(dates[i]));
    }
  }
  
  if (needTimeTypes.indexOf(type)) {
    var mmTimePoint = moment(timePoint);
    var hour = mmTimePoint.hour();
    var minute = mmTimePoint.minute();
    var startTime, endTime;
    for(var i = 0; i < dates.length; i++) {
      if (type == "外出") {
        startTime = new Date(dates[i] + " " + timePoint);
        endTime = moment(startTime).add({hours:hour, minutes:minute}).toDate();
      } else if (type == "遅刻") {
        startTime = new Date(dates[i] + " 08:00");
        endTime = new Date(dates[i] + " " + timePoint);
      } else { //早退
        startTime = new Date(dates[i] + " " + timePoint);
        endTime = new Date(dates[i] + " 17:30");
      }
      vnlabCal.createEvent(title, startTime, endTime);
    }
  }
}
eval(UrlFetchApp.fetch('https://momentjs.com/downloads/moment.min.js').getContentText());

function setMail(iName) {
  var xnpSS = SpreadsheetApp.getActiveSpreadsheet();
  var memberSheet = xnpSS.getSheetByName('members');
  var nameRange = memberSheet.getRange("A1:A100");
  var mailRange = memberSheet.getRange("B1:B100");
  var length = nameRange.getNumRows();
  var i;
  for(i = 1; i <= length; i++) {
    var name = nameRange.getCell(i,1).getValue();
    if (name == iName) break;
  }
  if (i <= length) return mailRange.getCell(i,1).getValue();
  else return null;
}

//function onEdit(e) {
//  var ss = SpreadsheetApp.getActiveSpreadsheet();
//  var s = ss.getActiveSheet();
//  if (s.getName() == "Send_Mail") {
//    var a1Notation = e.range.getA1Notation();
//    if(a1Notation == "C2:C2") {
//      var val = e.range.getValue();
//      var noNeedTimeTypes = ["全休","自宅業務","午前休","午後休"];
//      var needTimeTypes = ["遅刻","早退","外出"];
//      var timeRange = s.getRange("H2:H2");
//      if (noNeedTimeTypes.indexOf(val) > -1) {
//        timeRange.clearContent();
//        var rule = SpreadsheetApp.newDataValidation().requireValueInList(['']).build();
//        timeRange.setDataValidation(rule);
//      } else{
//        var rule = SpreadsheetApp.newDataValidation().requireValueInList([0.5, 1, 1.5, 2, 2.5, 3, 3.5]).build();
//        timeRange.setDataValidation(rule);
//      }
//    }
//  }
//}

function sendMail() {
  var lock = LockService.getDocumentLock();
  lock.waitLock(10000); // in milliseconds
  var xnpSS = SpreadsheetApp.openById('1esahVaCbLaAoEAwnG7XYKYVUO_rWM-Q_0Rn63LfRFWM');
  var sendMailSheet = xnpSS.getSheetByName('Send_Mail');
  var dataRange = sendMailSheet.getRange('A2:J2');
  var name = dataRange.getCell(1, 1).getValue();
  var mail = dataRange.getCell(1, 2).getValue();
  var type = dataRange.getCell(1, 3).getValue();
  var fromDate = dataRange.getCell(1, 4).getValue();
  var toDate = dataRange.getCell(1, 5).getValue();
  var additionDates = dataRange.getCell(1, 6).getValue();
  var reason = dataRange.getCell(1, 7).getValue();
  var timePoint = dataRange.getCell(1, 8).getValue();
  var timeCnt = dataRange.getCell(1, 9).getValue();
  var timeUnit = dataRange.getCell(1, 10).getValue();
  
  var userEmail = Session.getActiveUser().getEmail();
  if (mail && type && fromDate) {
    if (userEmail != mail) {
      Browser.msgBox("Bạn không có quyền gửi email")
    } else {
      // Get time
      var dates = [];
      var mmFromDate = moment(fromDate, "YYYY-MM-DD");
      if (mmFromDate.isValid() && !mmFromDate.isBefore(moment())) {
        var mmToDate = moment(toDate, "YYYY-MM-DD");
        if (mmToDate.isValid() && !mmFromDate.isAfter(mmToDate)) {
          dates = enumerateDaysBetweenDates(mmFromDate, mmToDate);
        } else if(!mmToDate.isValid()) {
          dates.push(mmFromDate.format("YYYY-MM-DD"));
        }
      }
      if (dates.length > 0 && additionDates) {
        var parts = additionDates.trim().split(/ *, */);
        for (var i = 0; i < parts.length; i++) {
          var additionDate = moment(parts[i], "YYYY-MM-DD");
          if (additionDate.isValid() && additionDate.isAfter(moment(dates[dates.length-1],"YYYY-MM-DD"))) {
            dates.push(additionDate.format("YYYY-MM-DD"));
          }
        }
      }
      dates.sort();
      var datesStr = [];
      for(var j = 0; j < dates.length; j++) {
        datesStr.push(moment(dates[j],"YYYY-MM-DD").format("MM/DD"));
      }
      var types = ["全休","自宅業務","午前休","午後休","遅刻","早退","外出"];
      var noNeedTimeTypes = ["全休","自宅業務","午前休","午後休"];
      var needTimeTypes = ["遅刻","早退","外出"];
      if (dates.length > 0 && types.indexOf(type) > -1) {
        var subject = "【勤怠 " + type + "】";
        subject += "【" + datesStr.join("と") + "】" + "【" + name + "】";
        var body = "";
        if (noNeedTimeTypes.indexOf(type) > -1) {
          body += "To:関係各位\nお疲れ様です。" + name + "です。\n表題の件ですが、" + reason + "の為、" + type + "を頂きたいと思います。\n以上、よろしくお願いします。";
        } else if (needTimeTypes.indexOf(type) > -1 && timePoint) {
          Logger.log(timePoint);
          var mmTimePoint = moment(timePoint);
          var hour = mmTimePoint.hour();
          var minute = mmTimePoint.minute();
          var timePointStr = hour.toString() + "時" + minute.toString() + "分";
          body += "To:関係各位\nお疲れ様です。" + name + "です。\n表題の件ですが、" + reason + "の為、" + timePointStr + "（JST）から";
          if (type == "外出") {
            body += timeCnt + timeUnit + "くらい外出させて頂きたいと思います。\n以上、よろしくお願いします。";
          } else if (type == "遅刻") {
            body += "出社させて頂きたいと思います。\n以上、よろしくお願いします。";
          } else {
            body += "早退させて頂きたいと思います。\n以上、よろしくお願いします。";
          }
        }
        if (body) {
          var confirmCnt = "-----\\nSubject: " + subject + "\\n-----\\nBody:\\n" + body + "\\n-----\\n";
          var confirm = Browser.msgBox("Do you want to send this mail?", confirmCnt, Browser.Buttons.YES_NO);
          if (confirm == "yes") {
            var toEmail = Browser.inputBox('Nhập địa chỉ email:');
            GmailApp.sendEmail(toEmail, subject, body, {'from': mail});
            var sentSheet = xnpSS.getSheetByName('sent');
            var targetRow = sentSheet.getLastRow()+1;
            var targetRange = sentSheet.getRange("A" + targetRow.toString() + ":J" + targetRow.toString());
            targetRange.setValues(dataRange.getValues());
            Browser.msgBox("Mail của bạn đã được gửi đi ^^");
          }
        }
      } else {
        Browser.msgBox("Xin hãy kiểm tra lại thông tin đã nhập!");
      }
    }
  }
  // Release the lock so that other processes can continue.
   lock.releaseLock();
}

var enumerateDaysBetweenDates = function(startDate, endDate) {
    var dates = [];
    var currDate = startDate;

    while(!currDate.isAfter(endDate)) {
      Logger.log(currDate.format("YYYY-MM-DD"));
      dates.push(currDate.format("YYYY-MM-DD"));
      currDate.add(1,"days");
    }

    return dates;
};

var addCalendarEvent = function(name, type, dates, timePoint, timeCnt, timeUnit) {
  var vnlabCal = CalendarApp.getCalendarById("runsystem.net_ks1mp6gdm9c73i3r9a18n66d7k@group.calendar.google.com");
  var noNeedTimeTypes = ["全休","自宅業務","午前休","午後休"];
  var needTimeTypes = ["遅刻","早退","外出"];
  var title = name + " " + type;
  if (noNeedTimeTypes.indexOf(type)) {
    for(var i = 0; i < dates.length; i++) {
      vnlabCal.createAllDayEvent(title, new Date(dates[i]));
    }
  }
  
  if (needTimeTypes.indexOf(type)) {
    var mmTimePoint = moment(timePoint);
    var hour = mmTimePoint.hour();
    var minute = mmTimePoint.minute();
    var startTime, endTime;
    for(var i = 0; i < dates.length; i++) {
      if (type == "外出") {
        startTime = new Date(dates[i] + " " + timePoint);
        endTime = moment(startTime).add({hours:hour, minutes:minute}).toDate();
      } else if (type == "遅刻") {
        startTime = new Date(dates[i] + " 08:00");
        endTime = new Date(dates[i] + " " + timePoint);
      } else { //早退
        startTime = new Date(dates[i] + " " + timePoint);
        endTime = new Date(dates[i] + " 17:30");
      }
      vnlabCal.createEvent(title, startTime, endTime);
    }
  }
}
eval(UrlFetchApp.fetch('https://momentjs.com/downloads/moment.min.js').getContentText());

function setMail(iName) {
  var xnpSS = SpreadsheetApp.getActiveSpreadsheet();
  var memberSheet = xnpSS.getSheetByName('members');
  var nameRange = memberSheet.getRange("A1:A100");
  var mailRange = memberSheet.getRange("B1:B100");
  var length = nameRange.getNumRows();
  var i;
  for(i = 1; i <= length; i++) {
    var name = nameRange.getCell(i,1).getValue();
    if (name == iName) break;
  }
  if (i <= length) return mailRange.getCell(i,1).getValue();
  else return null;
}

//function onEdit(e) {
//  var ss = SpreadsheetApp.getActiveSpreadsheet();
//  var s = ss.getActiveSheet();
//  if (s.getName() == "Send_Mail") {
//    var a1Notation = e.range.getA1Notation();
//    if(a1Notation == "C2:C2") {
//      var val = e.range.getValue();
//      var noNeedTimeTypes = ["全休","自宅業務","午前休","午後休"];
//      var needTimeTypes = ["遅刻","早退","外出"];
//      var timeRange = s.getRange("H2:H2");
//      if (noNeedTimeTypes.indexOf(val) > -1) {
//        timeRange.clearContent();
//        var rule = SpreadsheetApp.newDataValidation().requireValueInList(['']).build();
//        timeRange.setDataValidation(rule);
//      } else{
//        var rule = SpreadsheetApp.newDataValidation().requireValueInList([0.5, 1, 1.5, 2, 2.5, 3, 3.5]).build();
//        timeRange.setDataValidation(rule);
//      }
//    }
//  }
//}

function sendMail() {
  var lock = LockService.getDocumentLock();
  lock.waitLock(10000); // in milliseconds
  var xnpSS = SpreadsheetApp.openById('1esahVaCbLaAoEAwnG7XYKYVUO_rWM-Q_0Rn63LfRFWM');
  var sendMailSheet = xnpSS.getSheetByName('Send_Mail');
  var dataRange = sendMailSheet.getRange('A2:J2');
  var name = dataRange.getCell(1, 1).getValue();
  var mail = dataRange.getCell(1, 2).getValue();
  var type = dataRange.getCell(1, 3).getValue();
  var fromDate = dataRange.getCell(1, 4).getValue();
  var toDate = dataRange.getCell(1, 5).getValue();
  var additionDates = dataRange.getCell(1, 6).getValue();
  var reason = dataRange.getCell(1, 7).getValue();
  var timePoint = dataRange.getCell(1, 8).getValue();
  var timeCnt = dataRange.getCell(1, 9).getValue();
  var timeUnit = dataRange.getCell(1, 10).getValue();
  
  var userEmail = Session.getActiveUser().getEmail();
  if (mail && type && fromDate) {
    if (userEmail != mail) {
      Browser.msgBox("Bạn không có quyền gửi email")
    } else {
      // Get time
      var dates = [];
      var mmFromDate = moment(fromDate, "YYYY-MM-DD");
      if (mmFromDate.isValid() && !mmFromDate.isBefore(moment())) {
        var mmToDate = moment(toDate, "YYYY-MM-DD");
        if (mmToDate.isValid() && !mmFromDate.isAfter(mmToDate)) {
          dates = enumerateDaysBetweenDates(mmFromDate, mmToDate);
        } else if(!mmToDate.isValid()) {
          dates.push(mmFromDate.format("YYYY-MM-DD"));
        }
      }
      if (dates.length > 0 && additionDates) {
        var parts = additionDates.trim().split(/ *, */);
        for (var i = 0; i < parts.length; i++) {
          var additionDate = moment(parts[i], "YYYY-MM-DD");
          if (additionDate.isValid() && additionDate.isAfter(moment(dates[dates.length-1],"YYYY-MM-DD"))) {
            dates.push(additionDate.format("YYYY-MM-DD"));
          }
        }
      }
      dates.sort();
      var datesStr = [];
      for(var j = 0; j < dates.length; j++) {
        datesStr.push(moment(dates[j],"YYYY-MM-DD").format("MM/DD"));
      }
      var types = ["全休","自宅業務","午前休","午後休","遅刻","早退","外出"];
      var noNeedTimeTypes = ["全休","自宅業務","午前休","午後休"];
      var needTimeTypes = ["遅刻","早退","外出"];
      if (dates.length > 0 && types.indexOf(type) > -1) {
        var subject = "【勤怠 " + type + "】";
        subject += "【" + datesStr.join("と") + "】" + "【" + name + "】";
        var body = "";
        if (noNeedTimeTypes.indexOf(type) > -1) {
          body += "To:関係各位\nお疲れ様です。" + name + "です。\n表題の件ですが、" + reason + "の為、" + type + "を頂きたいと思います。\n以上、よろしくお願いします。";
        } else if (needTimeTypes.indexOf(type) > -1 && timePoint) {
          Logger.log(timePoint);
          var mmTimePoint = moment(timePoint);
          var hour = mmTimePoint.hour();
          var minute = mmTimePoint.minute();
          var timePointStr = hour.toString() + "時" + minute.toString() + "分";
          body += "To:関係各位\nお疲れ様です。" + name + "です。\n表題の件ですが、" + reason + "の為、" + timePointStr + "（JST）から";
          if (type == "外出") {
            body += timeCnt + timeUnit + "くらい外出させて頂きたいと思います。\n以上、よろしくお願いします。";
          } else if (type == "遅刻") {
            body += "出社させて頂きたいと思います。\n以上、よろしくお願いします。";
          } else {
            body += "早退させて頂きたいと思います。\n以上、よろしくお願いします。";
          }
        }
        if (body) {
          var confirmCnt = "-----\\nSubject: " + subject + "\\n-----\\nBody:\\n" + body + "\\n-----\\n";
          var confirm = Browser.msgBox("Do you want to send this mail?", confirmCnt, Browser.Buttons.YES_NO);
          if (confirm == "yes") {
            var toEmail = Browser.inputBox('Nhập địa chỉ email:');
            GmailApp.sendEmail(toEmail, subject, body, {'from': mail});
            var sentSheet = xnpSS.getSheetByName('sent');
            var targetRow = sentSheet.getLastRow()+1;
            var targetRange = sentSheet.getRange("A" + targetRow.toString() + ":J" + targetRow.toString());
            targetRange.setValues(dataRange.getValues());
            Browser.msgBox("Mail của bạn đã được gửi đi ^^");
          }
        }
      } else {
        Browser.msgBox("Xin hãy kiểm tra lại thông tin đã nhập!");
      }
    }
  }
  // Release the lock so that other processes can continue.
   lock.releaseLock();
}

var enumerateDaysBetweenDates = function(startDate, endDate) {
    var dates = [];
    var currDate = startDate;

    while(!currDate.isAfter(endDate)) {
      Logger.log(currDate.format("YYYY-MM-DD"));
      dates.push(currDate.format("YYYY-MM-DD"));
      currDate.add(1,"days");
    }

    return dates;
};

var addCalendarEvent = function(name, type, dates, timePoint, timeCnt, timeUnit) {
  var vnlabCal = CalendarApp.getCalendarById("runsystem.net_ks1mp6gdm9c73i3r9a18n66d7k@group.calendar.google.com");
  var noNeedTimeTypes = ["全休","自宅業務","午前休","午後休"];
  var needTimeTypes = ["遅刻","早退","外出"];
  var title = name + " " + type;
  if (noNeedTimeTypes.indexOf(type)) {
    for(var i = 0; i < dates.length; i++) {
      vnlabCal.createAllDayEvent(title, new Date(dates[i]));
    }
  }
  
  if (needTimeTypes.indexOf(type)) {
    var mmTimePoint = moment(timePoint);
    var hour = mmTimePoint.hour();
    var minute = mmTimePoint.minute();
    var startTime, endTime;
    for(var i = 0; i < dates.length; i++) {
      if (type == "外出") {
        startTime = new Date(dates[i] + " " + timePoint);
        endTime = moment(startTime).add({hours:hour, minutes:minute}).toDate();
      } else if (type == "遅刻") {
        startTime = new Date(dates[i] + " 08:00");
        endTime = new Date(dates[i] + " " + timePoint);
      } else { //早退
        startTime = new Date(dates[i] + " " + timePoint);
        endTime = new Date(dates[i] + " 17:30");
      }
      vnlabCal.createEvent(title, startTime, endTime);
    }
  }
}
eval(UrlFetchApp.fetch('https://momentjs.com/downloads/moment.min.js').getContentText());

function setMail(iName) {
  var xnpSS = SpreadsheetApp.getActiveSpreadsheet();
  var memberSheet = xnpSS.getSheetByName('members');
  var nameRange = memberSheet.getRange("A1:A100");
  var mailRange = memberSheet.getRange("B1:B100");
  var length = nameRange.getNumRows();
  var i;
  for(i = 1; i <= length; i++) {
    var name = nameRange.getCell(i,1).getValue();
    if (name == iName) break;
  }
  if (i <= length) return mailRange.getCell(i,1).getValue();
  else return null;
}

//function onEdit(e) {
//  var ss = SpreadsheetApp.getActiveSpreadsheet();
//  var s = ss.getActiveSheet();
//  if (s.getName() == "Send_Mail") {
//    var a1Notation = e.range.getA1Notation();
//    if(a1Notation == "C2:C2") {
//      var val = e.range.getValue();
//      var noNeedTimeTypes = ["全休","自宅業務","午前休","午後休"];
//      var needTimeTypes = ["遅刻","早退","外出"];
//      var timeRange = s.getRange("H2:H2");
//      if (noNeedTimeTypes.indexOf(val) > -1) {
//        timeRange.clearContent();
//        var rule = SpreadsheetApp.newDataValidation().requireValueInList(['']).build();
//        timeRange.setDataValidation(rule);
//      } else{
//        var rule = SpreadsheetApp.newDataValidation().requireValueInList([0.5, 1, 1.5, 2, 2.5, 3, 3.5]).build();
//        timeRange.setDataValidation(rule);
//      }
//    }
//  }
//}

function sendMail() {
  var lock = LockService.getDocumentLock();
  lock.waitLock(10000); // in milliseconds
  var xnpSS = SpreadsheetApp.openById('1esahVaCbLaAoEAwnG7XYKYVUO_rWM-Q_0Rn63LfRFWM');
  var sendMailSheet = xnpSS.getSheetByName('Send_Mail');
  var dataRange = sendMailSheet.getRange('A2:J2');
  var name = dataRange.getCell(1, 1).getValue();
  var mail = dataRange.getCell(1, 2).getValue();
  var type = dataRange.getCell(1, 3).getValue();
  var fromDate = dataRange.getCell(1, 4).getValue();
  var toDate = dataRange.getCell(1, 5).getValue();
  var additionDates = dataRange.getCell(1, 6).getValue();
  var reason = dataRange.getCell(1, 7).getValue();
  var timePoint = dataRange.getCell(1, 8).getValue();
  var timeCnt = dataRange.getCell(1, 9).getValue();
  var timeUnit = dataRange.getCell(1, 10).getValue();
  
  var userEmail = Session.getActiveUser().getEmail();
  if (mail && type && fromDate) {
    if (userEmail != mail) {
      Browser.msgBox("Bạn không có quyền gửi email")
    } else {
      // Get time
      var dates = [];
      var mmFromDate = moment(fromDate, "YYYY-MM-DD");
      if (mmFromDate.isValid() && !mmFromDate.isBefore(moment())) {
        var mmToDate = moment(toDate, "YYYY-MM-DD");
        if (mmToDate.isValid() && !mmFromDate.isAfter(mmToDate)) {
          dates = enumerateDaysBetweenDates(mmFromDate, mmToDate);
        } else if(!mmToDate.isValid()) {
          dates.push(mmFromDate.format("YYYY-MM-DD"));
        }
      }
      if (dates.length > 0 && additionDates) {
        var parts = additionDates.trim().split(/ *, */);
        for (var i = 0; i < parts.length; i++) {
          var additionDate = moment(parts[i], "YYYY-MM-DD");
          if (additionDate.isValid() && additionDate.isAfter(moment(dates[dates.length-1],"YYYY-MM-DD"))) {
            dates.push(additionDate.format("YYYY-MM-DD"));
          }
        }
      }
      dates.sort();
      var datesStr = [];
      for(var j = 0; j < dates.length; j++) {
        datesStr.push(moment(dates[j],"YYYY-MM-DD").format("MM/DD"));
      }
      var types = ["全休","自宅業務","午前休","午後休","遅刻","早退","外出"];
      var noNeedTimeTypes = ["全休","自宅業務","午前休","午後休"];
      var needTimeTypes = ["遅刻","早退","外出"];
      if (dates.length > 0 && types.indexOf(type) > -1) {
        var subject = "【勤怠 " + type + "】";
        subject += "【" + datesStr.join("と") + "】" + "【" + name + "】";
        var body = "";
        if (noNeedTimeTypes.indexOf(type) > -1) {
          body += "To:関係各位\nお疲れ様です。" + name + "です。\n表題の件ですが、" + reason + "の為、" + type + "を頂きたいと思います。\n以上、よろしくお願いします。";
        } else if (needTimeTypes.indexOf(type) > -1 && timePoint) {
          Logger.log(timePoint);
          var mmTimePoint = moment(timePoint);
          var hour = mmTimePoint.hour();
          var minute = mmTimePoint.minute();
          var timePointStr = hour.toString() + "時" + minute.toString() + "分";
          body += "To:関係各位\nお疲れ様です。" + name + "です。\n表題の件ですが、" + reason + "の為、" + timePointStr + "（JST）から";
          if (type == "外出") {
            body += timeCnt + timeUnit + "くらい外出させて頂きたいと思います。\n以上、よろしくお願いします。";
          } else if (type == "遅刻") {
            body += "出社させて頂きたいと思います。\n以上、よろしくお願いします。";
          } else {
            body += "早退させて頂きたいと思います。\n以上、よろしくお願いします。";
          }
        }
        if (body) {
          var confirmCnt = "-----\\nSubject: " + subject + "\\n-----\\nBody:\\n" + body + "\\n-----\\n";
          var confirm = Browser.msgBox("Do you want to send this mail?", confirmCnt, Browser.Buttons.YES_NO);
          if (confirm == "yes") {
            var toEmail = Browser.inputBox('Nhập địa chỉ email:');
            GmailApp.sendEmail(toEmail, subject, body, {'from': mail});
            var sentSheet = xnpSS.getSheetByName('sent');
            var targetRow = sentSheet.getLastRow()+1;
            var targetRange = sentSheet.getRange("A" + targetRow.toString() + ":J" + targetRow.toString());
            targetRange.setValues(dataRange.getValues());
            Browser.msgBox("Mail của bạn đã được gửi đi ^^");
          }
        }
      } else {
        Browser.msgBox("Xin hãy kiểm tra lại thông tin đã nhập!");
      }
    }
  }
  // Release the lock so that other processes can continue.
   lock.releaseLock();
}

var enumerateDaysBetweenDates = function(startDate, endDate) {
    var dates = [];
    var currDate = startDate;

    while(!currDate.isAfter(endDate)) {
      Logger.log(currDate.format("YYYY-MM-DD"));
      dates.push(currDate.format("YYYY-MM-DD"));
      currDate.add(1,"days");
    }

    return dates;
};

var addCalendarEvent = function(name, type, dates, timePoint, timeCnt, timeUnit) {
  var vnlabCal = CalendarApp.getCalendarById("runsystem.net_ks1mp6gdm9c73i3r9a18n66d7k@group.calendar.google.com");
  var noNeedTimeTypes = ["全休","自宅業務","午前休","午後休"];
  var needTimeTypes = ["遅刻","早退","外出"];
  var title = name + " " + type;
  if (noNeedTimeTypes.indexOf(type)) {
    for(var i = 0; i < dates.length; i++) {
      vnlabCal.createAllDayEvent(title, new Date(dates[i]));
    }
  }
  
  if (needTimeTypes.indexOf(type)) {
    var mmTimePoint = moment(timePoint);
    var hour = mmTimePoint.hour();
    var minute = mmTimePoint.minute();
    var startTime, endTime;
    for(var i = 0; i < dates.length; i++) {
      if (type == "外出") {
        startTime = new Date(dates[i] + " " + timePoint);
        endTime = moment(startTime).add({hours:hour, minutes:minute}).toDate();
      } else if (type == "遅刻") {
        startTime = new Date(dates[i] + " 08:00");
        endTime = new Date(dates[i] + " " + timePoint);
      } else { //早退
        startTime = new Date(dates[i] + " " + timePoint);
        endTime = new Date(dates[i] + " 17:30");
      }
      vnlabCal.createEvent(title, startTime, endTime);
    }
  }
}
eval(UrlFetchApp.fetch('https://momentjs.com/downloads/moment.min.js').getContentText());

function setMail(iName) {
  var xnpSS = SpreadsheetApp.getActiveSpreadsheet();
  var memberSheet = xnpSS.getSheetByName('members');
  var nameRange = memberSheet.getRange("A1:A100");
  var mailRange = memberSheet.getRange("B1:B100");
  var length = nameRange.getNumRows();
  var i;
  for(i = 1; i <= length; i++) {
    var name = nameRange.getCell(i,1).getValue();
    if (name == iName) break;
  }
  if (i <= length) return mailRange.getCell(i,1).getValue();
  else return null;
}

//function onEdit(e) {
//  var ss = SpreadsheetApp.getActiveSpreadsheet();
//  var s = ss.getActiveSheet();
//  if (s.getName() == "Send_Mail") {
//    var a1Notation = e.range.getA1Notation();
//    if(a1Notation == "C2:C2") {
//      var val = e.range.getValue();
//      var noNeedTimeTypes = ["全休","自宅業務","午前休","午後休"];
//      var needTimeTypes = ["遅刻","早退","外出"];
//      var timeRange = s.getRange("H2:H2");
//      if (noNeedTimeTypes.indexOf(val) > -1) {
//        timeRange.clearContent();
//        var rule = SpreadsheetApp.newDataValidation().requireValueInList(['']).build();
//        timeRange.setDataValidation(rule);
//      } else{
//        var rule = SpreadsheetApp.newDataValidation().requireValueInList([0.5, 1, 1.5, 2, 2.5, 3, 3.5]).build();
//        timeRange.setDataValidation(rule);
//      }
//    }
//  }
//}

function sendMail() {
  var lock = LockService.getDocumentLock();
  lock.waitLock(10000); // in milliseconds
  var xnpSS = SpreadsheetApp.openById('1esahVaCbLaAoEAwnG7XYKYVUO_rWM-Q_0Rn63LfRFWM');
  var sendMailSheet = xnpSS.getSheetByName('Send_Mail');
  var dataRange = sendMailSheet.getRange('A2:J2');
  var name = dataRange.getCell(1, 1).getValue();
  var mail = dataRange.getCell(1, 2).getValue();
  var type = dataRange.getCell(1, 3).getValue();
  var fromDate = dataRange.getCell(1, 4).getValue();
  var toDate = dataRange.getCell(1, 5).getValue();
  var additionDates = dataRange.getCell(1, 6).getValue();
  var reason = dataRange.getCell(1, 7).getValue();
  var timePoint = dataRange.getCell(1, 8).getValue();
  var timeCnt = dataRange.getCell(1, 9).getValue();
  var timeUnit = dataRange.getCell(1, 10).getValue();
  
  var userEmail = Session.getActiveUser().getEmail();
  if (mail && type && fromDate) {
    if (userEmail != mail) {
      Browser.msgBox("Bạn không có quyền gửi email")
    } else {
      // Get time
      var dates = [];
      var mmFromDate = moment(fromDate, "YYYY-MM-DD");
      if (mmFromDate.isValid() && !mmFromDate.isBefore(moment())) {
        var mmToDate = moment(toDate, "YYYY-MM-DD");
        if (mmToDate.isValid() && !mmFromDate.isAfter(mmToDate)) {
          dates = enumerateDaysBetweenDates(mmFromDate, mmToDate);
        } else if(!mmToDate.isValid()) {
          dates.push(mmFromDate.format("YYYY-MM-DD"));
        }
      }
      if (dates.length > 0 && additionDates) {
        var parts = additionDates.trim().split(/ *, */);
        for (var i = 0; i < parts.length; i++) {
          var additionDate = moment(parts[i], "YYYY-MM-DD");
          if (additionDate.isValid() && additionDate.isAfter(moment(dates[dates.length-1],"YYYY-MM-DD"))) {
            dates.push(additionDate.format("YYYY-MM-DD"));
          }
        }
      }
      dates.sort();
      var datesStr = [];
      for(var j = 0; j < dates.length; j++) {
        datesStr.push(moment(dates[j],"YYYY-MM-DD").format("MM/DD"));
      }
      var types = ["全休","自宅業務","午前休","午後休","遅刻","早退","外出"];
      var noNeedTimeTypes = ["全休","自宅業務","午前休","午後休"];
      var needTimeTypes = ["遅刻","早退","外出"];
      if (dates.length > 0 && types.indexOf(type) > -1) {
        var subject = "【勤怠 " + type + "】";
        subject += "【" + datesStr.join("と") + "】" + "【" + name + "】";
        var body = "";
        if (noNeedTimeTypes.indexOf(type) > -1) {
          body += "To:関係各位\nお疲れ様です。" + name + "です。\n表題の件ですが、" + reason + "の為、" + type + "を頂きたいと思います。\n以上、よろしくお願いします。";
        } else if (needTimeTypes.indexOf(type) > -1 && timePoint) {
          Logger.log(timePoint);
          var mmTimePoint = moment(timePoint);
          var hour = mmTimePoint.hour();
          var minute = mmTimePoint.minute();
          var timePointStr = hour.toString() + "時" + minute.toString() + "分";
          body += "To:関係各位\nお疲れ様です。" + name + "です。\n表題の件ですが、" + reason + "の為、" + timePointStr + "（JST）から";
          if (type == "外出") {
            body += timeCnt + timeUnit + "くらい外出させて頂きたいと思います。\n以上、よろしくお願いします。";
          } else if (type == "遅刻") {
            body += "出社させて頂きたいと思います。\n以上、よろしくお願いします。";
          } else {
            body += "早退させて頂きたいと思います。\n以上、よろしくお願いします。";
          }
        }
        if (body) {
          var confirmCnt = "-----\\nSubject: " + subject + "\\n-----\\nBody:\\n" + body + "\\n-----\\n";
          var confirm = Browser.msgBox("Do you want to send this mail?", confirmCnt, Browser.Buttons.YES_NO);
          if (confirm == "yes") {
            var toEmail = Browser.inputBox('Nhập địa chỉ email:');
            GmailApp.sendEmail(toEmail, subject, body, {'from': mail});
            var sentSheet = xnpSS.getSheetByName('sent');
            var targetRow = sentSheet.getLastRow()+1;
            var targetRange = sentSheet.getRange("A" + targetRow.toString() + ":J" + targetRow.toString());
            targetRange.setValues(dataRange.getValues());
            Browser.msgBox("Mail của bạn đã được gửi đi ^^");
          }
        }
      } else {
        Browser.msgBox("Xin hãy kiểm tra lại thông tin đã nhập!");
      }
    }
  }
  // Release the lock so that other processes can continue.
   lock.releaseLock();
}

var enumerateDaysBetweenDates = function(startDate, endDate) {
    var dates = [];
    var currDate = startDate;

    while(!currDate.isAfter(endDate)) {
      Logger.log(currDate.format("YYYY-MM-DD"));
      dates.push(currDate.format("YYYY-MM-DD"));
      currDate.add(1,"days");
    }

    return dates;
};

var addCalendarEvent = function(name, type, dates, timePoint, timeCnt, timeUnit) {
  var vnlabCal = CalendarApp.getCalendarById("runsystem.net_ks1mp6gdm9c73i3r9a18n66d7k@group.calendar.google.com");
  var noNeedTimeTypes = ["全休","自宅業務","午前休","午後休"];
  var needTimeTypes = ["遅刻","早退","外出"];
  var title = name + " " + type;
  if (noNeedTimeTypes.indexOf(type)) {
    for(var i = 0; i < dates.length; i++) {
      vnlabCal.createAllDayEvent(title, new Date(dates[i]));
    }
  }
  
  if (needTimeTypes.indexOf(type)) {
    var mmTimePoint = moment(timePoint);
    var hour = mmTimePoint.hour();
    var minute = mmTimePoint.minute();
    var startTime, endTime;
    for(var i = 0; i < dates.length; i++) {
      if (type == "外出") {
        startTime = new Date(dates[i] + " " + timePoint);
        endTime = moment(startTime).add({hours:hour, minutes:minute}).toDate();
      } else if (type == "遅刻") {
        startTime = new Date(dates[i] + " 08:00");
        endTime = new Date(dates[i] + " " + timePoint);
      } else { //早退
        startTime = new Date(dates[i] + " " + timePoint);
        endTime = new Date(dates[i] + " 17:30");
      }
      vnlabCal.createEvent(title, startTime, endTime);
    }
  }
}
eval(UrlFetchApp.fetch('https://momentjs.com/downloads/moment.min.js').getContentText());

function setMail(iName) {
  var xnpSS = SpreadsheetApp.getActiveSpreadsheet();
  var memberSheet = xnpSS.getSheetByName('members');
  var nameRange = memberSheet.getRange("A1:A100");
  var mailRange = memberSheet.getRange("B1:B100");
  var length = nameRange.getNumRows();
  var i;
  for(i = 1; i <= length; i++) {
    var name = nameRange.getCell(i,1).getValue();
    if (name == iName) break;
  }
  if (i <= length) return mailRange.getCell(i,1).getValue();
  else return null;
}

//function onEdit(e) {
//  var ss = SpreadsheetApp.getActiveSpreadsheet();
//  var s = ss.getActiveSheet();
//  if (s.getName() == "Send_Mail") {
//    var a1Notation = e.range.getA1Notation();
//    if(a1Notation == "C2:C2") {
//      var val = e.range.getValue();
//      var noNeedTimeTypes = ["全休","自宅業務","午前休","午後休"];
//      var needTimeTypes = ["遅刻","早退","外出"];
//      var timeRange = s.getRange("H2:H2");
//      if (noNeedTimeTypes.indexOf(val) > -1) {
//        timeRange.clearContent();
//        var rule = SpreadsheetApp.newDataValidation().requireValueInList(['']).build();
//        timeRange.setDataValidation(rule);
//      } else{
//        var rule = SpreadsheetApp.newDataValidation().requireValueInList([0.5, 1, 1.5, 2, 2.5, 3, 3.5]).build();
//        timeRange.setDataValidation(rule);
//      }
//    }
//  }
//}

function sendMail() {
  var lock = LockService.getDocumentLock();
  lock.waitLock(10000); // in milliseconds
  var xnpSS = SpreadsheetApp.openById('1esahVaCbLaAoEAwnG7XYKYVUO_rWM-Q_0Rn63LfRFWM');
  var sendMailSheet = xnpSS.getSheetByName('Send_Mail');
  var dataRange = sendMailSheet.getRange('A2:J2');
  var name = dataRange.getCell(1, 1).getValue();
  var mail = dataRange.getCell(1, 2).getValue();
  var type = dataRange.getCell(1, 3).getValue();
  var fromDate = dataRange.getCell(1, 4).getValue();
  var toDate = dataRange.getCell(1, 5).getValue();
  var additionDates = dataRange.getCell(1, 6).getValue();
  var reason = dataRange.getCell(1, 7).getValue();
  var timePoint = dataRange.getCell(1, 8).getValue();
  var timeCnt = dataRange.getCell(1, 9).getValue();
  var timeUnit = dataRange.getCell(1, 10).getValue();
  
  var userEmail = Session.getActiveUser().getEmail();
  if (mail && type && fromDate) {
    if (userEmail != mail) {
      Browser.msgBox("Bạn không có quyền gửi email")
    } else {
      // Get time
      var dates = [];
      var mmFromDate = moment(fromDate, "YYYY-MM-DD");
      if (mmFromDate.isValid() && !mmFromDate.isBefore(moment())) {
        var mmToDate = moment(toDate, "YYYY-MM-DD");
        if (mmToDate.isValid() && !mmFromDate.isAfter(mmToDate)) {
          dates = enumerateDaysBetweenDates(mmFromDate, mmToDate);
        } else if(!mmToDate.isValid()) {
          dates.push(mmFromDate.format("YYYY-MM-DD"));
        }
      }
      if (dates.length > 0 && additionDates) {
        var parts = additionDates.trim().split(/ *, */);
        for (var i = 0; i < parts.length; i++) {
          var additionDate = moment(parts[i], "YYYY-MM-DD");
          if (additionDate.isValid() && additionDate.isAfter(moment(dates[dates.length-1],"YYYY-MM-DD"))) {
            dates.push(additionDate.format("YYYY-MM-DD"));
          }
        }
      }
      dates.sort();
      var datesStr = [];
      for(var j = 0; j < dates.length; j++) {
        datesStr.push(moment(dates[j],"YYYY-MM-DD").format("MM/DD"));
      }
      var types = ["全休","自宅業務","午前休","午後休","遅刻","早退","外出"];
      var noNeedTimeTypes = ["全休","自宅業務","午前休","午後休"];
      var needTimeTypes = ["遅刻","早退","外出"];
      if (dates.length > 0 && types.indexOf(type) > -1) {
        var subject = "【勤怠 " + type + "】";
        subject += "【" + datesStr.join("と") + "】" + "【" + name + "】";
        var body = "";
        if (noNeedTimeTypes.indexOf(type) > -1) {
          body += "To:関係各位\nお疲れ様です。" + name + "です。\n表題の件ですが、" + reason + "の為、" + type + "を頂きたいと思います。\n以上、よろしくお願いします。";
        } else if (needTimeTypes.indexOf(type) > -1 && timePoint) {
          Logger.log(timePoint);
          var mmTimePoint = moment(timePoint);
          var hour = mmTimePoint.hour();
          var minute = mmTimePoint.minute();
          var timePointStr = hour.toString() + "時" + minute.toString() + "分";
          body += "To:関係各位\nお疲れ様です。" + name + "です。\n表題の件ですが、" + reason + "の為、" + timePointStr + "（JST）から";
          if (type == "外出") {
            body += timeCnt + timeUnit + "くらい外出させて頂きたいと思います。\n以上、よろしくお願いします。";
          } else if (type == "遅刻") {
            body += "出社させて頂きたいと思います。\n以上、よろしくお願いします。";
          } else {
            body += "早退させて頂きたいと思います。\n以上、よろしくお願いします。";
          }
        }
        if (body) {
          var confirmCnt = "-----\\nSubject: " + subject + "\\n-----\\nBody:\\n" + body + "\\n-----\\n";
          var confirm = Browser.msgBox("Do you want to send this mail?", confirmCnt, Browser.Buttons.YES_NO);
          if (confirm == "yes") {
            var toEmail = Browser.inputBox('Nhập địa chỉ email:');
            GmailApp.sendEmail(toEmail, subject, body, {'from': mail});
            var sentSheet = xnpSS.getSheetByName('sent');
            var targetRow = sentSheet.getLastRow()+1;
            var targetRange = sentSheet.getRange("A" + targetRow.toString() + ":J" + targetRow.toString());
            targetRange.setValues(dataRange.getValues());
            Browser.msgBox("Mail của bạn đã được gửi đi ^^");
          }
        }
      } else {
        Browser.msgBox("Xin hãy kiểm tra lại thông tin đã nhập!");
      }
    }
  }
  // Release the lock so that other processes can continue.
   lock.releaseLock();
}

var enumerateDaysBetweenDates = function(startDate, endDate) {
    var dates = [];
    var currDate = startDate;

    while(!currDate.isAfter(endDate)) {
      Logger.log(currDate.format("YYYY-MM-DD"));
      dates.push(currDate.format("YYYY-MM-DD"));
      currDate.add(1,"days");
    }

    return dates;
};

var addCalendarEvent = function(name, type, dates, timePoint, timeCnt, timeUnit) {
  var vnlabCal = CalendarApp.getCalendarById("runsystem.net_ks1mp6gdm9c73i3r9a18n66d7k@group.calendar.google.com");
  var noNeedTimeTypes = ["全休","自宅業務","午前休","午後休"];
  var needTimeTypes = ["遅刻","早退","外出"];
  var title = name + " " + type;
  if (noNeedTimeTypes.indexOf(type)) {
    for(var i = 0; i < dates.length; i++) {
      vnlabCal.createAllDayEvent(title, new Date(dates[i]));
    }
  }
  
  if (needTimeTypes.indexOf(type)) {
    var mmTimePoint = moment(timePoint);
    var hour = mmTimePoint.hour();
    var minute = mmTimePoint.minute();
    var startTime, endTime;
    for(var i = 0; i < dates.length; i++) {
      if (type == "外出") {
        startTime = new Date(dates[i] + " " + timePoint);
        endTime = moment(startTime).add({hours:hour, minutes:minute}).toDate();
      } else if (type == "遅刻") {
        startTime = new Date(dates[i] + " 08:00");
        endTime = new Date(dates[i] + " " + timePoint);
      } else { //早退
        startTime = new Date(dates[i] + " " + timePoint);
        endTime = new Date(dates[i] + " 17:30");
      }
      vnlabCal.createEvent(title, startTime, endTime);
    }
  }
}
eval(UrlFetchApp.fetch('https://momentjs.com/downloads/moment.min.js').getContentText());

function setMail(iName) {
  var xnpSS = SpreadsheetApp.getActiveSpreadsheet();
  var memberSheet = xnpSS.getSheetByName('members');
  var nameRange = memberSheet.getRange("A1:A100");
  var mailRange = memberSheet.getRange("B1:B100");
  var length = nameRange.getNumRows();
  var i;
  for(i = 1; i <= length; i++) {
    var name = nameRange.getCell(i,1).getValue();
    if (name == iName) break;
  }
  if (i <= length) return mailRange.getCell(i,1).getValue();
  else return null;
}

//function onEdit(e) {
//  var ss = SpreadsheetApp.getActiveSpreadsheet();
//  var s = ss.getActiveSheet();
//  if (s.getName() == "Send_Mail") {
//    var a1Notation = e.range.getA1Notation();
//    if(a1Notation == "C2:C2") {
//      var val = e.range.getValue();
//      var noNeedTimeTypes = ["全休","自宅業務","午前休","午後休"];
//      var needTimeTypes = ["遅刻","早退","外出"];
//      var timeRange = s.getRange("H2:H2");
//      if (noNeedTimeTypes.indexOf(val) > -1) {
//        timeRange.clearContent();
//        var rule = SpreadsheetApp.newDataValidation().requireValueInList(['']).build();
//        timeRange.setDataValidation(rule);
//      } else{
//        var rule = SpreadsheetApp.newDataValidation().requireValueInList([0.5, 1, 1.5, 2, 2.5, 3, 3.5]).build();
//        timeRange.setDataValidation(rule);
//      }
//    }
//  }
//}

function sendMail() {
  var lock = LockService.getDocumentLock();
  lock.waitLock(10000); // in milliseconds
  var xnpSS = SpreadsheetApp.openById('1esahVaCbLaAoEAwnG7XYKYVUO_rWM-Q_0Rn63LfRFWM');
  var sendMailSheet = xnpSS.getSheetByName('Send_Mail');
  var dataRange = sendMailSheet.getRange('A2:J2');
  var name = dataRange.getCell(1, 1).getValue();
  var mail = dataRange.getCell(1, 2).getValue();
  var type = dataRange.getCell(1, 3).getValue();
  var fromDate = dataRange.getCell(1, 4).getValue();
  var toDate = dataRange.getCell(1, 5).getValue();
  var additionDates = dataRange.getCell(1, 6).getValue();
  var reason = dataRange.getCell(1, 7).getValue();
  var timePoint = dataRange.getCell(1, 8).getValue();
  var timeCnt = dataRange.getCell(1, 9).getValue();
  var timeUnit = dataRange.getCell(1, 10).getValue();
  
  var userEmail = Session.getActiveUser().getEmail();
  if (mail && type && fromDate) {
    if (userEmail != mail) {
      Browser.msgBox("Bạn không có quyền gửi email")
    } else {
      // Get time
      var dates = [];
      var mmFromDate = moment(fromDate, "YYYY-MM-DD");
      if (mmFromDate.isValid() && !mmFromDate.isBefore(moment())) {
        var mmToDate = moment(toDate, "YYYY-MM-DD");
        if (mmToDate.isValid() && !mmFromDate.isAfter(mmToDate)) {
          dates = enumerateDaysBetweenDates(mmFromDate, mmToDate);
        } else if(!mmToDate.isValid()) {
          dates.push(mmFromDate.format("YYYY-MM-DD"));
        }
      }
      if (dates.length > 0 && additionDates) {
        var parts = additionDates.trim().split(/ *, */);
        for (var i = 0; i < parts.length; i++) {
          var additionDate = moment(parts[i], "YYYY-MM-DD");
          if (additionDate.isValid() && additionDate.isAfter(moment(dates[dates.length-1],"YYYY-MM-DD"))) {
            dates.push(additionDate.format("YYYY-MM-DD"));
          }
        }
      }
      dates.sort();
      var datesStr = [];
      for(var j = 0; j < dates.length; j++) {
        datesStr.push(moment(dates[j],"YYYY-MM-DD").format("MM/DD"));
      }
      var types = ["全休","自宅業務","午前休","午後休","遅刻","早退","外出"];
      var noNeedTimeTypes = ["全休","自宅業務","午前休","午後休"];
      var needTimeTypes = ["遅刻","早退","外出"];
      if (dates.length > 0 && types.indexOf(type) > -1) {
        var subject = "【勤怠 " + type + "】";
        subject += "【" + datesStr.join("と") + "】" + "【" + name + "】";
        var body = "";
        if (noNeedTimeTypes.indexOf(type) > -1) {
          body += "To:関係各位\nお疲れ様です。" + name + "です。\n表題の件ですが、" + reason + "の為、" + type + "を頂きたいと思います。\n以上、よろしくお願いします。";
        } else if (needTimeTypes.indexOf(type) > -1 && timePoint) {
          Logger.log(timePoint);
          var mmTimePoint = moment(timePoint);
          var hour = mmTimePoint.hour();
          var minute = mmTimePoint.minute();
          var timePointStr = hour.toString() + "時" + minute.toString() + "分";
          body += "To:関係各位\nお疲れ様です。" + name + "です。\n表題の件ですが、" + reason + "の為、" + timePointStr + "（JST）から";
          if (type == "外出") {
            body += timeCnt + timeUnit + "くらい外出させて頂きたいと思います。\n以上、よろしくお願いします。";
          } else if (type == "遅刻") {
            body += "出社させて頂きたいと思います。\n以上、よろしくお願いします。";
          } else {
            body += "早退させて頂きたいと思います。\n以上、よろしくお願いします。";
          }
        }
        if (body) {
          var confirmCnt = "-----\\nSubject: " + subject + "\\n-----\\nBody:\\n" + body + "\\n-----\\n";
          var confirm = Browser.msgBox("Do you want to send this mail?", confirmCnt, Browser.Buttons.YES_NO);
          if (confirm == "yes") {
            var toEmail = Browser.inputBox('Nhập địa chỉ email:');
            GmailApp.sendEmail(toEmail, subject, body, {'from': mail});
            var sentSheet = xnpSS.getSheetByName('sent');
            var targetRow = sentSheet.getLastRow()+1;
            var targetRange = sentSheet.getRange("A" + targetRow.toString() + ":J" + targetRow.toString());
            targetRange.setValues(dataRange.getValues());
            Browser.msgBox("Mail của bạn đã được gửi đi ^^");
          }
        }
      } else {
        Browser.msgBox("Xin hãy kiểm tra lại thông tin đã nhập!");
      }
    }
  }
  // Release the lock so that other processes can continue.
   lock.releaseLock();
}

var enumerateDaysBetweenDates = function(startDate, endDate) {
    var dates = [];
    var currDate = startDate;

    while(!currDate.isAfter(endDate)) {
      Logger.log(currDate.format("YYYY-MM-DD"));
      dates.push(currDate.format("YYYY-MM-DD"));
      currDate.add(1,"days");
    }

    return dates;
};

var addCalendarEvent = function(name, type, dates, timePoint, timeCnt, timeUnit) {
  var vnlabCal = CalendarApp.getCalendarById("runsystem.net_ks1mp6gdm9c73i3r9a18n66d7k@group.calendar.google.com");
  var noNeedTimeTypes = ["全休","自宅業務","午前休","午後休"];
  var needTimeTypes = ["遅刻","早退","外出"];
  var title = name + " " + type;
  if (noNeedTimeTypes.indexOf(type)) {
    for(var i = 0; i < dates.length; i++) {
      vnlabCal.createAllDayEvent(title, new Date(dates[i]));
    }
  }
  
  if (needTimeTypes.indexOf(type)) {
    var mmTimePoint = moment(timePoint);
    var hour = mmTimePoint.hour();
    var minute = mmTimePoint.minute();
    var startTime, endTime;
    for(var i = 0; i < dates.length; i++) {
      if (type == "外出") {
        startTime = new Date(dates[i] + " " + timePoint);
        endTime = moment(startTime).add({hours:hour, minutes:minute}).toDate();
      } else if (type == "遅刻") {
        startTime = new Date(dates[i] + " 08:00");
        endTime = new Date(dates[i] + " " + timePoint);
      } else { //早退
        startTime = new Date(dates[i] + " " + timePoint);
        endTime = new Date(dates[i] + " 17:30");
      }
      vnlabCal.createEvent(title, startTime, endTime);
    }
  }
}
eval(UrlFetchApp.fetch('https://momentjs.com/downloads/moment.min.js').getContentText());

function setMail(iName) {
  var xnpSS = SpreadsheetApp.getActiveSpreadsheet();
  var memberSheet = xnpSS.getSheetByName('members');
  var nameRange = memberSheet.getRange("A1:A100");
  var mailRange = memberSheet.getRange("B1:B100");
  var length = nameRange.getNumRows();
  var i;
  for(i = 1; i <= length; i++) {
    var name = nameRange.getCell(i,1).getValue();
    if (name == iName) break;
  }
  if (i <= length) return mailRange.getCell(i,1).getValue();
  else return null;
}

//function onEdit(e) {
//  var ss = SpreadsheetApp.getActiveSpreadsheet();
//  var s = ss.getActiveSheet();
//  if (s.getName() == "Send_Mail") {
//    var a1Notation = e.range.getA1Notation();
//    if(a1Notation == "C2:C2") {
//      var val = e.range.getValue();
//      var noNeedTimeTypes = ["全休","自宅業務","午前休","午後休"];
//      var needTimeTypes = ["遅刻","早退","外出"];
//      var timeRange = s.getRange("H2:H2");
//      if (noNeedTimeTypes.indexOf(val) > -1) {
//        timeRange.clearContent();
//        var rule = SpreadsheetApp.newDataValidation().requireValueInList(['']).build();
//        timeRange.setDataValidation(rule);
//      } else{
//        var rule = SpreadsheetApp.newDataValidation().requireValueInList([0.5, 1, 1.5, 2, 2.5, 3, 3.5]).build();
//        timeRange.setDataValidation(rule);
//      }
//    }
//  }
//}

function sendMail() {
  var lock = LockService.getDocumentLock();
  lock.waitLock(10000); // in milliseconds
  var xnpSS = SpreadsheetApp.openById('1esahVaCbLaAoEAwnG7XYKYVUO_rWM-Q_0Rn63LfRFWM');
  var sendMailSheet = xnpSS.getSheetByName('Send_Mail');
  var dataRange = sendMailSheet.getRange('A2:J2');
  var name = dataRange.getCell(1, 1).getValue();
  var mail = dataRange.getCell(1, 2).getValue();
  var type = dataRange.getCell(1, 3).getValue();
  var fromDate = dataRange.getCell(1, 4).getValue();
  var toDate = dataRange.getCell(1, 5).getValue();
  var additionDates = dataRange.getCell(1, 6).getValue();
  var reason = dataRange.getCell(1, 7).getValue();
  var timePoint = dataRange.getCell(1, 8).getValue();
  var timeCnt = dataRange.getCell(1, 9).getValue();
  var timeUnit = dataRange.getCell(1, 10).getValue();
  
  var userEmail = Session.getActiveUser().getEmail();
  if (mail && type && fromDate) {
    if (userEmail != mail) {
      Browser.msgBox("Bạn không có quyền gửi email")
    } else {
      // Get time
      var dates = [];
      var mmFromDate = moment(fromDate, "YYYY-MM-DD");
      if (mmFromDate.isValid() && !mmFromDate.isBefore(moment())) {
        var mmToDate = moment(toDate, "YYYY-MM-DD");
        if (mmToDate.isValid() && !mmFromDate.isAfter(mmToDate)) {
          dates = enumerateDaysBetweenDates(mmFromDate, mmToDate);
        } else if(!mmToDate.isValid()) {
          dates.push(mmFromDate.format("YYYY-MM-DD"));
        }
      }
      if (dates.length > 0 && additionDates) {
        var parts = additionDates.trim().split(/ *, */);
        for (var i = 0; i < parts.length; i++) {
          var additionDate = moment(parts[i], "YYYY-MM-DD");
          if (additionDate.isValid() && additionDate.isAfter(moment(dates[dates.length-1],"YYYY-MM-DD"))) {
            dates.push(additionDate.format("YYYY-MM-DD"));
          }
        }
      }
      dates.sort();
      var datesStr = [];
      for(var j = 0; j < dates.length; j++) {
        datesStr.push(moment(dates[j],"YYYY-MM-DD").format("MM/DD"));
      }
      var types = ["全休","自宅業務","午前休","午後休","遅刻","早退","外出"];
      var noNeedTimeTypes = ["全休","自宅業務","午前休","午後休"];
      var needTimeTypes = ["遅刻","早退","外出"];
      if (dates.length > 0 && types.indexOf(type) > -1) {
        var subject = "【勤怠 " + type + "】";
        subject += "【" + datesStr.join("と") + "】" + "【" + name + "】";
        var body = "";
        if (noNeedTimeTypes.indexOf(type) > -1) {
          body += "To:関係各位\nお疲れ様です。" + name + "です。\n表題の件ですが、" + reason + "の為、" + type + "を頂きたいと思います。\n以上、よろしくお願いします。";
        } else if (needTimeTypes.indexOf(type) > -1 && timePoint) {
          Logger.log(timePoint);
          var mmTimePoint = moment(timePoint);
          var hour = mmTimePoint.hour();
          var minute = mmTimePoint.minute();
          var timePointStr = hour.toString() + "時" + minute.toString() + "分";
          body += "To:関係各位\nお疲れ様です。" + name + "です。\n表題の件ですが、" + reason + "の為、" + timePointStr + "（JST）から";
          if (type == "外出") {
            body += timeCnt + timeUnit + "くらい外出させて頂きたいと思います。\n以上、よろしくお願いします。";
          } else if (type == "遅刻") {
            body += "出社させて頂きたいと思います。\n以上、よろしくお願いします。";
          } else {
            body += "早退させて頂きたいと思います。\n以上、よろしくお願いします。";
          }
        }
        if (body) {
          var confirmCnt = "-----\\nSubject: " + subject + "\\n-----\\nBody:\\n" + body + "\\n-----\\n";
          var confirm = Browser.msgBox("Do you want to send this mail?", confirmCnt, Browser.Buttons.YES_NO);
          if (confirm == "yes") {
            var toEmail = Browser.inputBox('Nhập địa chỉ email:');
            GmailApp.sendEmail(toEmail, subject, body, {'from': mail});
            var sentSheet = xnpSS.getSheetByName('sent');
            var targetRow = sentSheet.getLastRow()+1;
            var targetRange = sentSheet.getRange("A" + targetRow.toString() + ":J" + targetRow.toString());
            targetRange.setValues(dataRange.getValues());
            Browser.msgBox("Mail của bạn đã được gửi đi ^^");
          }
        }
      } else {
        Browser.msgBox("Xin hãy kiểm tra lại thông tin đã nhập!");
      }
    }
  }
  // Release the lock so that other processes can continue.
   lock.releaseLock();
}

var enumerateDaysBetweenDates = function(startDate, endDate) {
    var dates = [];
    var currDate = startDate;

    while(!currDate.isAfter(endDate)) {
      Logger.log(currDate.format("YYYY-MM-DD"));
      dates.push(currDate.format("YYYY-MM-DD"));
      currDate.add(1,"days");
    }

    return dates;
};

var addCalendarEvent = function(name, type, dates, timePoint, timeCnt, timeUnit) {
  var vnlabCal = CalendarApp.getCalendarById("runsystem.net_ks1mp6gdm9c73i3r9a18n66d7k@group.calendar.google.com");
  var noNeedTimeTypes = ["全休","自宅業務","午前休","午後休"];
  var needTimeTypes = ["遅刻","早退","外出"];
  var title = name + " " + type;
  if (noNeedTimeTypes.indexOf(type)) {
    for(var i = 0; i < dates.length; i++) {
      vnlabCal.createAllDayEvent(title, new Date(dates[i]));
    }
  }
  
  if (needTimeTypes.indexOf(type)) {
    var mmTimePoint = moment(timePoint);
    var hour = mmTimePoint.hour();
    var minute = mmTimePoint.minute();
    var startTime, endTime;
    for(var i = 0; i < dates.length; i++) {
      if (type == "外出") {
        startTime = new Date(dates[i] + " " + timePoint);
        endTime = moment(startTime).add({hours:hour, minutes:minute}).toDate();
      } else if (type == "遅刻") {
        startTime = new Date(dates[i] + " 08:00");
        endTime = new Date(dates[i] + " " + timePoint);
      } else { //早退
        startTime = new Date(dates[i] + " " + timePoint);
        endTime = new Date(dates[i] + " 17:30");
      }
      vnlabCal.createEvent(title, startTime, endTime);
    }
  }
}
huhu